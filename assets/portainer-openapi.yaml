openapi: 3.0.1
info:
  title: PortainerCE API
  description: |
    Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API.
    Examples are available at https://documentation.portainer.io/api/api-examples/
    You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).

    # Authentication

    Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used.
    Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request
    with the **Bearer** authentication mechanism.

    Example:

    ```
    Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
    ```

    # Security

    Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).

    Different access policies are available:

    - Public access
    - Authenticated access
    - Restricted access
    - Administrator access

    ### Public access

    No authentication is required to access the environments(endpoints) with this access policy.

    ### Authenticated access

    Authentication is required to access the environments(endpoints) with this access policy.

    ### Restricted access

    Authentication is required to access the environments(endpoints) with this access policy.
    Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.

    ### Administrator access

    Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.

    # Execute Docker requests

    Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).

    Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.

    To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).

    # Private Registry

    Using private registry, you will need to pass a based64 encoded JSON string ‘{"registryId":\<registryID value\>}’ inside the Request Header. The parameter name is "X-Registry-Auth".
    \<registryID value\> - The registry ID where the repository was created.

    Example:

    ```
    eyJyZWdpc3RyeUlkIjoxfQ==
    ```

    **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/).
  contact:
    email: info@portainer.io
  license:
    name: zlib
    url: https://github.com/portainer/portainer/blob/develop/LICENSE
  version: 2.28.1
servers:
- url: /api
tags:
- name: auth
  description: Authenticate against Portainer HTTP API
- name: backup
  description: Manage backups
- name: custom_templates
  description: Manage Custom Templates
- name: docker
  description: Manage Docker resources
- name: edge
  description: Manage Edge related environment(endpoint) settings
- name: edge_groups
  description: Manage Edge Groups
- name: edge_jobs
  description: Manage Edge Jobs
- name: edge_stacks
  description: Manage Edge Stacks
- name: edge_templates
  description: Manage Edge Templates
- name: endpoint_groups
  description: Manage environment(endpoint) groups
- name: endpoints
  description: Manage Docker environments(endpoints)
- name: gitops
  description: Operate git repository
- name: helm
  description: Manage Helm charts
- name: intel
  description: Manage Intel AMT settings
- name: kubernetes
  description: Manage Kubernetes cluster
- name: ldap
  description: Manage LDAP settings
- name: motd
  description: Fetch the message of the day
- name: registries
  description: Manage Docker registries
- name: resource_controls
  description: Manage access control on Docker resources
- name: roles
  description: Manage roles
- name: settings
  description: Manage Portainer settings
- name: ssl
  description: Manage ssl settings
- name: stacks
  description: Manage stacks
- name: status
  description: Information about the Portainer instance
- name: system
  description: Manage Portainer system
- name: tags
  description: Manage tags
- name: team_memberships
  description: Manage team memberships
- name: teams
  description: Manage teams
- name: templates
  description: Manage App Templates
- name: upload
  description: Upload files
- name: users
  description: Manage users
- name: webhooks
  description: Manage webhooks
- name: websocket
  description: Create exec sessions using websockets
paths:
  /auth:
    post:
      tags:
      - auth
      summary: Authenticate
      description: |-
        **Access policy**: public
        Use this environment(endpoint) to authenticate against Portainer using a username and password.
      operationId: AuthenticateUser
      requestBody:
        description: Credentials used for authentication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.authenticatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth.authenticateResponse'
        "400":
          description: Invalid request
          content: {}
        "422":
          description: Invalid Credentials
          content: {}
        "500":
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  /auth/logout:
    post:
      tags:
      - auth
      summary: Logout
      description: "**Access policy**: public"
      operationId: Logout
      responses:
        "204":
          description: Success
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /auth/oauth/validate:
    post:
      tags:
      - auth
      summary: Authenticate with OAuth
      description: "**Access policy**: public"
      operationId: ValidateOAuth
      requestBody:
        description: OAuth Credentials used for authentication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.oauthPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth.authenticateResponse'
        "400":
          description: Invalid request
          content: {}
        "422":
          description: Invalid Credentials
          content: {}
        "500":
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  /backup:
    post:
      tags:
      - backup
      summary: Creates an archive with a system data snapshot that could be used to
        restore the system.
      description: |-
        Creates an archive with a system data snapshot that could be used to restore the system.
        **Access policy**: admin
      operationId: Backup
      requestBody:
        description: An object contains the password to encrypt the backup with
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backup.backupPayload'
        required: false
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /custom_templates:
    get:
      tags:
      - custom_templates
      summary: List available custom templates
      description: |-
        List available custom templates.
        **Access policy**: authenticated
      operationId: CustomTemplateList
      parameters:
      - name: type
        in: query
        description: Template types
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: edge
        in: query
        description: Filter by edge templates
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.CustomTemplate'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /custom_templates/{id}:
    get:
      tags:
      - custom_templates
      summary: Inspect a custom template
      description: |-
        Retrieve details about a template.
        **Access policy**: authenticated
      operationId: CustomTemplateInspect
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.CustomTemplate'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Template not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - custom_templates
      summary: Update a template
      description: |-
        Update a template.
        **Access policy**: authenticated
      operationId: CustomTemplateUpdate
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Template details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customtemplates.customTemplateUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.CustomTemplate'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access template
          content: {}
        "404":
          description: Template not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - custom_templates
      summary: Remove a template
      description: |-
        Remove a template.
        **Access policy**: authenticated
      operationId: CustomTemplateDelete
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Access denied to resource
          content: {}
        "404":
          description: Template not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /custom_templates/{id}/file:
    get:
      tags:
      - custom_templates
      summary: Get Template stack file content.
      description: |-
        Retrieve the content of the Stack file for the specified custom template
        **Access policy**: authenticated
      operationId: CustomTemplateFile
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customtemplates.fileResponse'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Custom template not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /custom_templates/{id}/git_fetch:
    put:
      tags:
      - custom_templates
      summary: Fetch the latest config file content based on custom template's git
        repository configuration
      description: |-
        Retrieve details about a template created from git repository method.
        **Access policy**: authenticated
      operationId: CustomTemplateGitFetch
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customtemplates.fileResponse'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Custom template not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /custom_templates/create/file:
    post:
      tags:
      - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - Description
              - File
              - Note
              - Platform
              - Title
              - Type
              type: object
              properties:
                Title:
                  type: string
                  description: Title of the template
                Description:
                  type: string
                  description: Description of the template
                Note:
                  type: string
                  description: A note that will be displayed in the UI. Supports HTML
                    content
                Platform:
                  type: integer
                  description: "Platform associated to the template (1 - 'linux',\
                    \ 2 - 'windows')"
                  format: int32
                  enum:
                  - "1"
                  - "2"
                Type:
                  type: integer
                  description: "Type of created stack (1 - swarm, 2 - compose, 3 -\
                    \ kubernetes)"
                  format: int32
                  enum:
                  - "1"
                  - "2"
                  - "3"
                File:
                  type: string
                  description: File
                  format: binary
                Logo:
                  type: string
                  description: URL of the template's logo
                Variables:
                  type: string
                  description: A json array of variables definitions
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.CustomTemplate'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /custom_templates/create/repository:
    post:
      tags:
      - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateRepository
      requestBody:
        description: Required when using method=repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customtemplates.customTemplateFromGitRepositoryPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.CustomTemplate'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /custom_templates/create/string:
    post:
      tags:
      - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateString
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customtemplates.customTemplateFromFileContentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.CustomTemplate'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /docker/{environmentId}/containers/{containerId}/gpus:
    get:
      tags:
      - docker
      summary: Fetch container gpus data
      description: '**Access policy**:'
      operationId: dockerContainerGpusInspect
      parameters:
      - name: environmentId
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: containerId
        in: path
        description: Container identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/containers.containerGpusResponse'
        "400":
          description: Bad request
          content: {}
        "404":
          description: Environment or container not found
          content: {}
        "500":
          description: Internal server error
          content: {}
      security:
      - jwt: []
  /docker/{environmentId}/dashboard:
    post:
      tags:
      - docker
      summary: Get counters for the dashboard
      description: "**Access policy**: restricted"
      operationId: dockerDashboard
      parameters:
      - name: environmentId
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/docker.dashboardResponse'
        "400":
          description: Bad request
          content: {}
        "500":
          description: Internal server error
          content: {}
      security:
      - jwt: []
  /docker/{environmentId}/images:
    get:
      tags:
      - docker
      summary: Fetch images
      description: '**Access policy**:'
      operationId: dockerImagesList
      parameters:
      - name: environmentId
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: withUsage
        in: query
        description: Include image usage information
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/images.ImageResponse'
        "400":
          description: Bad request
          content: {}
        "500":
          description: Internal server error
          content: {}
      security:
      - jwt: []
  /edge_groups:
    get:
      tags:
      - edge_groups
      summary: list EdgeGroups
      description: "**Access policy**: administrator"
      operationId: EdgeGroupList
      responses:
        "200":
          description: EdgeGroups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edgegroups.decoratedEdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - edge_groups
      summary: Create an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupCreate
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgegroups.edgeGroupCreatePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /edge_groups/{id}:
    get:
      tags:
      - edge_groups
      summary: Inspects an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupInspect
      parameters:
      - name: id
        in: path
        description: EdgeGroup Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - edge_groups
      summary: Updates an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EgeGroupUpdate
      parameters:
      - name: id
        in: path
        description: EdgeGroup Id
        required: true
        schema:
          type: integer
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgegroups.edgeGroupUpdatePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - edge_groups
      summary: Deletes an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupDelete
      parameters:
      - name: id
        in: path
        description: EdgeGroup Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "409":
          description: Edge group is in use by an Edge stack or Edge job
          content: {}
        "500":
          description: Server error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs:
    get:
      tags:
      - edge_jobs
      summary: Fetch EdgeJobs list
      description: "**Access policy**: administrator"
      operationId: EdgeJobList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.EdgeJob'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/{id}:
    get:
      tags:
      - edge_jobs
      summary: Inspect an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobInspect
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeJob'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - edge_jobs
      summary: Update an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobUpdate
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgejobs.edgeJobUpdatePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeJob'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - edge_jobs
      summary: Delete an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobDelete
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/{id}/file:
    get:
      tags:
      - edge_jobs
      summary: Fetch a file of an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobFile
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edgejobs.edgeJobFileResponse'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/{id}/tasks:
    get:
      tags:
      - edge_jobs
      summary: Fetch the list of tasks on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksList
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edgejobs.taskContainer'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/{id}/tasks/{taskID}/logs:
    get:
      tags:
      - edge_jobs
      summary: Fetch the log for a specific task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTaskLogsInspect
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      - name: taskID
        in: path
        description: Task Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edgejobs.fileResponse'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - edge_jobs
      summary: Collect the log for a specific task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksCollect
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      - name: taskID
        in: path
        description: Task Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    delete:
      tags:
      - edge_jobs
      summary: Clear the log for a specifc task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksClear
      parameters:
      - name: id
        in: path
        description: EdgeJob Id
        required: true
        schema:
          type: integer
      - name: taskID
        in: path
        description: Task Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/create/file:
    post:
      tags:
      - edge_jobs
      summary: Create an EdgeJob from a file
      description: "**Access policy**: administrator"
      operationId: EdgeJobCreateFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - CronExpression
              - EdgeGroups
              - Endpoints
              - Name
              - file
              type: object
              properties:
                file:
                  type: string
                  description: Content of the Stack file
                  format: binary
                Name:
                  type: string
                  description: Name of the stack
                CronExpression:
                  type: string
                  description: A cron expression to schedule this job
                EdgeGroups:
                  type: string
                  description: JSON stringified array of Edge Groups ids
                Endpoints:
                  type: string
                  description: JSON stringified array of Environment ids
                Recurring:
                  type: boolean
                  description: If recurring
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_jobs/create/string:
    post:
      tags:
      - edge_jobs
      summary: Create an EdgeJob from a text
      description: "**Access policy**: administrator"
      operationId: EdgeJobCreateString
      requestBody:
        description: EdgeGroup data when method is string
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/edgejobs.edgeJobCreateFromFileContentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeGroup'
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /edge_stacks:
    get:
      tags:
      - edge_stacks
      summary: Fetches the list of EdgeStacks
      description: "**Access policy**: administrator"
      operationId: EdgeStackList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_stacks/{id}:
    get:
      tags:
      - edge_stacks
      summary: Inspect an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackInspect
      parameters:
      - name: id
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - edge_stacks
      summary: Update an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackUpdate
      parameters:
      - name: id
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      requestBody:
        description: EdgeStack data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgestacks.updateEdgeStackPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - edge_stacks
      summary: Delete an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackDelete
      parameters:
      - name: id
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_stacks/{id}/file:
    get:
      tags:
      - edge_stacks
      summary: Fetches the stack file for an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackFile
      parameters:
      - name: id
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edgestacks.stackFileResponse'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_stacks/{id}/status:
    put:
      tags:
      - edge_stacks
      summary: Update an EdgeStack status
      description: Authorized only if the request is done by an Edge Environment(Endpoint)
      operationId: EdgeStackStatusUpdate
      parameters:
      - name: id
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      requestBody:
        description: EdgeStack status payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgestacks.updateStatusPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /edge_stacks/create/file:
    post:
      tags:
      - edge_stacks
      summary: Create an EdgeStack from file
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateFile
      parameters:
      - name: dryrun
        in: query
        description: "if true, will not create an edge stack, but just will check\
          \ the settings and return a non-persisted edge stack object"
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - DeploymentType
              - EdgeGroups
              - Name
              - file
              type: object
              properties:
                Name:
                  type: string
                  description: "Name of the stack. it must only consist of lowercase\
                    \ alphanumeric characters, hyphens, or underscores as well as\
                    \ start with a letter or number"
                file:
                  type: string
                  description: Content of the Stack file
                  format: binary
                EdgeGroups:
                  type: string
                  description: JSON stringified array of Edge Groups ids
                DeploymentType:
                  type: integer
                  description: "deploy type 0 - 'compose', 1 - 'kubernetes'"
                  format: int32
                Registries:
                  type: string
                  description: JSON stringified array of Registry ids to use for this
                    stack
                UseManifestNamespaces:
                  type: boolean
                  description: "Uses the manifest's namespaces instead of the default\
                    \ one, relevant only for kube environments"
                PrePullImage:
                  type: boolean
                  description: Pre Pull image
                RetryDeploy:
                  type: boolean
                  description: Retry deploy
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad request
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /edge_stacks/create/repository:
    post:
      tags:
      - edge_stacks
      summary: Create an EdgeStack from a git repository
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateRepository
      parameters:
      - name: dryrun
        in: query
        description: "if true, will not create an edge stack, but just will check\
          \ the settings and return a non-persisted edge stack object"
        schema:
          type: string
      requestBody:
        description: stack config
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/edgestacks.edgeStackFromGitRepositoryPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad request
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /edge_stacks/create/string:
    post:
      tags:
      - edge_stacks
      summary: Create an EdgeStack from a text
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateString
      parameters:
      - name: dryrun
        in: query
        description: "if true, will not create an edge stack, but just will check\
          \ the settings and return a non-persisted edge stack object"
        schema:
          type: string
      requestBody:
        description: stack config
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/edgestacks.edgeStackFromStringPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EdgeStack'
        "400":
          description: Bad request
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Edge compute features are disabled
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /endpoint_groups:
    get:
      tags:
      - endpoint_groups
      summary: List Environment(Endpoint) groups
      description: |-
        List all environment(endpoint) groups based on the current user authorizations. Will
        return all environment(endpoint) groups if using an administrator account otherwise it will
        only return authorized environment(endpoint) groups.
        **Access policy**: restricted
      operationId: EndpointGroupList
      responses:
        "200":
          description: Environment(Endpoint) group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.EndpointGroup'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - endpoint_groups
      summary: Create an Environment(Endpoint) Group
      description: |-
        Create a new environment(endpoint) group.
        **Access policy**: administrator
      requestBody:
        description: Environment(Endpoint) Group details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpointgroups.endpointGroupCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EndpointGroup'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /endpoint_groups/{id}:
    get:
      tags:
      - endpoint_groups
      summary: Inspect an Environment(Endpoint) group
      description: |-
        Retrieve details abont an environment(endpoint) group.
        **Access policy**: administrator
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) group identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EndpointGroup'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: EndpointGroup not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - endpoint_groups
      summary: Update an environment(endpoint) group
      description: |-
        Update an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupUpdate
      parameters:
      - name: id
        in: path
        description: EndpointGroup identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: EndpointGroup details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpointgroups.endpointGroupUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.EndpointGroup'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: EndpointGroup not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - endpoint_groups
      summary: Remove an environment(endpoint) group
      description: |-
        Remove an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupDelete
      parameters:
      - name: id
        in: path
        description: EndpointGroup identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: EndpointGroup not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoint_groups/{id}/endpoints/{endpointId}:
    put:
      tags:
      - endpoint_groups
      summary: Add an environment(endpoint) to an environment(endpoint) group
      description: |-
        Add an environment(endpoint) to an environment(endpoint) group
        **Access policy**: administrator
      operationId: EndpointGroupAddEndpoint
      parameters:
      - name: id
        in: path
        description: EndpointGroup identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: EndpointGroup not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    delete:
      tags:
      - endpoint_groups
      summary: Removes environment(endpoint) from an environment(endpoint) group
      description: "**Access policy**: administrator"
      operationId: EndpointGroupDeleteEndpoint
      parameters:
      - name: id
        in: path
        description: EndpointGroup identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: EndpointGroup not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints:
    get:
      tags:
      - endpoints
      summary: List environments(endpoints)
      description: |-
        List all environments(endpoints) based on the current user authorizations. Will
        return all environments(endpoints) if using an administrator or team leader account otherwise it will
        only return authorized environments(endpoints).
        **Access policy**: restricted
      operationId: EndpointList
      parameters:
      - name: start
        in: query
        description: Start searching from
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit results to this value
        schema:
          type: integer
      - name: order
        in: query
        description: Order sorted results by desc/asc
        schema:
          type: integer
      - name: search
        in: query
        description: Search query
        schema:
          type: string
      - name: groupIds
        in: query
        description: List environments(endpoints) of these groups
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: status
        in: query
        description: List environments(endpoints) by this status
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: types
        in: query
        description: List environments(endpoints) of this type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: tagIds
        in: query
        description: search environments(endpoints) with these tags (depends on tagsPartialMatch)
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: tagsPartialMatch
        in: query
        description: "If true, will return environment(endpoint) which has one of\
          \ tagIds, if false (or missing) will return only environments(endpoints)\
          \ that has all the tags"
        schema:
          type: boolean
      - name: endpointIds
        in: query
        description: will return only these environments(endpoints)
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: provisioned
        in: query
        description: "If true, will return environment(endpoint) that were provisioned"
        schema:
          type: boolean
      - name: agentVersions
        in: query
        description: will return only environments with on of these agent versions
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: edgeAsync
        in: query
        description: "if exists true show only edge async agents, false show only\
          \ standard edge agents. if missing, will show both types (relevant only\
          \ for edge agents)"
        schema:
          type: boolean
      - name: edgeDeviceUntrusted
        in: query
        description: "if true, show only untrusted edge agents, if false show only\
          \ trusted edge agents (relevant only for edge agents)"
        schema:
          type: boolean
      - name: edgeCheckInPassedSeconds
        in: query
        description: "if bigger then zero, show only edge agents that checked-in in\
          \ the last provided seconds (relevant only for edge agents)"
        schema:
          type: number
      - name: excludeSnapshots
        in: query
        description: "if true, the snapshot data won't be retrieved"
        schema:
          type: boolean
      - name: name
        in: query
        description: will return only environments(endpoints) with this name
        schema:
          type: string
      - name: edgeStackStatus
        in: query
        description: only applied when edgeStackId exists. Filter the returned environments
          based on their deployment status in the stack (not the environment status!)
        schema:
          type: string
      responses:
        "200":
          description: Endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Endpoint'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - endpoints
      summary: Create a new environment(endpoint)
      description: |-
        Create a new environment(endpoint) that will be used to manage an environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointCreate
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - EdgeTunnelServerAddress
              - EndpointCreationType
              - Name
              type: object
              properties:
                Name:
                  type: string
                  description: "Name that will be used to identify this environment(endpoint)\
                    \ (example: my-environment)"
                EndpointCreationType:
                  type: integer
                  description: "Environment(Endpoint) type. Value must be one of:\
                    \ 1 (Local Docker environment), 2 (Agent environment), 3 (Azure\
                    \ environment), 4 (Edge agent environment) or 5 (Local Kubernetes\
                    \ Environment)"
                  format: int32
                ContainerEngine:
                  type: string
                  description: "Container engine used by the environment(endpoint).\
                    \ Value must be one of: 'docker' or 'podman'"
                URL:
                  type: string
                  description: "URL or IP address of a Docker host (example: docker.mydomain.tld:2375).\
                    \ Defaults to local if not specified (Linux: /var/run/docker.sock,\
                    \ Windows: //./pipe/docker_engine). Cannot be empty if EndpointCreationType\
                    \ is set to 4 (Edge agent environment)"
                PublicURL:
                  type: string
                  description: "URL or IP address where exposed containers will be\
                    \ reachable. Defaults to URL if not specified (example: docker.mydomain.tld:2375)"
                GroupID:
                  type: integer
                  description: Environment(Endpoint) group identifier. If not specified
                    will default to 1 (unassigned).
                  format: int32
                TLS:
                  type: boolean
                  description: Require TLS to connect against this environment(endpoint).
                    Must be true if EndpointCreationType is set to 2 (Agent environment)
                TLSSkipVerify:
                  type: boolean
                  description: Skip server verification when using TLS. Must be true
                    if EndpointCreationType is set to 2 (Agent environment)
                TLSSkipClientVerify:
                  type: boolean
                  description: Skip client verification when using TLS. Must be true
                    if EndpointCreationType is set to 2 (Agent environment)
                TLSCACertFile:
                  type: string
                  description: TLS CA certificate file
                  format: binary
                TLSCertFile:
                  type: string
                  description: TLS client certificate file
                  format: binary
                TLSKeyFile:
                  type: string
                  description: TLS client key file
                  format: binary
                AzureApplicationID:
                  type: string
                  description: Azure application ID. Required if environment(endpoint)
                    type is set to 3
                AzureTenantID:
                  type: string
                  description: Azure tenant ID. Required if environment(endpoint)
                    type is set to 3
                AzureAuthenticationKey:
                  type: string
                  description: Azure authentication key. Required if environment(endpoint)
                    type is set to 3
                TagIds:
                  type: array
                  description: List of tag identifiers to which this environment(endpoint)
                    is associated
                  items:
                    type: integer
                EdgeCheckinInterval:
                  type: integer
                  description: The check in interval for edge agent (in seconds)
                  format: int32
                EdgeTunnelServerAddress:
                  type: string
                  description: URL or IP address that will be used to establish a
                    reverse tunnel
                Gpus:
                  type: string
                  description: "List of GPUs - json stringified array of {name, value}\
                    \ structs"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Endpoint'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Name is not unique
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    delete:
      tags:
      - endpoints
      summary: Remove multiple environments
      description: |-
        Deprecated: use the `POST` endpoint instead.
        Remove multiple environments and optionally clean-up associated resources.
        **Access policy**: Administrator only.
      operationId: EndpointDeleteBatchDeprecated
      requestBody:
        description: "List of environments to delete, with optional deleteCluster\
          \ flag to clean-up associated resources (cloud environments only)"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.endpointDeleteBatchPayload'
        required: true
      responses:
        "204":
          description: Environment(s) successfully deleted.
          content: {}
        "207":
          description: "Partial success. Some environments were deleted successfully,\
            \ while others failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints.endpointDeleteBatchPartialResponse'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to delete the specified
            environments.
          content: {}
      deprecated: true
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /endpoints/{id}:
    get:
      tags:
      - endpoints
      summary: Inspect an environment(endpoint)
      description: |-
        Retrieve details about an environment(endpoint).
        **Access policy**: restricted
      operationId: EndpointInspect
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Endpoint'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - endpoints
      summary: Update an environment(endpoint)
      description: |-
        Update an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointUpdate
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Environment(Endpoint) details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.endpointUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Endpoint'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "409":
          description: Name is not unique
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - endpoints
      summary: Remove an environment
      description: |-
        Remove the environment associated to the specified identifier and optionally clean-up associated resources.
        **Access policy**: Administrator only.
      operationId: EndpointDelete
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Environment successfully deleted.
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "404":
          description: Unable to find the environment with the specified identifier
            inside the database.
          content: {}
        "500":
          description: Server error occurred while attempting to delete the environment.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /endpoints/{id}/association:
    put:
      tags:
      - endpoints
      summary: De-association an edge environment(endpoint)
      description: |-
        De-association an edge environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointAssociationDelete
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/docker/v2/browse/put:
    post:
      tags:
      - endpoints
      summary: Upload a file under a specific path on the file system of an environment
        (endpoint)
      description: |-
        Use this environment(endpoint) to upload TLS files.
        **Access policy**: administrator
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: volumeID
        in: query
        description: Optional volume identifier to upload the file
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - Path
              - file
              type: object
              properties:
                Path:
                  type: string
                  description: The destination path to upload the file to
                file:
                  type: string
                  description: The file to upload
                  format: binary
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/dockerhub/{registryId}:
    get:
      tags:
      - endpoints
      summary: fetch docker pull limits
      description: |-
        get docker pull limits for a docker hub registry in the environment
        **Access policy**:
      operationId: endpointDockerhubStatus
      parameters:
      - name: id
        in: path
        description: endpoint ID
        required: true
        schema:
          type: integer
      - name: registryId
        in: path
        description: registry ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints.dockerhubStatusResponse'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: registry or endpoint not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/edge/jobs/{jobID}/logs:
    post:
      tags:
      - edge
      - endpoints
      summary: Inspect an EdgeJob Log
      description: "**Access policy**: public"
      parameters:
      - name: id
        in: path
        description: environment(endpoint) Id
        required: true
        schema:
          type: integer
      - name: jobID
        in: path
        description: Job Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /endpoints/{id}/edge/stacks/{stackId}:
    get:
      tags:
      - edge
      - endpoints
      - edge_stacks
      summary: Inspect an Edge Stack for an Environment(Endpoint)
      description: "**Access policy**: public"
      parameters:
      - name: id
        in: path
        description: environment(endpoint) Id
        required: true
        schema:
          type: integer
      - name: stackId
        in: path
        description: EdgeStack Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edge.StackPayload'
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /endpoints/{id}/edge/status:
    get:
      tags:
      - endpoints
      summary: Get environment(endpoint) status
      description: |-
        environment(endpoint) for edge agent to check status of environment(endpoint)
        **Access policy**: restricted only to Edge environments(endpoints)
      operationId: EndpointEdgeStatusInspect
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/endpointedge.endpointEdgeStatusInspectResponse'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access environment(endpoint)
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/forceupdateservice:
    put:
      tags:
      - endpoints
      summary: force update a docker service
      description: |-
        force update a docker service
        **Access policy**: authenticated
      operationId: endpointForceUpdateService
      parameters:
      - name: id
        in: path
        description: endpoint identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.forceUpdateServicePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/swarm.ServiceUpdateResponse'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: endpoint not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /endpoints/{id}/kubernetes/helm:
    get:
      tags:
      - helm
      summary: List Helm Releases
      description: "**Access policy**: authenticated"
      operationId: HelmList
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: query
        description: specify an optional namespace
        schema:
          type: string
      - name: filter
        in: query
        description: specify an optional filter
        schema:
          type: string
      - name: selector
        in: query
        description: specify an optional selector
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release.ReleaseElement'
        "400":
          description: Invalid environment(endpoint) identifier
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - helm
      summary: Install Helm Chart
      description: "**Access policy**: authenticated"
      operationId: HelmInstall
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Chart details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helm.installChartPayload'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release.Release'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: payload
  /endpoints/{id}/kubernetes/helm/{release}:
    delete:
      tags:
      - helm
      summary: Delete Helm Release
      description: "**Access policy**: authenticated"
      operationId: HelmDelete
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: release
        in: path
        description: The name of the release/application to uninstall
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        description: An optional namespace
        schema:
          type: string
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid environment(endpoint) id or bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        "500":
          description: Server error or helm error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/registries:
    get:
      tags:
      - endpoints
      summary: List Registries on environment
      description: |-
        List all registries based on the current user authorizations in current environment.
        **Access policy**: authenticated
      operationId: endpointRegistriesList
      parameters:
      - name: namespace
        in: query
        description: "required if kubernetes environment, will show registries by\
          \ namespace"
        schema:
          type: string
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Registry'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/{id}/registries/{registryId}:
    put:
      tags:
      - endpoints
      summary: update registry access for environment
      description: "**Access policy**: authenticated"
      operationId: endpointRegistryAccess
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: registryId
        in: path
        description: Registry identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.registryAccessPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Endpoint not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /endpoints/{id}/settings:
    put:
      tags:
      - endpoints
      summary: Update settings for an environment(endpoint)
      description: |-
        Update settings for an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointSettingsUpdate
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Environment(Endpoint) details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.endpointSettingsUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Endpoint'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /endpoints/{id}/snapshot:
    post:
      tags:
      - endpoints
      summary: Snapshots an environment(endpoint)
      description: |-
        Snapshots an environment(endpoint)
        **Access policy**: administrator
      operationId: EndpointSnapshot
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Environment(Endpoint) not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /endpoints/delete:
    post:
      tags:
      - endpoints
      summary: Remove multiple environments
      description: |-
        Remove multiple environments and optionally clean-up associated resources.
        **Access policy**: Administrator only.
      operationId: EndpointDeleteBatch
      requestBody:
        description: "List of environments to delete, with optional deleteCluster\
          \ flag to clean-up associated resources (cloud environments only)"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.endpointDeleteBatchPayload'
        required: true
      responses:
        "204":
          description: Environment(s) successfully deleted.
          content: {}
        "207":
          description: "Partial success. Some environments were deleted successfully,\
            \ while others failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/endpoints.endpointDeleteBatchPartialResponse'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to delete the specified
            environments.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /endpoints/global-key:
    post:
      tags:
      - endpoints
      summary: Create or retrieve the endpoint for an EdgeID
      operationId: EndpointCreateGlobalKey
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/endpoints.endpointCreateGlobalKeyResponse'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
  /endpoints/relations:
    put:
      tags:
      - endpoints
      summary: Update relations for a list of environments
      description: |-
        Update relations for a list of environments
        Edge groups, tags and environment group can be updated.

        **Access policy**: administrator
      operationId: EndpointUpdateRelations
      requestBody:
        description: Environment relations data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/endpoints.endpointUpdateRelationsPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
      x-codegen-request-body-name: body
  /endpoints/snapshot:
    post:
      tags:
      - endpoints
      summary: Snapshot all environments(endpoints)
      description: |-
        Snapshot all environments(endpoints)
        **Access policy**: administrator
      operationId: EndpointSnapshots
      responses:
        "204":
          description: Success
          content: {}
        "500":
          description: Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /gitops/repo/file/preview:
    post:
      tags:
      - gitops
      summary: preview the content of target file in the git repository
      description: |-
        Retrieve the compose file content based on git repository configuration
        **Access policy**: authenticated
      operationId: GitOperationRepoFilePreview
      requestBody:
        description: Template details
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/gitops.repositoryFilePreviewPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gitops.fileResponse'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/applications:
    get:
      tags:
      - kubernetes
      summary: "Get a list of applications across all namespaces in the cluster. If\
        \ the nodeName is provided, it will return the applications running on that\
        \ node."
      description: |-
        Get a list of applications across all namespaces in the cluster. If the nodeName is provided, it will return the applications running on that node.
        **Access policy**: authenticated
      operationId: GetAllKubernetesApplications
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: query
        description: Namespace name
        required: true
        schema:
          type: string
      - name: nodeName
        in: query
        description: Node name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sApplication'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of applications from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/applications/count:
    get:
      tags:
      - kubernetes
      summary: Get Applications count
      description: |-
        Get the count of Applications across all namespaces in the cluster. If the nodeName is provided, it will return the count of applications running on that node.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesApplicationsCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the count
            of all applications from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/cluster_role_bindings/delete:
    post:
      tags:
      - kubernetes
      summary: Delete cluster role bindings
      description: |-
        Delete the provided list of cluster role bindings.
        **Access policy**: Authenticated user.
      operationId: DeleteClusterRoleBindings
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A list of cluster role bindings to delete
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific cluster role binding.
          content: {}
        "500":
          description: Server error occurred while attempting to delete cluster role
            bindings.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/cluster_roles/delete:
    post:
      tags:
      - kubernetes
      summary: Delete cluster roles
      description: |-
        Delete the provided list of cluster roles.
        **Access policy**: Authenticated user.
      operationId: DeleteClusterRoles
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A list of cluster roles to delete
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific cluster role.
          content: {}
        "500":
          description: Server error occurred while attempting to delete cluster roles.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/clusterrolebindings:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes cluster role bindings
      description: |-
        Get a list of kubernetes cluster role bindings within the given environment at the cluster level.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesClusterRoleBindings
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sClusterRoleBinding'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of cluster role bindings.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/clusterroles:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes cluster roles
      description: |-
        Get a list of kubernetes cluster roles within the given environment at the cluster level.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesClusterRoles
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sClusterRole'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of cluster roles.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/configmaps:
    get:
      tags:
      - kubernetes
      summary: Get a list of ConfigMaps
      description: |-
        Get a list of ConfigMaps across all namespaces in the cluster. For non-admin users, it will only return ConfigMaps based on the namespaces that they have access to.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesConfigMaps
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: isUsed
        in: query
        description: Set to true to include information about applications that use
          the ConfigMaps in the response
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sConfigMap'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve all configmaps
            from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/configmaps/count:
    get:
      tags:
      - kubernetes
      summary: Get ConfigMaps count
      description: |-
        Get the count of ConfigMaps across all namespaces in the cluster. For non-admin users, it will only return the count of ConfigMaps based on the namespaces that they have access to.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesConfigMapsCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the count
            of all configmaps from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/cron_jobs:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes Cron Jobs
      description: |-
        Get a list of kubernetes Cron Jobs that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesCronJobs
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sCronJob'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of Cron Jobs.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/cron_jobs/delete:
    post:
      tags:
      - kubernetes
      summary: Delete Cron Jobs
      description: |-
        Delete the provided list of Cron Jobs.
        **Access policy**: Authenticated user.
      operationId: DeleteCronJobs
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of Cron Jobs to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sCronJobDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific service account.
          content: {}
        "500":
          description: Server error occurred while attempting to delete Cron Jobs.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/dashboard:
    get:
      tags:
      - kubernetes
      summary: Get the dashboard summary data
      description: |-
        Get the dashboard summary data which is simply a count of a range of different commonly used kubernetes resources.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesDashboard
      parameters:
      - name: id
        in: path
        description: Environment (Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sDashboard'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/ingresscontrollers:
    get:
      tags:
      - kubernetes
      summary: Get a list of ingress controllers
      description: |-
        Get a list of ingress controllers for the given environment. If the allowedOnly query parameter is set, only ingress controllers that are allowed by the environment's ingress configuration will be returned.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesIngressControllers
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: allowedOnly
        in: query
        description: Only return allowed ingress controllers
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sIngressController'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve ingress
            controllers
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update (block/unblock) ingress controllers
      description: |-
        Update (block/unblock) ingress controllers for the provided environment.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesIngressControllers
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Ingress controllers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/kubernetes.K8sIngressController'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find the ingress controllers to update.
          content: {}
        "500":
          description: Server error occurred while attempting to update ingress controllers.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/ingresses:
    get:
      tags:
      - kubernetes
      summary: Get kubernetes ingresses at the cluster level
      description: |-
        Get kubernetes ingresses at the cluster level for the provided environment.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesClusterIngresses
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: withServices
        in: query
        description: Lookup services associated with each ingress
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sIngressInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve ingresses.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/ingresses/count:
    get:
      tags:
      - kubernetes
      summary: Get Ingresses count
      description: |-
        Get the number of kubernetes ingresses within the given environment.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesClusterIngressesCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve ingresses
            count.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/ingresses/delete:
    post:
      tags:
      - kubernetes
      summary: Delete one or more Ingresses
      description: |-
        Delete one or more Ingresses in the provided environment.
        **Access policy**: Authenticated user.
      operationId: DeleteKubernetesIngresses
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sIngressDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific ingress.
          content: {}
        "500":
          description: Server error occurred while attempting to delete specified
            ingresses.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/jobs:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes Jobs
      description: |-
        Get a list of kubernetes Jobs that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesJobs
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: includeCronJobChildren
        in: query
        description: Whether to include Jobs that have a cronjob owner
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sJob'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of Jobs.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/jobs/delete:
    post:
      tags:
      - kubernetes
      summary: Delete Jobs
      description: |-
        Delete the provided list of Jobs.
        **Access policy**: Authenticated user.
      operationId: DeleteJobs
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of Jobs to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sJobDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific service account.
          content: {}
        "500":
          description: Server error occurred while attempting to delete Jobs.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/max_resource_limits:
    get:
      tags:
      - kubernetes
      summary: Get max CPU and memory limits of all nodes within k8s cluster
      description: |-
        Get max CPU and memory limits (unused resources) of all nodes within k8s cluster.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesMaxResourceLimits
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNodesLimits'
        "400":
          description: Invalid request
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve nodes limits.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/metrics/applications_resources:
    get:
      tags:
      - kubernetes
      summary: Get the total resource requests and limits of all applications
      description: |-
        Get the total CPU (cores) and memory (bytes) requests and limits of all applications across all namespaces.
        **Access policy**: Authenticated user.
      operationId: GetApplicationsResources
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      - name: node
        in: query
        description: Node name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetes.K8sApplicationResource'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the total
            resource requests and limits for all applications from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/metrics/nodes:
    get:
      tags:
      - kubernetes
      summary: Get a list of nodes with their live metrics
      description: |-
        Get a list of metrics associated with all nodes of a cluster.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesMetricsForAllNodes
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.NodeMetricsList'
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of nodes with their live metrics.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/metrics/nodes/{name}:
    get:
      tags:
      - kubernetes
      summary: Get live metrics for a node
      description: |-
        Get live metrics for the specified node.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesMetricsForNode
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: name
        in: path
        description: Node identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.NodeMetrics'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the live
            metrics for the specified node.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/metrics/pods/{namespace}:
    get:
      tags:
      - kubernetes
      summary: Get a list of pods with their live metrics
      description: |-
        Get a list of pods with their live metrics for the specified namespace.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesMetricsForAllPods
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.PodMetricsList'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of pods with their live metrics.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/metrics/pods/{namespace}/{name}:
    get:
      tags:
      - kubernetes
      summary: Get live metrics for a pod
      description: |-
        Get live metrics for the specified pod.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesMetricsForPod
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Pod identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.PodMetrics'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the live
            metrics for the specified pod.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces:
    get:
      tags:
      - kubernetes
      summary: Get a list of namespaces
      description: |-
        Get a list of all namespaces within the given environment based on the user role and permissions. If the user is an admin, they can access all namespaces. If the user is not an admin, they can only access namespaces that they have access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesNamespaces
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: withResourceQuota
        in: query
        description: "When set to true, include the resource quota information as\
          \ part of the Namespace information. Default is false"
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.K8sNamespaceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of namespaces.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update a namespace
      description: |-
        Update a namespace within the given environment.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesNamespaceDeprecated
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          type: string
      requestBody:
        description: Namespace details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sNamespaceDetails'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNamespaceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific namespace.
          content: {}
        "500":
          description: Server error occurred while attempting to update the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
      - kubernetes
      summary: Create a namespace
      description: |-
        Create a namespace within the given environment.
        **Access policy**: Authenticated user.
      operationId: CreateKubernetesNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Namespace configuration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sNamespaceDetails'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNamespaceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "409":
          description: Conflict - the namespace already exists.
          content: {}
        "500":
          description: Server error occurred while attempting to create the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - kubernetes
      summary: Delete a kubernetes namespace
      description: |-
        Delete a kubernetes namespace within the given environment.
        **Access policy**: Authenticated user.
      operationId: DeleteKubernetesNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to delete the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces/{namespace}:
    get:
      tags:
      - kubernetes
      summary: Get namespace details
      description: |-
        Get namespace details for the provided namespace within the given environment.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: The namespace name to get details for
        required: true
        schema:
          type: string
      - name: withResourceQuota
        in: query
        description: "When set to true, include the resource quota information as\
          \ part of the Namespace information. Default is false"
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNamespaceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific namespace.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve specified
            namespace information.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update a namespace
      description: |-
        Update a namespace within the given environment.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          type: string
      requestBody:
        description: Namespace details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sNamespaceDetails'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNamespaceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific namespace.
          content: {}
        "500":
          description: Server error occurred while attempting to update the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/namespaces/{namespace}/configmaps/{configmap}:
    get:
      tags:
      - kubernetes
      summary: Get a ConfigMap
      description: |-
        Get a ConfigMap by name for a given namespace.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesConfigMap
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: The namespace name where the configmap is located
        required: true
        schema:
          type: string
      - name: configmap
        in: path
        description: The configmap name to get details for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetes.K8sConfigMap'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or a configmap with the specified name in the given namespace.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve a configmap
            by name within the specified namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces/{namespace}/ingresscontrollers:
    get:
      tags:
      - kubernetes
      summary: Get a list ingress controllers by namespace
      description: |-
        Get a list of ingress controllers for the given environment in the provided namespace.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesIngressControllersByNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sIngressController'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or a namespace with the specified name.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve ingress
            controllers by a namespace
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update (block/unblock) ingress controllers by namespace
      description: |-
        Update (block/unblock) ingress controllers by namespace for the provided environment.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesIngressControllersByNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Ingress controllers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/kubernetes.K8sIngressController'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to update ingress controllers
            by namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/namespaces/{namespace}/ingresses:
    get:
      tags:
      - kubernetes
      summary: Get a list of Ingresses
      description: |-
        Get a list of Ingresses. If namespace is provided, it will return the list of Ingresses in that namespace.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesIngresses
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sIngressInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve ingresses
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update an Ingress
      description: |-
        Update an Ingress for the provided environment.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesIngress
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sIngressInfo'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find the specified ingress.
          content: {}
        "500":
          description: Server error occurred while attempting to update the specified
            ingress.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
      - kubernetes
      summary: Create an Ingress
      description: |-
        Create an Ingress for the provided environment.
        **Access policy**: Authenticated user.
      operationId: CreateKubernetesIngress
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sIngressInfo'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "409":
          description: Conflict - an ingress with the same name already exists in
            the specified namespace.
          content: {}
        "500":
          description: Server error occurred while attempting to create an ingress.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/namespaces/{namespace}/ingresses/{ingress}:
    get:
      tags:
      - kubernetes
      summary: Get an Ingress by name
      description: |-
        Get an Ingress by name for the provided environment.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesIngress
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      - name: ingress
        in: path
        description: Ingress name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetes.K8sIngressInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find an ingress with the specified name.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve an ingress.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces/{namespace}/secrets/{secret}:
    get:
      tags:
      - kubernetes
      summary: Get a Secret
      description: |-
        Get a Secret by name for a given namespace.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesSecret
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: The namespace name where the secret is located
        required: true
        schema:
          type: string
      - name: secret
        in: path
        description: The secret name to get details for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetes.K8sSecret'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve a secret
            by name belong in a namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces/{namespace}/services:
    get:
      tags:
      - kubernetes
      summary: Get a list of services for a given namespace
      description: |-
        Get a list of services for a given namespace.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesServicesByNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sServiceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve all services
            for a namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
    put:
      tags:
      - kubernetes
      summary: Update a service
      description: |-
        Update a service within a given namespace.
        **Access policy**: Authenticated user.
      operationId: UpdateKubernetesService
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Service definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sServiceInfo'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find the service to update.
          content: {}
        "500":
          description: Server error occurred while attempting to update a service.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
      - kubernetes
      summary: Create a service
      description: |-
        Create a service within a given namespace
        **Access policy**: Authenticated user.
      operationId: CreateKubernetesService
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Service definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sServiceInfo'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to create a service.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/namespaces/{namespace}/system:
    put:
      tags:
      - kubernetes
      summary: Toggle the system state for a namespace
      description: |-
        Toggle the system state for a namespace
        **Access policy**: Administrator or environment administrator.
      operationId: KubernetesNamespacesToggleSystem
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace name
        required: true
        schema:
          type: string
      requestBody:
        description: Update details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.namespacesToggleSystemPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find the namespace to update.
          content: {}
        "500":
          description: Server error occurred while attempting to update the system
            state of the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/namespaces/{namespace}/volumes:
    get:
      tags:
      - kubernetes
      summary: Get Kubernetes volumes within a namespace in the given Portainer environment
      description: |-
        Get a list of kubernetes volumes within the specified namespace in the given environment (Endpoint). The Endpoint ID must be a valid Portainer environment identifier.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesVolumesInNamespace
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace identifier
        required: true
        schema:
          type: string
      - name: withApplications
        in: query
        description: "When set to True, include the applications that are using the\
          \ volumes. It is set to false by default"
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/kubernetes.K8sVolumeInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve kubernetes
            volumes in the namespace.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/namespaces/count:
    get:
      tags:
      - kubernetes
      summary: Get the total number of kubernetes namespaces within the given Portainer
        environment.
      description: |-
        Get the total number of kubernetes namespaces within the given environment, including the system namespaces. The total count depends on the user's role and permissions.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesNamespacesCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to compute the namespace
            count.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/nodes_limits:
    get:
      tags:
      - kubernetes
      summary: Get CPU and memory limits of all nodes within k8s cluster
      description: |-
        Get CPU and memory limits of all nodes within k8s cluster.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesNodesLimits
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.K8sNodesLimits'
        "400":
          description: Invalid request
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve nodes limits.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/rbac_enabled:
    get:
      tags:
      - kubernetes
      summary: Check if RBAC is enabled
      description: |-
        Check if RBAC is enabled in the specified Kubernetes cluster.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesRBACStatus
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: RBAC status
          content:
            application/json:
              schema:
                type: boolean
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the RBAC
            status.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/role_bindings/delete:
    post:
      tags:
      - kubernetes
      summary: Delete role bindings
      description: |-
        Delete the provided list of role bindings.
        **Access policy**: Authenticated user.
      operationId: DeleteRoleBindings
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of role bindings to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sRoleBindingDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific role binding.
          content: {}
        "500":
          description: Server error occurred while attempting to delete role bindings.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/rolebindings:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes role bindings
      description: |-
        Get a list of kubernetes role bindings that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesRoleBindings
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sRoleBinding'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of role bindings.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/roles:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes roles
      description: |-
        Get a list of kubernetes roles that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesRoles
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sRole'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of roles.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/roles/delete:
    post:
      tags:
      - kubernetes
      summary: Delete roles
      description: |-
        Delete the provided list of roles.
        **Access policy**: Authenticated user.
      operationId: DeleteRoles
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of roles to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sRoleDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific role.
          content: {}
        "500":
          description: Server error occurred while attempting to delete roles.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/secrets:
    get:
      tags:
      - kubernetes
      summary: Get a list of Secrets
      description: |-
        Get a list of Secrets for a given namespace. If isUsed is set to true, information about the applications that use the secrets is also returned.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesSecrets
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: isUsed
        in: query
        description: "When set to true, associate the Secrets with the applications\
          \ that use them"
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sSecret'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve all secrets
            from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/secrets/count:
    get:
      tags:
      - kubernetes
      summary: Get Secrets count
      description: |-
        Get the count of Secrets across all namespaces that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesSecretsCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the count
            of all secrets from the cluster.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/service_accounts/delete:
    post:
      tags:
      - kubernetes
      summary: Delete service accounts
      description: |-
        Delete the provided list of service accounts.
        **Access policy**: Authenticated user.
      operationId: DeleteServiceAccounts
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of service accounts to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sServiceAccountDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific service account.
          content: {}
        "500":
          description: Server error occurred while attempting to delete service accounts.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: payload
  /kubernetes/{id}/serviceaccounts:
    get:
      tags:
      - kubernetes
      summary: Get a list of kubernetes service accounts
      description: |-
        Get a list of kubernetes service accounts that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesServiceAccounts
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sServiceAccount'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the list
            of service accounts.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/services:
    get:
      tags:
      - kubernetes
      summary: Get a list of services
      description: |-
        Get a list of services that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesServices
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: withApplications
        in: query
        description: Lookup applications associated with each service
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kubernetes.K8sServiceInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve all services.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/services/count:
    get:
      tags:
      - kubernetes
      summary: Get services count
      description: |-
        Get the count of services that the user has access to.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesServicesCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve the total
            count of all services.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/services/delete:
    post:
      tags:
      - kubernetes
      summary: Delete services
      description: |-
        Delete the provided list of services.
        **Access policy**: Authenticated user.
      operationId: DeleteKubernetesServices
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of services to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes.K8sServiceDeleteRequests'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier
            or unable to find a specific service.
          content: {}
        "500":
          description: Server error occurred while attempting to delete services.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
      x-codegen-request-body-name: body
  /kubernetes/{id}/volumes:
    get:
      tags:
      - kubernetes
      summary: Get Kubernetes volumes within the given Portainer environment
      description: |-
        Get a list of all kubernetes volumes within the given environment (Endpoint). The Endpoint ID must be a valid Portainer environment identifier.
        **Access policy**: Authenticated user.
      operationId: GetAllKubernetesVolumes
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: withApplications
        in: query
        description: "When set to True, include the applications that are using the\
          \ volumes. It is set to false by default"
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/kubernetes.K8sVolumeInfo'
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve kubernetes
            volumes.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/volumes/{namespace}/{volume}:
    get:
      tags:
      - kubernetes
      summary: Get a Kubernetes volume within the given Portainer environment
      description: |-
        Get a Kubernetes volume within the given environment (Endpoint). The Endpoint ID must be a valid Portainer environment identifier.
        **Access policy**: Authenticated user.
      operationId: GetKubernetesVolume
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: namespace
        in: path
        description: Namespace identifier
        required: true
        schema:
          type: string
      - name: volume
        in: path
        description: Volume name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetes.K8sVolumeInfo'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/{id}/volumes/count:
    get:
      tags:
      - kubernetes
      summary: Get the total number of kubernetes volumes within the given Portainer
        environment.
      description: |-
        Get the total number of kubernetes volumes within the given environment (Endpoint). The total count depends on the user's role and permissions. The Endpoint ID must be a valid Portainer environment identifier.
        **Access policy**: Authenticated user.
      operationId: getAllKubernetesVolumesCount
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "403":
          description: Unauthorized access or operation not allowed.
          content: {}
        "500":
          description: Server error occurred while attempting to retrieve kubernetes
            volumes count.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /kubernetes/config:
    get:
      tags:
      - kubernetes
      summary: Generate a kubeconfig file
      description: |-
        Generate a kubeconfig file that allows a client to communicate with the Kubernetes API server
        **Access policy**: Authenticated user.
      operationId: GetKubernetesConfig
      parameters:
      - name: ids
        in: query
        description: will include only these environments(endpoints)
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: excludeIds
        in: query
        description: will exclude these environments(endpoints)
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
            ' application/yaml':
              schema:
                type: object
        "400":
          description: "Invalid request payload, such as missing required fields or\
            \ fields not meeting validation criteria."
          content: {}
        "401":
          description: "Unauthorized access - the user is not authenticated or does\
            \ not have the necessary permissions. Ensure that you have provided a\
            \ valid API key or JWT token, and that you have the required permissions."
          content: {}
        "403":
          description: Permission denied - the user is authenticated but does not
            have the necessary permissions to access the requested resource or perform
            the specified operation. Check your user roles and permissions.
          content: {}
        "404":
          description: Unable to find an environment with the specified identifier.
          content: {}
        "500":
          description: Server error occurred while attempting to generate the kubeconfig
            file.
          content: {}
      security:
      - ApiKeyAuth: []
        jwt: []
  /ldap/check:
    post:
      tags:
      - ldap
      summary: Test LDAP connectivity
      description: |-
        Test LDAP connectivity using LDAP details
        **Access policy**: administrator
      operationId: LDAPCheck
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ldap.checkPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /motd:
    get:
      tags:
      - motd
      summary: fetches the message of the day
      description: "**Access policy**: restricted"
      operationId: MOTD
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/motd.motdResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
  /open_amt:
    post:
      tags:
      - intel
      summary: Enable Portainer's OpenAMT capabilities
      description: |-
        Enable Portainer's OpenAMT capabilities
        **Access policy**: administrator
      operationId: OpenAMTConfigure
      requestBody:
        description: OpenAMT Settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openamt.openAMTConfigurePayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
      x-codegen-request-body-name: body
  /open_amt/{id}/activate:
    post:
      tags:
      - intel
      summary: Activate OpenAMT device and associate to agent endpoint
      description: |-
        Activate OpenAMT device and associate to agent endpoint
        **Access policy**: administrator
      operationId: openAMTActivate
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
  /open_amt/{id}/devices:
    get:
      tags:
      - intel
      summary: Fetch OpenAMT managed devices information for endpoint
      description: |-
        Fetch OpenAMT managed devices information for endpoint
        **Access policy**: administrator
      operationId: OpenAMTDevices
      parameters:
      - name: id
        in: path
        description: Environment(Endpoint) identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
  /open_amt/{id}/devices/{deviceId}/action:
    post:
      tags:
      - intel
      summary: Execute out of band action on an AMT managed device
      description: |-
        Execute out of band action on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceAction
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: deviceId
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Device Action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openamt.deviceActionPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
      x-codegen-request-body-name: body
  /open_amt/{id}/devices_features/{deviceId}:
    post:
      tags:
      - intel
      summary: Enable features on an AMT managed device
      description: |-
        Enable features on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceFeatures
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: deviceId
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Device Features
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openamt.deviceFeaturesPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
      x-codegen-request-body-name: body
  /open_amt/{id}/info:
    get:
      tags:
      - intel
      summary: Request OpenAMT info from a node
      description: |-
        Request OpenAMT info from a node
        **Access policy**: administrator
      operationId: OpenAMTHostInfo
      parameters:
      - name: id
        in: path
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
  /registries:
    get:
      tags:
      - registries
      summary: List Registries
      description: |-
        List all registries based on the current user authorizations.
        Will return all registries if using an administrator account otherwise it
        will only return authorized registries.
        **Access policy**: restricted
      operationId: RegistryList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Registry'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - registries
      summary: Create a new registry
      description: |-
        Create a new registry.
        **Access policy**: restricted
      operationId: RegistryCreate
      requestBody:
        description: Registry details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registries.registryCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Registry'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Another registry with the same name or same URL & credentials
            already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /registries/{id}:
    get:
      tags:
      - registries
      summary: Inspect a registry
      description: |-
        Retrieve details about a registry.
        **Access policy**: restricted
      operationId: RegistryInspect
      parameters:
      - name: id
        in: path
        description: Registry identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Registry'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access registry
          content: {}
        "404":
          description: Registry not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - registries
      summary: Update a registry
      description: |-
        Update a registry
        **Access policy**: restricted
      operationId: RegistryUpdate
      parameters:
      - name: id
        in: path
        description: Registry identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Registry details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registries.registryUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Registry'
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Registry not found
          content: {}
        "409":
          description: Another registry with the same name or same URL & credentials
            already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - registries
      summary: Remove a registry
      description: |-
        Remove a registry
        **Access policy**: restricted
      operationId: RegistryDelete
      parameters:
      - name: id
        in: path
        description: Registry identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Registry not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /registries/{id}/configure:
    post:
      tags:
      - registries
      summary: Configures a registry
      description: |-
        Configures a registry.
        **Access policy**: restricted
      operationId: RegistryConfigure
      parameters:
      - name: id
        in: path
        description: Registry identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Registry configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registries.registryConfigurePayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Registry not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /resource_controls:
    post:
      tags:
      - resource_controls
      summary: Create a new resource control
      description: |-
        Create a new resource control to restrict access to a Docker resource.
        **Access policy**: administrator
      operationId: ResourceControlCreate
      requestBody:
        description: Resource control details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourcecontrols.resourceControlCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.ResourceControl'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: A resource control is already associated to this resource
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /resource_controls/{id}:
    put:
      tags:
      - resource_controls
      summary: Update a resource control
      description: |-
        Update a resource control
        **Access policy**: authenticated
      operationId: ResourceControlUpdate
      parameters:
      - name: id
        in: path
        description: Resource control identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Resource control details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourcecontrols.resourceControlUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.ResourceControl'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Unauthorized
          content: {}
        "404":
          description: Resource control not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - resource_controls
      summary: Remove a resource control
      description: |-
        Remove a resource control.
        **Access policy**: administrator
      operationId: ResourceControlDelete
      parameters:
      - name: id
        in: path
        description: Resource control identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "404":
          description: Resource control not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /restore:
    post:
      tags:
      - backup
      summary: Triggers a system restore using provided backup file
      description: |-
        Triggers a system restore using provided backup file
        **Access policy**: public
      operationId: Restore
      requestBody:
        description: Restore request payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backup.restorePayload'
        required: true
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      x-codegen-request-body-name: restorePayload
  /roles:
    get:
      tags:
      - roles
      summary: List roles
      description: |-
        List all roles available for use
        **Access policy**: administrator
      operationId: RoleList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Role'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /settings:
    get:
      tags:
      - settings
      summary: Retrieve Portainer settings
      description: |-
        Retrieve Portainer settings.
        **Access policy**: administrator
      operationId: SettingsInspect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Settings'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - settings
      summary: Update Portainer settings
      description: |-
        Update Portainer settings.
        **Access policy**: administrator
      operationId: SettingsUpdate
      requestBody:
        description: New settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settings.settingsUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Settings'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /settings/public:
    get:
      tags:
      - settings
      summary: Retrieve Portainer public settings
      description: |-
        Retrieve public settings. Returns a small set of settings that are not reserved to administrators only.
        **Access policy**: public
      operationId: SettingsPublic
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settings.publicSettingsResponse'
        "500":
          description: Server error
          content: {}
  /ssl:
    get:
      tags:
      - ssl
      summary: Inspect the ssl settings
      description: |-
        Retrieve the ssl settings.
        **Access policy**: administrator
      operationId: SSLInspect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.SSLSettings'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - ssl
      summary: Update the ssl settings
      description: |-
        Update the ssl settings.
        **Access policy**: administrator
      operationId: SSLUpdate
      requestBody:
        description: SSL Settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ssl.sslUpdatePayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to access settings
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks:
    get:
      tags:
      - stacks
      summary: List stacks
      description: |-
        List all stacks based on the current user authorizations.
        Will return all stacks if using an administrator account otherwise it
        will only return the list of stacks the user have access to.
        Limited stacks will not be returned by this endpoint.
        **Access policy**: authenticated
      operationId: StackList
      parameters:
      - name: filters
        in: query
        description: "Filters to process on the stack list. Encoded as JSON (a map[string]string).\
          \ For example, {'SwarmID': 'jpofkc0i9uo9wtx1zesuk649w'} will only return\
          \ stacks that are part of the specified Swarm cluster. Available filters:\
          \ EndpointID, SwarmID."
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Stack'
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/{id}:
    get:
      tags:
      - stacks
      summary: Inspect a stack
      description: |-
        Retrieve details about a stack.
        **Access policy**: restricted
      operationId: StackInspect
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Stack not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - stacks
      summary: Update a stack
      description: |-
        Update a stack, only for file based stacks.
        **Access policy**: authenticated
      operationId: StackUpdate
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Stack details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.updateSwarmStackPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - stacks
      summary: Remove a stack
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDelete
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: external
        in: query
        description: Set to true to delete an external stack. Only external Swarm
          stacks are supported
        schema:
          type: boolean
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/{id}/associate:
    put:
      tags:
      - stacks
      summary: Associate an orphaned stack to a new environment(endpoint)
      description: "**Access policy**: administrator"
      operationId: StackAssociate
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      - name: swarmId
        in: query
        description: Swarm identifier
        required: true
        schema:
          type: integer
      - name: orphanedRunning
        in: query
        description: Indicates whether the stack is orphaned
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Stack not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/{id}/file:
    get:
      tags:
      - stacks
      summary: Retrieve the content of the Stack file for the specified stack
      description: |-
        Get Stack file content.
        **Access policy**: restricted
      operationId: StackFileInspect
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stacks.stackFileResponse'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Stack not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/{id}/git:
    post:
      tags:
      - stacks
      summary: Update a stack's Git configs
      description: |-
        Update the Git settings in a stack, e.g., RepositoryReferenceName and AutoUpdate
        **Access policy**: authenticated
      operationId: StackUpdateGit
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        schema:
          type: integer
      requestBody:
        description: Git configs for pull and redeploy a stack
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.stackGitUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/{id}/git/redeploy:
    put:
      tags:
      - stacks
      summary: Redeploy a stack
      description: |-
        Pull and redeploy a stack via Git
        **Access policy**: authenticated
      operationId: StackGitRedeploy
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        schema:
          type: integer
      requestBody:
        description: "Git configs for pull and redeploy of a stack. **StackName**\
          \ may only be populated for Kubernetes stacks, and if specified with a\
          \ blank string, it will be set to blank"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.stackGitRedployPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/{id}/migrate:
    post:
      tags:
      - stacks
      summary: Migrate a stack to another environment(endpoint)
      description: |-
        Migrate a stack from an environment(endpoint) to another environment(endpoint). It will re-create the stack inside the target environment(endpoint) before removing the original stack.
        **Access policy**: authenticated
      operationId: StackMigrate
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Stacks created before version 1.18.0 might not have an associated
          environment(endpoint) identifier. Use this optional parameter to set the
          environment(endpoint) identifier used by the stack.
        schema:
          type: integer
      requestBody:
        description: Stack migration details
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/stacks.stackMigratePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Stack not found
          content: {}
        "409":
          description: A stack with the same name is already running on the target
            environment(endpoint)
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/{id}/start:
    post:
      tags:
      - stacks
      summary: Starts a stopped Stack
      description: |-
        Starts a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStart
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "409":
          description: Stack name is not unique
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/{id}/stop:
    post:
      tags:
      - stacks
      summary: Stops a stopped Stack
      description: |-
        Stops a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStop
      parameters:
      - name: id
        in: path
        description: Stack identifier
        required: true
        schema:
          type: integer
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/create/kubernetes/repository:
    post:
      tags:
      - stacks
      summary: Deploy a new kubernetes stack from a git repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesGit
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/stacks.kubernetesGitDeploymentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Stack name or webhook ID already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/kubernetes/string:
    post:
      tags:
      - stacks
      summary: Deploy a new kubernetes stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesFile
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/stacks.kubernetesStringDeploymentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/kubernetes/url:
    post:
      tags:
      - stacks
      summary: Deploy a new kubernetes stack from a url
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesUrl
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/stacks.kubernetesManifestURLDeploymentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/standalone/file:
    post:
      tags:
      - stacks
      summary: Deploy a new compose stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneFile
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - Name
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the stack
                Env:
                  type: string
                  description: "Environment variables passed during deployment, represented\
                    \ as a JSON array [{'name': 'name', 'value': 'value'}]."
                file:
                  type: string
                  description: Stack file
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/create/standalone/repository:
    post:
      tags:
      - stacks
      summary: Deploy a new compose stack from repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneRepository
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.composeStackFromGitRepositoryPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Stack name or webhook ID already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/standalone/string:
    post:
      tags:
      - stacks
      summary: Deploy a new compose stack from a text
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneString
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.composeStackFromFileContentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/swarm/file:
    post:
      tags:
      - stacks
      summary: Deploy a new swarm stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmFile
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the stack
                SwarmID:
                  type: string
                  description: Swarm cluster identifier.
                Env:
                  type: string
                  description: "Environment variables passed during deployment, represented\
                    \ as a JSON array [{'name': 'name', 'value': 'value'}]. Optional"
                file:
                  type: string
                  description: Stack file
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/create/swarm/repository:
    post:
      tags:
      - stacks
      summary: Deploy a new swarm stack from a git repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmRepository
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.swarmStackFromGitRepositoryPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Stack name or webhook ID already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/create/swarm/string:
    post:
      tags:
      - stacks
      summary: Deploy a new swarm stack from a text
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmString
      parameters:
      - name: endpointId
        in: query
        description: Identifier of the environment that will be used to deploy the
          stack
        required: true
        schema:
          type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stacks.swarmStackFromFileContentPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Stack'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /stacks/name/{name}:
    delete:
      tags:
      - stacks
      summary: Remove Kubernetes stacks by name
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDeleteKubernetesByName
      parameters:
      - name: name
        in: path
        description: Stack name
        required: true
        schema:
          type: string
      - name: external
        in: query
        description: Set to true to delete an external stack. Only external Swarm
          stacks are supported
        schema:
          type: boolean
      - name: endpointId
        in: query
        description: Environment identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /stacks/webhooks/{webhookID}:
    post:
      tags:
      - stacks
      summary: Webhook for triggering stack updates from git
      description: "**Access policy**: public"
      operationId: WebhookInvoke
      parameters:
      - name: webhookID
        in: path
        description: Stack identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Autoupdate for the stack isn't available
          content: {}
        "500":
          description: Server error
          content: {}
  /status:
    get:
      tags:
      - status
      summary: Check Portainer status
      description: |-
        Deprecated: use the `/system/status` endpoint instead.
        Retrieve Portainer status
        **Access policy**: public
      operationId: StatusInspect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.status'
      deprecated: true
  /system/info:
    get:
      tags:
      - system
      summary: Retrieve system info
      description: "**Access policy**: authenticated"
      operationId: systemInfo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.systemInfoResponse'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /system/nodes:
    get:
      tags:
      - system
      summary: Retrieve the count of nodes
      description: "**Access policy**: authenticated"
      operationId: systemNodesCount
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.nodesCountResponse'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /system/status:
    get:
      tags:
      - system
      summary: Check Portainer status
      description: |-
        Retrieve Portainer status
        **Access policy**: public
      operationId: systemStatus
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.status'
  /system/upgrade:
    post:
      tags:
      - system
      summary: Upgrade Portainer to BE
      description: |-
        Upgrade Portainer to BE
        **Access policy**: administrator
      operationId: systemUpgrade
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.status'
  /system/version:
    get:
      tags:
      - system
      summary: Check for portainer updates
      description: |-
        Check if portainer has an update available
        **Access policy**: authenticated
      operationId: systemVersion
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.versionResponse'
      security:
      - ApiKeyAuth: []
      - jwt: []
  /tags:
    get:
      tags:
      - tags
      summary: List tags
      description: |-
        List tags.
        **Access policy**: authenticated
      operationId: TagList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Tag'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - tags
      summary: Create a new tag
      description: |-
        Create a new tag.
        **Access policy**: administrator
      operationId: TagCreate
      requestBody:
        description: Tag details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tags.tagCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Tag'
        "409":
          description: This name is already associated to a tag
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /tags/{id}:
    delete:
      tags:
      - tags
      summary: Remove a tag
      description: |-
        Remove a tag.
        **Access policy**: administrator
      operationId: TagDelete
      parameters:
      - name: id
        in: path
        description: Tag identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Tag not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /team_memberships:
    get:
      tags:
      - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: administrator
      operationId: TeamMembershipList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.TeamMembership'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - team_memberships
      summary: Create a new team membership
      description: |-
        Create a new team memberships. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipCreate
      requestBody:
        description: Team membership details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teammemberships.teamMembershipCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.TeamMembership'
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied to manage memberships
          content: {}
        "409":
          description: Team membership already registered
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /team_memberships/{id}:
    put:
      tags:
      - team_memberships
      summary: Update a team membership
      description: |-
        Update a team membership. Access is only available to administrators or leaders of the associated team.
        **Access policy**: administrator or leaders of the associated team
      operationId: TeamMembershipUpdate
      parameters:
      - name: id
        in: path
        description: Team membership identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Team membership details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teammemberships.teamMembershipUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.TeamMembership'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: TeamMembership not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - team_memberships
      summary: Remove a team membership
      description: |-
        Remove a team membership. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipDelete
      parameters:
      - name: id
        in: path
        description: TeamMembership identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: TeamMembership not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /teams:
    get:
      tags:
      - teams
      summary: List teams
      description: |-
        List teams. For non-administrator users, will only list the teams they are member of.
        **Access policy**: restricted
      operationId: TeamList
      parameters:
      - name: onlyLedTeams
        in: query
        description: Only list teams that the user is leader of
        schema:
          type: boolean
      - name: environmentId
        in: query
        description: Identifier of the environment(endpoint) that will be used to
          filter the authorized teams
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Team'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - teams
      summary: Create a new team
      description: |-
        Create a new team.
        **Access policy**: administrator
      operationId: TeamCreate
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams.teamCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Team'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: A team with the same name already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /teams/{id}:
    get:
      tags:
      - teams
      summary: Inspect a team
      description: |-
        Retrieve details about a team. Access is only available for administrator and leaders of that team.
        **Access policy**: administrator
      operationId: TeamInspect
      parameters:
      - name: id
        in: path
        description: Team identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Team'
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - teams
      summary: Update a team
      description: |-
        Update a team.
        **Access policy**: administrator
      operationId: TeamUpdate
      parameters:
      - name: id
        in: path
        description: Team identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Team details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams.teamUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Team'
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - teams
      summary: Remove a team
      description: |-
        Remove a team.
        **Access policy**: administrator
      operationId: TeamDelete
      parameters:
      - name: id
        in: path
        description: Team Id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /teams/{id}/memberships:
    get:
      tags:
      - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: restricted
      operationId: TeamMemberships
      parameters:
      - name: id
        in: path
        description: Team Id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.TeamMembership'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /templates:
    get:
      tags:
      - templates
      summary: List available templates
      description: |-
        List available templates.
        **Access policy**: authenticated
      operationId: TemplateList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templates.listResponse'
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /templates/{id}/file:
    post:
      tags:
      - templates
      summary: Get a template's file
      description: |-
        Get a template's file
        **Access policy**: authenticated
      operationId: TemplateFile
      parameters:
      - name: id
        in: path
        description: Template identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templates.fileResponse'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /templates/helm:
    get:
      tags:
      - helm
      summary: Search Helm Charts
      description: "**Access policy**: authenticated"
      operationId: HelmRepoSearch
      parameters:
      - name: repo
        in: query
        description: Helm repository URL
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /templates/helm/{command}:
    get:
      tags:
      - helm
      summary: Show Helm Chart Information
      description: "**Access policy**: authenticated"
      operationId: HelmShow
      parameters:
      - name: repo
        in: query
        description: Helm repository URL
        required: true
        schema:
          type: string
      - name: chart
        in: query
        description: Chart name
        required: true
        schema:
          type: string
      - name: command
        in: path
        description: chart/values/readme
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /upload/tls/{certificate}:
    post:
      tags:
      - upload
      summary: Upload TLS files
      description: |-
        Use this environment(endpoint) to upload TLS files.
        **Access policy**: administrator
      operationId: UploadTLS
      parameters:
      - name: certificate
        in: path
        description: "TLS file type. Valid values are 'ca', 'cert' or 'key'."
        required: true
        schema:
          type: string
          enum:
          - ca
          - cert
          - key
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              - folder
              type: object
              properties:
                folder:
                  type: string
                  description: Folder where the TLS file will be stored. Will be created
                    if not existing
                file:
                  type: string
                  description: The file to upload
                  format: binary
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /users:
    get:
      tags:
      - users
      summary: List users
      description: |-
        List Portainer users.
        Non-administrator users will only be able to list other non-administrator user accounts.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: restricted
      operationId: UserList
      parameters:
      - name: environmentId
        in: query
        description: Identifier of the environment(endpoint) that will be used to
          filter the authorized users
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - users
      summary: Create a new user
      description: |-
        Create a new Portainer user.
        Only administrators can create users.
        **Access policy**: restricted
      operationId: UserCreate
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.userCreatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "409":
          description: User already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /users/{id}:
    get:
      tags:
      - users
      summary: Inspect a user
      description: |-
        Retrieve details about a user.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: authenticated
      operationId: UserInspect
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    put:
      tags:
      - users
      summary: Update a user
      description: |-
        Update user details. A regular user account can only update his details.
        A regular user account cannot change their username or role.
        **Access policy**: authenticated
      operationId: UserUpdate
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.userUpdatePayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "409":
          description: Username already exist
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - users
      summary: Remove a user
      description: |-
        Remove a user.
        **Access policy**: administrator
      operationId: UserDelete
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /users/{id}/helm/repositories:
    get:
      tags:
      - helm
      summary: List a users helm repositories
      description: |-
        Inspect a user helm repositories.
        **Access policy**: authenticated
      operationId: HelmUserRepositoriesList
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.helmUserRepositoryResponse'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - helm
      summary: Create a user helm repository
      description: |-
        Create a user helm repository.
        **Access policy**: authenticated
      operationId: HelmUserRepositoryCreate
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: Helm Repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.addHelmRepoUrlPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.HelmUserRepository'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: payload
  /users/{id}/helm/repositories/{repositoryID}:
    delete:
      tags:
      - helm
      summary: Delete a users helm repositoryies
      description: "**Access policy**: authenticated"
      operationId: HelmUserRepositoryDelete
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      - name: repositoryID
        in: path
        description: Repository identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /users/{id}/memberships:
    get:
      tags:
      - users
      summary: Inspect a user memberships
      description: |-
        Inspect a user memberships.
        **Access policy**: restricted
      operationId: UserMembershipsInspect
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.TeamMembership'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /users/{id}/passwd:
    put:
      tags:
      - users
      summary: Update password for a user
      description: |-
        Update password for the specified user.
        **Access policy**: authenticated
      operationId: UserUpdatePassword
      parameters:
      - name: id
        in: path
        description: identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.userUpdatePasswordPayload'
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /users/{id}/tokens:
    get:
      tags:
      - users
      summary: Get all API keys for a user
      description: |-
        Gets all API keys for a user.
        Only the calling user or admin can retrieve api-keys.
        **Access policy**: authenticated
      operationId: UserGetAPIKeys
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.APIKey'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - users
      summary: Generate an API key for a user
      description: |-
        Generates an API key for a user.
        Only the calling user can generate a token for themselves.
        Password is required only for internal authentication.
        **Access policy**: restricted
      operationId: UserGenerateAPIKey
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.userAccessTokenCreatePayload'
        required: true
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.accessTokenResponse'
        "400":
          description: Invalid request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - jwt: []
      x-codegen-request-body-name: body
  /users/{id}/tokens/{keyID}:
    delete:
      tags:
      - users
      summary: Remove an api-key associated to a user
      description: |-
        Remove an api-key associated to a user..
        Only the calling user or admin can remove api-key.
        **Access policy**: authenticated
      operationId: UserRemoveAPIKey
      parameters:
      - name: id
        in: path
        description: User identifier
        required: true
        schema:
          type: integer
      - name: keyID
        in: path
        description: Api Key identifier
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: Not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /users/admin/check:
    get:
      tags:
      - users
      summary: Check administrator account existence
      description: |-
        Check if an administrator account exists in the database.
        **Access policy**: public
      operationId: UserAdminCheck
      responses:
        "204":
          description: Success
          content: {}
        "404":
          description: User not found
          content: {}
  /users/admin/init:
    post:
      tags:
      - users
      summary: Initialize administrator account
      description: |-
        Initialize the 'admin' user account.
        **Access policy**: public
      operationId: UserAdminInit
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users.adminInitPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: Admin user already initialized
          content: {}
        "500":
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  /users/me:
    get:
      tags:
      - users
      summary: Inspect the current user user
      description: |-
        Retrieve details about the current  user.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: authenticated
      operationId: CurrentUserInspect
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.User'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "404":
          description: User not found
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /webhooks:
    get:
      tags:
      - webhooks
      summary: List webhooks
      description: "**Access policy**: authenticated"
      parameters:
      - name: filters
        in: query
        description: Filters (json-string)
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portainer.Webhook'
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
    post:
      tags:
      - webhooks
      summary: Create a webhook
      description: "**Access policy**: authenticated"
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks.webhookCreatePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Webhook'
        "400":
          description: Invalid request
          content: {}
        "409":
          description: A webhook for this resource already exists
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
  /webhooks/{id}:
    put:
      tags:
      - webhooks
      summary: Update a webhook
      description: "**Access policy**: authenticated"
      parameters:
      - name: id
        in: path
        description: Webhook id
        required: true
        schema:
          type: integer
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks.webhookUpdatePayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portainer.Webhook'
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
      - webhooks
      summary: Execute a webhook
      description: |-
        Acts on a passed in token UUID to restart the docker service
        **Access policy**: public
      parameters:
      - name: id
        in: path
        description: Webhook token
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Webhook executed
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    delete:
      tags:
      - webhooks
      summary: Delete a webhook
      description: "**Access policy**: authenticated"
      parameters:
      - name: id
        in: path
        description: Webhook id
        required: true
        schema:
          type: integer
      responses:
        "202":
          description: Webhook deleted
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /websocket/attach:
    get:
      tags:
      - websocket
      summary: Attach a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an AttachStart operation HTTP request will be created and hijacked.
        **Access policy**: authenticated
      parameters:
      - name: endpointId
        in: query
        description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        required: true
        schema:
          type: integer
      - name: nodeName
        in: query
        description: node name
        schema:
          type: string
      - name: token
        in: query
        description: JWT token used for authentication against this environment(endpoint)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /websocket/exec:
    get:
      tags:
      - websocket
      summary: Execute a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an ExecStart operation HTTP request will be created and hijacked.
      parameters:
      - name: endpointId
        in: query
        description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        required: true
        schema:
          type: integer
      - name: nodeName
        in: query
        description: node name
        schema:
          type: string
      - name: token
        in: query
        description: JWT token used for authentication against this environment(endpoint)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "409":
          description: Conflict
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /websocket/kubernetes-shell:
    get:
      tags:
      - websocket
      summary: Execute a websocket on kubectl shell pod
      description: |-
        The request will be upgraded to the websocket protocol. The request will proxy input from the client to the pod via long-lived websocket connection.
        **Access policy**: authenticated
      parameters:
      - name: endpointId
        in: query
        description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        required: true
        schema:
          type: integer
      - name: token
        in: query
        description: JWT token used for authentication against this environment(endpoint)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: Permission denied
          content: {}
        "500":
          description: Server error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
  /websocket/pod:
    get:
      tags:
      - websocket
      summary: Execute a websocket on pod
      description: |-
        The request will be upgraded to the websocket protocol.
        **Access policy**: authenticated
      parameters:
      - name: endpointId
        in: query
        description: environment(endpoint) ID of the environment(endpoint) where the
          resource is located
        required: true
        schema:
          type: integer
      - name: namespace
        in: query
        description: namespace where the container is located
        required: true
        schema:
          type: string
      - name: podName
        in: query
        description: name of the pod containing the container
        required: true
        schema:
          type: string
      - name: containerName
        in: query
        description: name of the container
        required: true
        schema:
          type: string
      - name: command
        in: query
        description: command to execute in the container
        required: true
        schema:
          type: string
      - name: token
        in: query
        description: JWT token used for authentication against this environment(endpoint)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
      - jwt: []
components:
  schemas:
    auth.authenticatePayload:
      required:
      - password
      - username
      type: object
      properties:
        password:
          type: string
          description: Password
          example: mypassword
        username:
          type: string
          description: Username
          example: admin
    auth.authenticateResponse:
      type: object
      properties:
        jwt:
          type: string
          description: JWT token used to authenticate against the API
          example: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyzAB
    auth.oauthPayload:
      type: object
      properties:
        code:
          type: string
          description: OAuth code returned from OAuth Provided
    backup.backupPayload:
      type: object
      properties:
        password:
          type: string
    backup.restorePayload:
      type: object
      properties:
        fileContent:
          type: array
          items:
            type: integer
        fileName:
          type: string
        password:
          type: string
    build.BuildInfo:
      type: object
      properties:
        buildNumber:
          type: string
        gitCommit:
          type: string
        goVersion:
          type: string
        imageTag:
          type: string
        nodejsVersion:
          type: string
        webpackVersion:
          type: string
        yarnVersion:
          type: string
    build.DependenciesInfo:
      type: object
      properties:
        composeVersion:
          type: string
        dockerVersion:
          type: string
        helmVersion:
          type: string
        kubectlVersion:
          type: string
    build.RuntimeInfo:
      type: object
      properties:
        env:
          type: array
          items:
            type: string
    containers.containerGpusResponse:
      type: object
      properties:
        gpus:
          type: string
    customtemplates.customTemplateFromFileContentPayload:
      required:
      - description
      - fileContent
      - title
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        fileContent:
          type: string
          description: Content of stack file
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        title:
          type: string
          description: Title of the template
          example: Nginx
        type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            $ref: '#/components/schemas/portainer.CustomTemplateVariableDefinition'
    customtemplates.customTemplateFromGitRepositoryPayload:
      required:
      - description
      - repositoryURL
      - title
      - type
      type: object
      properties:
        composeFilePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        title:
          type: string
          description: Title of the template
          example: Nginx
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            $ref: '#/components/schemas/portainer.CustomTemplateVariableDefinition'
    customtemplates.customTemplateUpdatePayload:
      required:
      - description
      - fileContent
      - repositoryURL
      - title
      - type
      type: object
      properties:
        composeFilePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        fileContent:
          type: string
          description: Content of stack file
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryGitCredentialID:
          type: integer
          description: |-
            GitCredentialID used to identify the bound git credential. Required when RepositoryAuthentication
            is true and RepositoryUsername/RepositoryPassword are not provided
          example: 0
        repositoryPassword:
          type: string
          description: |-
            Password used in basic authentication. Required when RepositoryAuthentication is true
            and RepositoryGitCredentialID is 0
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: |-
            Username used in basic authentication. Required when RepositoryAuthentication is true
            and RepositoryGitCredentialID is 0
          example: myGitUsername
        title:
          type: string
          description: Title of the template
          example: Nginx
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        type:
          type: integer
          description: "Type of created stack (1 - swarm, 2 - compose, 3 - kubernetes)"
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            $ref: '#/components/schemas/portainer.CustomTemplateVariableDefinition'
    customtemplates.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
    docker.ContainerStats:
      type: object
      properties:
        healthy:
          type: integer
        running:
          type: integer
        stopped:
          type: integer
        total:
          type: integer
        unhealthy:
          type: integer
    docker.dashboardResponse:
      type: object
      properties:
        containers:
          $ref: '#/components/schemas/docker.ContainerStats'
        images:
          $ref: '#/components/schemas/docker.imagesCounters'
        networks:
          type: integer
        services:
          type: integer
        stacks:
          type: integer
        volumes:
          type: integer
    docker.imagesCounters:
      type: object
      properties:
        size:
          type: integer
        total:
          type: integer
    edge.DeployerOptionsPayload:
      type: object
      properties:
        prune:
          type: boolean
          description: |-
            Prune is a flag indicating if the agent must prune the containers or not when creating/updating an edge stack
            This flag drives `docker compose up --remove-orphans` and `docker stack up --prune` options
            Used only for EE
        removeVolumes:
          type: boolean
          description: |-
            RemoveVolumes is a flag indicating if the agent must remove the named volumes declared
            in the compose file and anonymous volumes attached to containers
            This flag drives `docker compose down --volumes` option
            Used only for EE
    edge.RegistryCredentials:
      type: object
      properties:
        secret:
          type: string
        serverURL:
          type: string
        username:
          type: string
    edge.StackPayload:
      type: object
      properties:
        deployerOptionsPayload:
          $ref: '#/components/schemas/edge.DeployerOptionsPayload'
        dirEntries:
          type: array
          description: Content of stack folder
          items:
            $ref: '#/components/schemas/filesystem.DirEntry'
        edgeUpdateID:
          type: integer
          description: |-
            EdgeUpdateID is the ID of the edge update related to this stack.
            Used only for EE
        entryFileName:
          type: string
          description: Name of the stack entry file
        envVars:
          type: array
          description: |-
            Used only for EE
            EnvVars is a list of environment variables to inject into the stack
          items:
            $ref: '#/components/schemas/portainer.Pair'
        filesystemPath:
          type: string
          description: Mount point for relative path
        id:
          type: integer
          description: ID of the stack
        name:
          type: string
          description: Name of the stack
        namespace:
          type: string
          description: Namespace to use for kubernetes stack. Keep empty to use the
            manifest namespace.
        prePullImage:
          type: boolean
          description: |-
            PrePullImage is a flag indicating if the agent must pull the image before deploying the stack.
            Used only for EE
        rePullImage:
          type: boolean
          description: |-
            RePullImage is a flag indicating if the agent must pull the image if it is already present on the node.
            Used only for EE
        readyRePullImage:
          type: boolean
          description: |-
            Used only for EE async edge agent
            ReadyRePullImage is a flag to indicate whether the auto update is trigger to re-pull image
        registryCredentials:
          type: array
          description: |-
            RegistryCredentials holds the credentials for a Docker registry.
            Used only for EE
          items:
            $ref: '#/components/schemas/edge.RegistryCredentials'
        retryDeploy:
          type: boolean
          description: |-
            RetryDeploy is a flag indicating if the agent must retry to deploy the stack if it fails.
            Used only for EE
        retryPeriod:
          type: integer
          description: |-
            RetryPeriod specifies the duration, in seconds, for which the agent should continue attempting to deploy the stack after a failure
            Used only for EE
        rollbackTo:
          type: integer
          description: RollbackTo specifies the stack file version to rollback to
            (only support to rollback to the last version currently)
        stackFileContent:
          type: string
          description: Content of the stack file (for compatibility to agent version
            less than 2.19.0)
        supportRelativePath:
          type: boolean
          description: Is relative path supported
        version:
          type: integer
          description: Version of the stack file
    edgegroups.decoratedEdgeGroup:
      type: object
      properties:
        Dynamic:
          type: boolean
        Endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        HasEdgeJob:
          type: boolean
        HasEdgeStack:
          type: boolean
        Id:
          type: integer
          description: EdgeGroup Identifier
          example: 1
        Name:
          type: string
        PartialMatch:
          type: boolean
        TagIds:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
        TrustedEndpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        endpointTypes:
          type: array
          items:
            type: integer
            description: "Environment(Endpoint) environment(endpoint) type. 1 for\
              \ a Docker environment(endpoint), 2 for an agent on Docker environment(endpoint)\
              \ or 3 for an Azure environment(endpoint)."
            example: 1
    edgegroups.edgeGroupCreatePayload:
      type: object
      properties:
        dynamic:
          type: boolean
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        name:
          type: string
        partialMatch:
          type: boolean
        tagIDs:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    edgegroups.edgeGroupUpdatePayload:
      type: object
      properties:
        dynamic:
          type: boolean
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        name:
          type: string
        partialMatch:
          type: boolean
        tagIDs:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    edgejobs.edgeJobCreateFromFileContentPayload:
      type: object
      properties:
        cronExpression:
          type: string
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        fileContent:
          type: string
        name:
          type: string
        recurring:
          type: boolean
    edgejobs.edgeJobFileResponse:
      type: object
      properties:
        FileContent:
          type: string
    edgejobs.edgeJobUpdatePayload:
      type: object
      properties:
        cronExpression:
          type: string
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        fileContent:
          type: string
        name:
          type: string
        recurring:
          type: boolean
    edgejobs.fileResponse:
      type: object
      properties:
        FileContent:
          type: string
    edgejobs.taskContainer:
      type: object
      properties:
        EndpointId:
          type: integer
        Id:
          type: string
        LogsStatus:
          type: integer
    edgestacks.edgeStackFromGitRepositoryPayload:
      required:
      - edgeGroups
      - name
      - repositoryURL
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          description: List of identifiers of EdgeGroups
          example:
          - 1
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        filePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        name:
          type: string
          description: |-
            Name of the stack
            Max length: 255
            Name must only contains lowercase characters, numbers, hyphens, or underscores
            Name must start with a lowercase character or number
            Example: stack-name or stack_123 or stackName
          example: stack-name
        registries:
          type: array
          description: List of Registries to use for this stack
          items:
            type: integer
            description: Registry Identifier
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.edgeStackFromStringPayload:
      required:
      - name
      - stackFileContent
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          description: List of identifiers of EdgeGroups
          example:
          - 1
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        name:
          type: string
          description: |-
            Name of the stack
            Max length: 255
            Name must only contains lowercase characters, numbers, hyphens, or underscores
            Name must start with a lowercase character or number
            Example: stack-name or stack_123 or stackName
          example: stack-name
        registries:
          type: array
          description: List of Registries to use for this stack
          items:
            type: integer
            description: Registry Identifier
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.stackFileResponse:
      type: object
      properties:
        StackFileContent:
          type: string
    edgestacks.updateEdgeStackPayload:
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        stackFileContent:
          type: string
        updateVersion:
          type: boolean
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.updateStatusPayload:
      type: object
      properties:
        endpointID:
          type: integer
        error:
          type: string
        status:
          type: integer
          description: Deprecated
        time:
          type: integer
        version:
          type: integer
    endpointedge.edgeJobResponse:
      type: object
      properties:
        CollectLogs:
          type: boolean
          description: Whether to collect logs
          example: true
        CronExpression:
          type: string
          description: A cron expression to schedule this job
          example: '* * * * *'
        Id:
          type: integer
          description: EdgeJob Identifier
          example: 2
        Script:
          type: string
          description: Script to run
          example: echo hello
        Version:
          type: integer
          description: Version of this EdgeJob
          example: 2
    endpointedge.endpointEdgeStatusInspectResponse:
      type: object
      properties:
        checkin:
          type: integer
          description: The current value of CheckinInterval
          example: 5
        credentials:
          type: string
        port:
          type: integer
          description: The tunnel port
          example: 8732
        schedules:
          type: array
          description: List of requests for jobs to run on the environment(endpoint)
          items:
            $ref: '#/components/schemas/endpointedge.edgeJobResponse'
        stacks:
          type: array
          description: List of stacks to be deployed on the environments(endpoints)
          items:
            $ref: '#/components/schemas/endpointedge.stackStatusResponse'
        status:
          type: string
          description: Status represents the environment(endpoint) status
          example: REQUIRED
    endpointedge.stackStatusResponse:
      type: object
      properties:
        id:
          type: integer
          description: EdgeStack Identifier
          example: 1
        version:
          type: integer
          description: Version of this stack
          example: 3
    endpointgroups.endpointGroupCreatePayload:
      required:
      - name
      type: object
      properties:
        associatedEndpoints:
          type: array
          description: List of environment(endpoint) identifiers that will be part
            of this group
          example:
          - 1
          - 3
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        description:
          type: string
          description: Environment(Endpoint) group description
          example: description
        name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        tagIDs:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            group is associated
          example:
          - 1
          - 2
          items:
            type: integer
            description: Tag identifier
            example: 1
    endpointgroups.endpointGroupUpdatePayload:
      type: object
      properties:
        description:
          type: string
          description: Environment(Endpoint) group description
          example: description
        name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        tagIDs:
          type: array
          description: List of tag identifiers associated to the environment(endpoint)
            group
          example:
          - 3
          - 4
          items:
            type: integer
            description: Tag identifier
            example: 1
        teamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        userAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
    endpoints.dockerhubStatusResponse:
      type: object
      properties:
        limit:
          type: integer
          description: Daily limit
        remaining:
          type: integer
          description: Remaiming images to pull
    endpoints.endpointCreateGlobalKeyResponse:
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) Identifier
    endpoints.endpointDeleteBatchPartialResponse:
      type: object
      properties:
        deleted:
          type: array
          items:
            type: integer
        errors:
          type: array
          items:
            type: integer
    endpoints.endpointDeleteBatchPayload:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/endpoints.endpointDeleteRequest'
    endpoints.endpointDeleteRequest:
      type: object
      properties:
        deleteCluster:
          type: boolean
        id:
          type: integer
    endpoints.endpointSettingsUpdatePayload:
      type: object
      properties:
        allowBindMountsForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use bind mounts
            when creating containers
          example: false
        allowContainerCapabilitiesForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use container capabilities
          example: true
        allowDeviceMappingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use device mapping
          example: true
        allowHostNamespaceForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use the host pid
          example: true
        allowPrivilegedModeForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use privileged
            mode when creating containers
          example: false
        allowStackManagementForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to manage stacks
          example: true
        allowSysctlSettingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use sysctl settings
          example: true
        allowVolumeBrowserForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to browse volumes
          example: true
        enableGPUManagement:
          type: boolean
          example: false
        enableHostManagementFeatures:
          type: boolean
          description: Whether host management features are enabled
          example: true
        gpus:
          type: array
          items:
            $ref: '#/components/schemas/portainer.Pair'
    endpoints.endpointUpdatePayload:
      type: object
      properties:
        azureApplicationID:
          type: string
          description: Azure application ID
          example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        azureAuthenticationKey:
          type: string
          description: Azure authentication key
          example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        azureTenantID:
          type: string
          description: Azure tenant ID
          example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        edgeCheckinInterval:
          type: integer
          description: The check in interval for edge agent (in seconds)
          example: 5
        gpus:
          type: array
          description: GPUs information
          items:
            $ref: '#/components/schemas/portainer.Pair'
        groupID:
          type: integer
          description: Group identifier
          example: 1
        kubernetes:
          $ref: '#/components/schemas/portainer.KubernetesData'
        name:
          type: string
          description: Name that will be used to identify this environment(endpoint)
          example: my-environment
        publicURL:
          type: string
          description: |-
            URL or IP address where exposed containers will be reachable.\
            Defaults to URL if not specified
          example: docker.mydomain.tld:2375
        status:
          type: integer
          description: "The status of the environment(endpoint) (1 - up, 2 - down)"
          example: 1
        tagIDs:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            is associated
          example:
          - 1
          - 2
          items:
            type: integer
            description: Tag identifier
            example: 1
        teamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        tls:
          type: boolean
          description: Require TLS to connect against this environment(endpoint)
          example: true
        tlsskipClientVerify:
          type: boolean
          description: Skip client verification when using TLS
          example: false
        tlsskipVerify:
          type: boolean
          description: Skip server verification when using TLS
          example: false
        url:
          type: string
          description: URL or IP address of a Docker host
          example: docker.mydomain.tld:2375
        userAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
    endpoints.endpointUpdateRelationsPayload:
      type: object
      properties:
        relations:
          type: object
          additionalProperties:
            type: object
            properties:
              edgeGroups:
                type: array
                items:
                  type: integer
                  description: EdgeGroup Identifier
                  example: 1
              group:
                type: integer
                description: Environment(Endpoint) group identifier
                example: 1
              tags:
                type: array
                items:
                  type: integer
                  description: Tag identifier
                  example: 1
    endpoints.forceUpdateServicePayload:
      type: object
      properties:
        pullImage:
          type: boolean
          description: PullImage if true will pull the image
        serviceID:
          type: string
          description: ServiceId to update
    endpoints.registryAccessPayload:
      type: object
      properties:
        namespaces:
          type: array
          items:
            type: string
        teamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        userAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
    filesystem.DirEntry:
      type: object
      properties:
        content:
          type: string
        isFile:
          type: boolean
        name:
          type: string
        permissions:
          type: integer
    gitops.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
    gitops.repositoryFilePreviewPayload:
      required:
      - repository
      type: object
      properties:
        password:
          type: string
          example: myGitPassword
        reference:
          type: string
          example: refs/heads/master
        repository:
          type: string
          example: https://github.com/openfaas/faas
        targetFile:
          type: string
          description: Path to file whose content will be read
          example: docker-compose.yml
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        username:
          type: string
          example: myGitUsername
    gittypes.GitAuthentication:
      type: object
      properties:
        gitCredentialID:
          type: integer
          description: |-
            Git credentials identifier when the value is not 0
            When the value is 0, Username and Password are set without using saved credential
            This is introduced since 2.15.0
          example: 0
        password:
          type: string
        username:
          type: string
    gittypes.RepoConfig:
      type: object
      properties:
        authentication:
          $ref: '#/components/schemas/gittypes.GitAuthentication'
        configFilePath:
          type: string
          description: Path to where the config file is in this url/refName
          example: docker-compose.yml
        configHash:
          type: string
          description: Repository hash
          example: bc4c183d756879ea4d173315338110b31004b8e0
        referenceName:
          type: string
          description: The reference name
          example: refs/heads/branch_name
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        url:
          type: string
          description: The repo url
          example: https://github.com/portainer/portainer.git
    helm.installChartPayload:
      type: object
      properties:
        chart:
          type: string
        name:
          type: string
        namespace:
          type: string
        repo:
          type: string
        values:
          type: string
    images.ImageResponse:
      type: object
      properties:
        created:
          type: integer
        id:
          type: string
        nodeName:
          type: string
        size:
          type: integer
        tags:
          type: array
          items:
            type: string
        used:
          type: boolean
          description: |-
            Used is true if the image is used by at least one container
            supplied only when withUsage is true
    intstr.IntOrString:
      type: object
      properties:
        intVal:
          type: integer
        strVal:
          type: string
        type:
          type: integer
    kubernetes.Configuration:
      type: object
      properties:
        ConfigurationOwner:
          type: string
        Data:
          type: object
          additionalProperties: true
        Kind:
          type: string
    kubernetes.IngressRule:
      type: object
      properties:
        Host:
          type: string
        IP:
          type: string
        Path:
          type: string
        TLS:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.TLSInfo'
    kubernetes.K8sApplication:
      type: object
      properties:
        ApplicationOwner:
          type: string
        ApplicationType:
          type: string
        Configurations:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.Configuration'
        Containers:
          type: array
          items:
            type: object
        CreationDate:
          type: string
        DeploymentType:
          type: string
        HorizontalPodAutoscaler:
          $ref: '#/components/schemas/v2.HorizontalPodAutoscaler'
        Id:
          type: string
        Image:
          type: string
        Kind:
          type: string
        Labels:
          type: object
          additionalProperties:
            type: string
        LoadBalancerIPAddress:
          type: string
        MatchLabels:
          type: object
          additionalProperties:
            type: string
        Metadata:
          $ref: '#/components/schemas/kubernetes.Metadata'
        Name:
          type: string
        Namespace:
          type: string
        Pods:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.Pod'
        PublishedPorts:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.PublishedPort'
        Resource:
          $ref: '#/components/schemas/kubernetes.K8sApplicationResource'
        ResourcePool:
          type: string
        RunningPodsCount:
          type: integer
        ServiceId:
          type: string
        ServiceName:
          type: string
        ServiceType:
          type: string
        Services:
          type: array
          items:
            $ref: '#/components/schemas/v1.Service'
        StackId:
          type: string
        StackName:
          type: string
        Status:
          type: string
        TotalPodsCount:
          type: integer
        Uid:
          type: string
    kubernetes.K8sApplicationResource:
      type: object
      properties:
        CpuLimit:
          type: number
        CpuRequest:
          type: number
        MemoryLimit:
          type: integer
        MemoryRequest:
          type: integer
    kubernetes.K8sClusterRole:
      type: object
      properties:
        creationDate:
          type: string
        isSystem:
          type: boolean
        name:
          type: string
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    kubernetes.K8sClusterRoleBinding:
      type: object
      properties:
        creationDate:
          type: string
        isSystem:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        roleRef:
          $ref: '#/components/schemas/v1.RoleRef'
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/v1.Subject'
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    kubernetes.K8sConfigMap:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        ConfigurationOwner:
          type: string
        ConfigurationOwnerId:
          type: string
        ConfigurationOwners:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sConfigurationOwnerResource'
        CreationDate:
          type: string
        Data:
          type: object
          additionalProperties:
            type: string
        IsUsed:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Namespace:
          type: string
        UID:
          type: string
    kubernetes.K8sConfigurationOwnerResource:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        ResourceKind:
          type: string
    kubernetes.K8sCronJob:
      type: object
      properties:
        Command:
          type: string
        Id:
          type: string
        IsSystem:
          type: boolean
        Jobs:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sJob'
        Name:
          type: string
        Namespace:
          type: string
        Schedule:
          type: string
        Suspend:
          type: boolean
        Timezone:
          type: string
    kubernetes.K8sCronJobDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sDashboard:
      type: object
      properties:
        applicationsCount:
          type: integer
        configMapsCount:
          type: integer
        ingressesCount:
          type: integer
        namespacesCount:
          type: integer
        secretsCount:
          type: integer
        servicesCount:
          type: integer
        volumesCount:
          type: integer
    kubernetes.K8sIngressController:
      type: object
      properties:
        Availability:
          type: boolean
        ClassName:
          type: string
        Name:
          type: string
        New:
          type: boolean
        Type:
          type: string
        Used:
          type: boolean
    kubernetes.K8sIngressDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sIngressInfo:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        ClassName:
          type: string
        CreationDate:
          type: string
        Hosts:
          type: array
          items:
            type: string
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Namespace:
          type: string
        Paths:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sIngressPath'
        TLS:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sIngressTLS'
        Type:
          type: string
        UID:
          type: string
    kubernetes.K8sIngressPath:
      type: object
      properties:
        HasService:
          type: boolean
        Host:
          type: string
        IngressName:
          type: string
        Path:
          type: string
        PathType:
          type: string
        Port:
          type: integer
        ServiceName:
          type: string
    kubernetes.K8sIngressTLS:
      type: object
      properties:
        Hosts:
          type: array
          items:
            type: string
        SecretName:
          type: string
    kubernetes.K8sJob:
      type: object
      properties:
        BackoffLimit:
          type: integer
        Command:
          type: string
        Completions:
          type: integer
        Container:
          $ref: '#/components/schemas/v1.Container'
        Duration:
          type: string
        FailedReason:
          type: string
        FinishTime:
          type: string
        Id:
          type: string
        IsSystem:
          type: boolean
        Name:
          type: string
        Namespace:
          type: string
        PodName:
          type: string
        StartTime:
          type: string
        Status:
          type: string
    kubernetes.K8sJobDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sNamespaceDetails:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Owner:
          type: string
        ResourceQuota:
          $ref: '#/components/schemas/kubernetes.K8sResourceQuota'
    kubernetes.K8sPersistentVolume:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        capacity:
          $ref: '#/components/schemas/v1.ResourceList'
        claimRef:
          $ref: '#/components/schemas/v1.ObjectReference'
        csi:
          $ref: '#/components/schemas/v1.CSIPersistentVolumeSource'
        name:
          type: string
        persistentVolumeReclaimPolicy:
          type: string
        storageClassName:
          type: string
        volumeMode:
          type: string
    kubernetes.K8sPersistentVolumeClaim:
      type: object
      properties:
        accessModes:
          type: array
          items:
            type: string
        creationDate:
          type: string
        id:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        owningApplications:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sApplication'
        phase:
          type: string
        resourcesRequests:
          $ref: '#/components/schemas/v1.ResourceList'
        storage:
          type: integer
        storageClass:
          type: string
        volumeMode:
          type: string
        volumeName:
          type: string
    kubernetes.K8sResourceQuota:
      type: object
      properties:
        cpu:
          type: string
        enabled:
          type: boolean
        memory:
          type: string
    kubernetes.K8sRole:
      type: object
      properties:
        creationDate:
          type: string
        isSystem:
          type: boolean
          description: |-
            isSystem is true if prefixed with "system:" or exists in the kube-system namespace
            or is one of the portainer roles
        name:
          type: string
        namespace:
          type: string
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    kubernetes.K8sRoleBinding:
      type: object
      properties:
        creationDate:
          type: string
        isSystem:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        roleRef:
          $ref: '#/components/schemas/v1.RoleRef'
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/v1.Subject'
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    kubernetes.K8sRoleBindingDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sRoleDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sSecret:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        ConfigurationOwner:
          type: string
        ConfigurationOwnerId:
          type: string
        ConfigurationOwners:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sConfigurationOwnerResource'
        CreationDate:
          type: string
        Data:
          type: object
          additionalProperties:
            type: string
        IsUsed:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Namespace:
          type: string
        SecretType:
          type: string
        UID:
          type: string
    kubernetes.K8sServiceAccount:
      type: object
      properties:
        creationDate:
          type: string
        isSystem:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    kubernetes.K8sServiceAccountDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sServiceDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sServiceInfo:
      type: object
      properties:
        allocateLoadBalancerNodePorts:
          type: boolean
        annotations:
          type: object
          additionalProperties:
            type: string
        applications:
          type: array
          description: serviceList screen
          items:
            $ref: '#/components/schemas/kubernetes.K8sApplication'
        clusterIPs:
          type: array
          items:
            type: string
        creationDate:
          type: string
        externalIPs:
          type: array
          items:
            type: string
        externalName:
          type: string
        ingressStatus:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sServiceIngress'
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.K8sServicePort'
        selector:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
        uid:
          type: string
    kubernetes.K8sServiceIngress:
      type: object
      properties:
        Hostname:
          type: string
        IP:
          type: string
    kubernetes.K8sServicePort:
      type: object
      properties:
        Name:
          type: string
        NodePort:
          type: integer
        Port:
          type: integer
        Protocol:
          type: string
        TargetPort:
          type: string
    kubernetes.K8sStorageClass:
      type: object
      properties:
        allowVolumeExpansion:
          type: boolean
        name:
          type: string
        provisioner:
          type: string
        reclaimPolicy:
          type: string
    kubernetes.K8sVolumeInfo:
      type: object
      properties:
        persistentVolume:
          $ref: '#/components/schemas/kubernetes.K8sPersistentVolume'
        persistentVolumeClaim:
          $ref: '#/components/schemas/kubernetes.K8sPersistentVolumeClaim'
        storageClass:
          $ref: '#/components/schemas/kubernetes.K8sStorageClass'
    kubernetes.Metadata:
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
    kubernetes.Pod:
      type: object
      properties:
        Status:
          type: string
    kubernetes.PublishedPort:
      type: object
      properties:
        IngressRules:
          type: array
          items:
            $ref: '#/components/schemas/kubernetes.IngressRule'
        Port:
          type: integer
    kubernetes.TLSInfo:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
    kubernetes.namespacesToggleSystemPayload:
      type: object
      properties:
        system:
          type: boolean
          description: Toggle the system state of this namespace to true or false
          example: true
    ldap.checkPayload:
      type: object
      properties:
        ldapsettings:
          $ref: '#/components/schemas/portainer.LDAPSettings'
    motd.motdResponse:
      type: object
      properties:
        ContentLayout:
          type: object
          additionalProperties:
            type: string
        Hash:
          type: array
          items:
            type: integer
        Message:
          type: string
        Style:
          type: string
        Title:
          type: string
    openamt.deviceActionPayload:
      type: object
      properties:
        action:
          type: string
    openamt.deviceFeaturesPayload:
      type: object
      properties:
        features:
          $ref: '#/components/schemas/portainer.OpenAMTDeviceEnabledFeatures'
    openamt.openAMTConfigurePayload:
      type: object
      properties:
        certFileContent:
          type: string
        certFileName:
          type: string
        certFilePassword:
          type: string
        domainName:
          type: string
        enabled:
          type: boolean
        mpspassword:
          type: string
        mpsserver:
          type: string
        mpsuser:
          type: string
    portainer.APIKey:
      type: object
      properties:
        dateCreated:
          type: integer
          description: Unix timestamp (UTC) when the API key was created
        description:
          type: string
          example: portainer-api-key
        digest:
          type: string
          description: Digest represents SHA256 hash of the raw API key
        id:
          type: integer
          example: 1
        lastUsed:
          type: integer
          description: Unix timestamp (UTC) when the API key was last used
        prefix:
          type: string
          description: API key identifier (7 char prefix)
        userId:
          type: integer
          description: User Identifier
          example: 1
    portainer.AccessPolicy:
      type: object
      properties:
        RoleId:
          type: integer
          description: Role identifier. Reference the role that will be associated
            to this access policy
          example: 1
    portainer.Authorizations:
      type: object
      additionalProperties:
        type: boolean
    portainer.AutoUpdateSettings:
      type: object
      properties:
        forcePullImage:
          type: boolean
          description: Pull latest image
          example: false
        forceUpdate:
          type: boolean
          description: Force update ignores repo changes
          example: false
        interval:
          type: string
          description: Auto update interval
          example: 1m30s
        jobID:
          type: string
          description: Autoupdate job id
          example: "15"
        webhook:
          type: string
          description: A UUID generated from client
          example: 05de31a2-79fa-4644-9c12-faa67e5c49f0
    portainer.AzureCredentials:
      type: object
      properties:
        ApplicationID:
          type: string
          description: Azure application ID
          example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        AuthenticationKey:
          type: string
          description: Azure authentication key
          example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        TenantID:
          type: string
          description: Azure tenant ID
          example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
    portainer.CustomTemplate:
      type: object
      properties:
        CreatedByUserId:
          type: integer
          description: User identifier who created this template
          example: 3
        Description:
          type: string
          description: Description of the template
          example: High performance web server
        EntryPoint:
          type: string
          description: Path to the Stack file
          example: docker-compose.yml
        GitConfig:
          $ref: '#/components/schemas/gittypes.RepoConfig'
        Id:
          type: integer
          description: CustomTemplate Identifier
          example: 1
        Logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        Note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        Platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
          example: 1
        ProjectPath:
          type: string
          description: Path on disk to the repository hosting the Stack file
          example: /data/custom_template/3
        ResourceControl:
          $ref: '#/components/schemas/portainer.ResourceControl'
        Title:
          type: string
          description: Title of the template
          example: Nginx
        Type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        variables:
          type: array
          items:
            $ref: '#/components/schemas/portainer.CustomTemplateVariableDefinition'
    portainer.CustomTemplateVariableDefinition:
      type: object
      properties:
        defaultValue:
          type: string
          example: default value
        description:
          type: string
          example: Description
        label:
          type: string
          example: My Variable
        name:
          type: string
          example: MY_VAR
    portainer.DiagnosticsData:
      type: object
      properties:
        DNS:
          type: object
          additionalProperties:
            type: string
        Log:
          type: string
        Proxy:
          type: object
          additionalProperties:
            type: string
        Telnet:
          type: object
          additionalProperties:
            type: string
    portainer.DockerSnapshot:
      type: object
      properties:
        ContainerCount:
          type: integer
        DiagnosticsData:
          $ref: '#/components/schemas/portainer.DiagnosticsData'
        DockerSnapshotRaw:
          $ref: '#/components/schemas/portainer.DockerSnapshotRaw'
        DockerVersion:
          type: string
        GpuUseAll:
          type: boolean
        GpuUseList:
          type: array
          items:
            type: string
        HealthyContainerCount:
          type: integer
        ImageCount:
          type: integer
        IsPodman:
          type: boolean
        NodeCount:
          type: integer
        RunningContainerCount:
          type: integer
        ServiceCount:
          type: integer
        StackCount:
          type: integer
        StoppedContainerCount:
          type: integer
        Swarm:
          type: boolean
        Time:
          type: integer
        TotalCPU:
          type: integer
        TotalMemory:
          type: integer
        UnhealthyContainerCount:
          type: integer
        VolumeCount:
          type: integer
    portainer.DockerSnapshotRaw:
      type: object
    portainer.EcrData:
      type: object
      properties:
        Region:
          type: string
          example: ap-southeast-2
    portainer.Edge:
      type: object
      properties:
        AsyncMode:
          type: boolean
          description: Deprecated 2.18
          example: false
        CommandInterval:
          type: integer
          description: The command list interval for edge agent - used in edge async
            mode (in seconds)
          example: 5
        PingInterval:
          type: integer
          description: The ping interval for edge agent - used in edge async mode
            (in seconds)
          example: 5
        SnapshotInterval:
          type: integer
          description: The snapshot interval for edge agent - used in edge async mode
            (in seconds)
          example: 5
    portainer.EdgeGroup:
      type: object
      properties:
        Dynamic:
          type: boolean
        Endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        Id:
          type: integer
          description: EdgeGroup Identifier
          example: 1
        Name:
          type: string
        PartialMatch:
          type: boolean
        TagIds:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    portainer.EdgeJob:
      type: object
      properties:
        Created:
          type: integer
        CronExpression:
          type: string
        EdgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        Endpoints:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/portainer.EdgeJobEndpointMeta'
        Id:
          type: integer
          description: EdgeJob Identifier
          example: 1
        Name:
          type: string
        Recurring:
          type: boolean
        ScriptPath:
          type: string
        Version:
          type: integer
        groupLogsCollection:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/portainer.EdgeJobEndpointMeta'
          description: Field used for log collection of Endpoints belonging to EdgeGroups
    portainer.EdgeJobEndpointMeta:
      type: object
      properties:
        collectLogs:
          type: boolean
        logsStatus:
          type: integer
    portainer.EdgeStack:
      type: object
      properties:
        CreationDate:
          type: integer
          description: "StatusArray    map[EndpointID][]EdgeStackStatus `json:\"StatusArray\"\
            `"
        DeploymentType:
          type: integer
        EdgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        EntryPoint:
          type: string
        Id:
          type: integer
          description: EdgeStack Identifier
          example: 1
        ManifestPath:
          type: string
        Name:
          type: string
        NumDeployments:
          type: integer
        ProjectPath:
          type: string
        Status:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/portainer.EdgeStackStatus'
        Version:
          type: integer
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    portainer.EdgeStackDeploymentStatus:
      type: object
      properties:
        Error:
          type: string
        RollbackTo:
          type: integer
          description: EE only feature
        Version:
          type: integer
        time:
          type: integer
        type:
          type: integer
    portainer.EdgeStackStatus:
      type: object
      properties:
        Details:
          $ref: '#/components/schemas/portainer.EdgeStackStatusDetails'
        Error:
          type: string
          description: Deprecated
        ReadyRePullImage:
          type: boolean
          description: ReadyRePullImage is a flag to indicate whether the auto update
            is trigger to re-pull image
        Type:
          type: integer
          description: Deprecated
        deploymentInfo:
          $ref: '#/components/schemas/portainer.StackDeploymentInfo'
        endpointID:
          type: integer
        status:
          type: array
          items:
            $ref: '#/components/schemas/portainer.EdgeStackDeploymentStatus'
    portainer.EdgeStackStatusDetails:
      type: object
      properties:
        acknowledged:
          type: boolean
        error:
          type: boolean
        imagesPulled:
          type: boolean
        ok:
          type: boolean
        pending:
          type: boolean
        remoteUpdateSuccess:
          type: boolean
        remove:
          type: boolean
    portainer.Endpoint:
      type: object
      properties:
        AMTDeviceGUID:
          type: string
          description: The identifier of the AMT Device associated with this environment(endpoint)
          example: 4c4c4544-004b-3910-8037-b6c04f504633
        AuthorizedTeams:
          type: array
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User identifier
            example: 1
        AzureCredentials:
          $ref: '#/components/schemas/portainer.AzureCredentials'
        ComposeSyntaxMaxVersion:
          type: string
          description: Maximum version of docker-compose
          example: "3.8"
        ContainerEngine:
          type: string
          description: "ContainerEngine represents the container engine type. This\
            \ can be 'docker' or 'podman' when interacting directly with these environmentes,\
            \ otherwise '' for kubernetes environments."
          example: docker
        EdgeCheckinInterval:
          type: integer
          description: The check in interval for edge agent (in seconds)
          example: 5
        EdgeID:
          type: string
          description: The identifier of the edge agent associated with this environment(endpoint)
        EdgeKey:
          type: string
          description: The key which is used to map the agent to Portainer
        EnableGPUManagement:
          type: boolean
        Gpus:
          type: array
          items:
            $ref: '#/components/schemas/portainer.Pair'
        GroupId:
          type: integer
          description: Environment(Endpoint) group identifier
          example: 1
        Heartbeat:
          type: boolean
          description: Heartbeat indicates the heartbeat status of an edge environment
          example: true
        Id:
          type: integer
          description: Environment(Endpoint) Identifier
          example: 1
        IsEdgeDevice:
          type: boolean
          description: Deprecated v2.18
        Kubernetes:
          $ref: '#/components/schemas/portainer.KubernetesData'
        Name:
          type: string
          description: Environment(Endpoint) name
          example: my-environment
        PostInitMigrations:
          $ref: '#/components/schemas/portainer.EndpointPostInitMigrations'
        PublicURL:
          type: string
          description: URL or IP address where exposed containers will be reachable
          example: docker.mydomain.tld:2375
        Snapshots:
          type: array
          description: List of snapshots
          items:
            $ref: '#/components/schemas/portainer.DockerSnapshot'
        Status:
          type: integer
          description: "The status of the environment(endpoint) (1 - up, 2 - down)"
          example: 1
        TLS:
          type: boolean
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 4
        TLSCACert:
          type: string
        TLSCert:
          type: string
        TLSConfig:
          $ref: '#/components/schemas/portainer.TLSConfiguration'
        TLSKey:
          type: string
        TagIds:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            is associated
          items:
            type: integer
            description: Tag identifier
            example: 1
        Tags:
          type: array
          description: Deprecated in DBVersion == 22
          items:
            type: string
        TeamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        Type:
          type: integer
          description: "Environment(Endpoint) environment(endpoint) type. 1 for a\
            \ Docker environment(endpoint), 2 for an agent on Docker environment(endpoint)\
            \ or 3 for an Azure environment(endpoint)."
          example: 1
        URL:
          type: string
          description: URL or IP address of the Docker host associated to this environment(endpoint)
          example: docker.mydomain.tld:2375
        UserAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
        UserTrusted:
          type: boolean
          description: Whether the device has been trusted or not by the user
        agent:
          type: object
          properties:
            version:
              type: string
              example: 1.0.0
        edge:
          $ref: '#/components/schemas/portainer.EnvironmentEdgeSettings'
        lastCheckInDate:
          type: integer
          description: LastCheckInDate mark last check-in date on checkin
        queryDate:
          type: integer
          description: QueryDate of each query with the endpoints list
        securitySettings:
          $ref: '#/components/schemas/portainer.EndpointSecuritySettings'
    portainer.EndpointAuthorizations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/portainer.Authorizations'
    portainer.EndpointGroup:
      type: object
      properties:
        AuthorizedTeams:
          type: array
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User identifier
            example: 1
        Description:
          type: string
          description: Description associated to the environment(endpoint) group
          example: Environment(Endpoint) group description
        Id:
          type: integer
          description: Environment(Endpoint) group Identifier
          example: 1
        Labels:
          type: array
          description: Deprecated fields
          items:
            $ref: '#/components/schemas/portainer.Pair'
        Name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        TagIds:
          type: array
          description: List of tags associated to this environment(endpoint) group
          items:
            type: integer
            description: Tag identifier
            example: 1
        Tags:
          type: array
          description: Deprecated in DBVersion == 22
          items:
            type: string
        TeamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        UserAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
    portainer.EndpointPostInitMigrations:
      type: object
      properties:
        MigrateGPUs:
          type: boolean
        MigrateIngresses:
          type: boolean
    portainer.EndpointSecuritySettings:
      type: object
      properties:
        allowBindMountsForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use bind mounts
            when creating containers
          example: false
        allowContainerCapabilitiesForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use container capabilities
          example: true
        allowDeviceMappingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use device mapping
          example: true
        allowHostNamespaceForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use the host pid
          example: true
        allowPrivilegedModeForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use privileged
            mode when creating containers
          example: false
        allowStackManagementForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to manage stacks
          example: true
        allowSysctlSettingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use sysctl settings
          example: true
        allowVolumeBrowserForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to browse volumes
          example: true
        enableHostManagementFeatures:
          type: boolean
          description: Whether host management features are enabled
          example: true
    portainer.EnvironmentEdgeSettings:
      type: object
      properties:
        CommandInterval:
          type: integer
          description: "The command list interval for edge agent - used in edge async\
            \ mode [seconds]"
          example: 60
        PingInterval:
          type: integer
          description: "The ping interval for edge agent - used in edge async mode\
            \ [seconds]"
          example: 60
        SnapshotInterval:
          type: integer
          description: "The snapshot interval for edge agent - used in edge async\
            \ mode [seconds]"
          example: 60
        asyncMode:
          type: boolean
          description: Whether the device has been started in edge async mode
    portainer.GitlabRegistryData:
      type: object
      properties:
        InstanceURL:
          type: string
        ProjectId:
          type: integer
        ProjectPath:
          type: string
    portainer.GlobalDeploymentOptions:
      type: object
      properties:
        hideStacksFunctionality:
          type: boolean
          example: false
    portainer.HelmUserRepository:
      type: object
      properties:
        Id:
          type: integer
          description: Membership Identifier
          example: 1
        URL:
          type: string
          description: Helm repository URL
          example: https://charts.bitnami.com/bitnami
        UserId:
          type: integer
          description: User identifier
          example: 1
    portainer.InternalAuthSettings:
      type: object
      properties:
        requiredPasswordLength:
          type: integer
    portainer.K8sNamespaceInfo:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        CreationDate:
          type: string
        Id:
          type: string
        IsDefault:
          type: boolean
        IsSystem:
          type: boolean
        Name:
          type: string
        NamespaceOwner:
          type: string
        ResourceQuota:
          $ref: '#/components/schemas/v1.ResourceQuota'
        Status:
          $ref: '#/components/schemas/v1.NamespaceStatus'
    portainer.K8sNodeLimits:
      type: object
      properties:
        CPU:
          type: integer
        Memory:
          type: integer
    portainer.K8sNodesLimits:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/portainer.K8sNodeLimits'
    portainer.KubernetesConfiguration:
      type: object
      properties:
        AllowNoneIngressClass:
          type: boolean
        EnableResourceOverCommit:
          type: boolean
        IngressAvailabilityPerNamespace:
          type: boolean
        IngressClasses:
          type: array
          items:
            $ref: '#/components/schemas/portainer.KubernetesIngressClassConfig'
        ResourceOverCommitPercentage:
          type: integer
        RestrictDefaultNamespace:
          type: boolean
        StorageClasses:
          type: array
          items:
            $ref: '#/components/schemas/portainer.KubernetesStorageClassConfig'
        UseLoadBalancer:
          type: boolean
        UseServerMetrics:
          type: boolean
    portainer.KubernetesData:
      type: object
      properties:
        Configuration:
          $ref: '#/components/schemas/portainer.KubernetesConfiguration'
        Flags:
          $ref: '#/components/schemas/portainer.KubernetesFlags'
        Snapshots:
          type: array
          items:
            $ref: '#/components/schemas/portainer.KubernetesSnapshot'
    portainer.KubernetesFlags:
      type: object
      properties:
        IsServerIngressClassDetected:
          type: boolean
        IsServerMetricsDetected:
          type: boolean
        IsServerStorageDetected:
          type: boolean
    portainer.KubernetesIngressClassConfig:
      type: object
      properties:
        Blocked:
          type: boolean
        BlockedNamespaces:
          type: array
          items:
            type: string
        Name:
          type: string
        Type:
          type: string
    portainer.KubernetesSnapshot:
      type: object
      properties:
        DiagnosticsData:
          $ref: '#/components/schemas/portainer.DiagnosticsData'
        KubernetesVersion:
          type: string
        NodeCount:
          type: integer
        Time:
          type: integer
        TotalCPU:
          type: integer
        TotalMemory:
          type: integer
    portainer.KubernetesStorageClassConfig:
      type: object
      properties:
        AccessModes:
          type: array
          items:
            type: string
        AllowVolumeExpansion:
          type: boolean
        Name:
          type: string
        Provisioner:
          type: string
    portainer.LDAPGroupSearchSettings:
      type: object
      properties:
        GroupAttribute:
          type: string
          description: LDAP attribute which denotes the group membership
          example: member
        GroupBaseDN:
          type: string
          description: The distinguished name of the element from which the LDAP server
            will search for groups
          example: "dc=ldap,dc=domain,dc=tld"
        GroupFilter:
          type: string
          description: "The LDAP search filter used to select group elements, optional"
          example: (objectClass=account
    portainer.LDAPSearchSettings:
      type: object
      properties:
        BaseDN:
          type: string
          description: The distinguished name of the element from which the LDAP server
            will search for users
          example: "dc=ldap,dc=domain,dc=tld"
        Filter:
          type: string
          description: Optional LDAP search filter used to select user elements
          example: (objectClass=account)
        UserNameAttribute:
          type: string
          description: LDAP attribute which denotes the username
          example: uid
    portainer.LDAPSettings:
      type: object
      properties:
        AnonymousMode:
          type: boolean
          description: "Enable this option if the server is configured for Anonymous\
            \ access. When enabled, ReaderDN and Password will not be used"
          example: true
        AutoCreateUsers:
          type: boolean
          description: Automatically provision users and assign them to matching LDAP
            group names
          example: true
        GroupSearchSettings:
          type: array
          items:
            $ref: '#/components/schemas/portainer.LDAPGroupSearchSettings'
        Password:
          type: string
          description: Password of the account that will be used to search users
          example: readonly-password
        ReaderDN:
          type: string
          description: Account that will be used to search for users
          example: "cn=readonly-account,dc=ldap,dc=domain,dc=tld"
        SearchSettings:
          type: array
          items:
            $ref: '#/components/schemas/portainer.LDAPSearchSettings'
        StartTLS:
          type: boolean
          description: Whether LDAP connection should use StartTLS
          example: true
        TLSConfig:
          $ref: '#/components/schemas/portainer.TLSConfiguration'
        URL:
          type: string
          description: URL or IP address of the LDAP server
          example: myldap.domain.tld:389
    portainer.OAuthSettings:
      type: object
      properties:
        AccessTokenURI:
          type: string
        AuthStyle:
          type: integer
        AuthorizationURI:
          type: string
        ClientID:
          type: string
        ClientSecret:
          type: string
        DefaultTeamID:
          type: integer
        KubeSecretKey:
          type: array
          items:
            type: integer
        LogoutURI:
          type: string
        OAuthAutoCreateUsers:
          type: boolean
        RedirectURI:
          type: string
        ResourceURI:
          type: string
        SSO:
          type: boolean
        Scopes:
          type: string
        UserIdentifier:
          type: string
    portainer.OpenAMTConfiguration:
      type: object
      properties:
        certFileContent:
          type: string
        certFileName:
          type: string
        certFilePassword:
          type: string
        domainName:
          type: string
        enabled:
          type: boolean
        mpsPassword:
          type: string
        mpsServer:
          type: string
        mpsToken:
          type: string
          description: retrieved from API
        mpsUser:
          type: string
    portainer.OpenAMTDeviceEnabledFeatures:
      type: object
      properties:
        IDER:
          type: boolean
        KVM:
          type: boolean
        SOL:
          type: boolean
        redirection:
          type: boolean
        userConsent:
          type: string
    portainer.Pair:
      type: object
      properties:
        name:
          type: string
          example: name
        value:
          type: string
          example: value
    portainer.QuayRegistryData:
      type: object
      properties:
        OrganisationName:
          type: string
        UseOrganisation:
          type: boolean
    portainer.Registry:
      type: object
      properties:
        AccessToken:
          type: string
          description: Stores temporary access token
        AccessTokenExpiry:
          type: integer
        Authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: true
        AuthorizedTeams:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User identifier
            example: 1
        BaseURL:
          type: string
          description: "Base URL, introduced for ProGet registry"
          example: registry.mydomain.tld:2375
        Ecr:
          $ref: '#/components/schemas/portainer.EcrData'
        Gitlab:
          $ref: '#/components/schemas/portainer.GitlabRegistryData'
        Id:
          type: integer
          description: Registry Identifier
          example: 1
        ManagementConfiguration:
          $ref: '#/components/schemas/portainer.RegistryManagementConfiguration'
        Name:
          type: string
          description: Registry Name
          example: my-registry
        Password:
          type: string
          description: Password or SecretAccessKey used to authenticate against this
            registry
          example: registry_password
        Quay:
          $ref: '#/components/schemas/portainer.QuayRegistryData'
        RegistryAccesses:
          $ref: '#/components/schemas/portainer.RegistryAccesses'
        TeamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        Type:
          type: integer
          description: "Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab,\
            \ 5 - ProGet, 6 - DockerHub, 7 - ECR)"
        URL:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375
        UserAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
        Username:
          type: string
          description: Username or AccessKeyID used to authenticate against this registry
          example: registry user
    portainer.RegistryAccessPolicies:
      type: object
      properties:
        Namespaces:
          type: array
          items:
            type: string
        TeamAccessPolicies:
          $ref: '#/components/schemas/portainer.TeamAccessPolicies'
        UserAccessPolicies:
          $ref: '#/components/schemas/portainer.UserAccessPolicies'
    portainer.RegistryAccesses:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/portainer.RegistryAccessPolicies'
    portainer.RegistryManagementConfiguration:
      type: object
      properties:
        AccessToken:
          type: string
        AccessTokenExpiry:
          type: integer
        Authentication:
          type: boolean
        Ecr:
          $ref: '#/components/schemas/portainer.EcrData'
        Password:
          type: string
        TLSConfig:
          $ref: '#/components/schemas/portainer.TLSConfiguration'
        Type:
          type: integer
          description: "Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab,\
            \ 5 - ProGet, 6 - DockerHub, 7 - ECR)"
        Username:
          type: string
    portainer.ResourceControl:
      type: object
      properties:
        AccessLevel:
          type: integer
        AdministratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        Id:
          type: integer
          description: ResourceControl Identifier
          example: 1
        OwnerId:
          type: integer
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 2
        Public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        ResourceId:
          type: string
          description: |-
            Docker resource identifier on which access control will be applied.\
            In the case of a resource control applied to a stack, use the stack name as identifier
          example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        SubResourceIds:
          type: array
          description: List of Docker resources that will inherit this access control
          example:
          - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
          items:
            type: string
        System:
          type: boolean
        TeamAccesses:
          type: array
          items:
            $ref: '#/components/schemas/portainer.TeamResourceAccess'
        Type:
          type: integer
          description: |-
            Type of Docker resource. Valid values are: 1- container, 2 -service
            3 - volume, 4 - secret, 5 - stack, 6 - config or 7 - custom template
          example: 1
        UserAccesses:
          type: array
          items:
            $ref: '#/components/schemas/portainer.UserResourceAccess'
    portainer.Role:
      type: object
      properties:
        Authorizations:
          $ref: '#/components/schemas/portainer.Authorizations'
        Description:
          type: string
          description: Role description
          example: Read-only access of all resources in an environment(endpoint)
        Id:
          type: integer
          description: Role Identifier
          example: 1
        Name:
          type: string
          description: Role name
          example: HelpDesk
        Priority:
          type: integer
    portainer.SSLSettings:
      type: object
      properties:
        certPath:
          type: string
        httpEnabled:
          type: boolean
        keyPath:
          type: string
        selfSigned:
          type: boolean
    portainer.Settings:
      type: object
      properties:
        AgentSecret:
          type: string
          description: Container environment parameter AGENT_SECRET
        AllowBindMountsForRegularUsers:
          type: boolean
        AllowContainerCapabilitiesForRegularUsers:
          type: boolean
        AllowDeviceMappingForRegularUsers:
          type: boolean
        AllowHostNamespaceForRegularUsers:
          type: boolean
        AllowPrivilegedModeForRegularUsers:
          type: boolean
        AllowStackManagementForRegularUsers:
          type: boolean
        AllowVolumeBrowserForRegularUsers:
          type: boolean
        AuthenticationMethod:
          type: integer
          description: "Active authentication method for the Portainer instance. Valid\
            \ values are: 1 for internal, 2 for LDAP, or 3 for oauth"
          example: 1
        BlackListedLabels:
          type: array
          description: A list of label name & value that will be used to hide containers
            when querying containers
          items:
            $ref: '#/components/schemas/portainer.Pair'
        DisplayDonationHeader:
          type: boolean
          description: Deprecated fields
        DisplayExternalContributors:
          type: boolean
        Edge:
          $ref: '#/components/schemas/portainer.Edge'
        EdgeAgentCheckinInterval:
          type: integer
          description: The default check in interval for edge agent (in seconds)
          example: 5
        EdgePortainerUrl:
          type: string
          description: EdgePortainerURL is the URL that is exposed to edge agents
        EnableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
        EnableHostManagementFeatures:
          type: boolean
          description: Deprecated fields v26
        EnableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: false
        EnforceEdgeID:
          type: boolean
          description: EnforceEdgeID makes Portainer store the Edge ID instead of
            accepting anyone
          example: false
        FeatureFlagSettings:
          type: object
          additionalProperties:
            type: boolean
        GlobalDeploymentOptions:
          $ref: '#/components/schemas/portainer.GlobalDeploymentOptions'
        HelmRepositoryURL:
          type: string
          description: "Helm repository URL, defaults to \"https://charts.bitnami.com/bitnami\""
          example: https://charts.bitnami.com/bitnami
        InternalAuthSettings:
          $ref: '#/components/schemas/portainer.InternalAuthSettings'
        IsDockerDesktopExtension:
          type: boolean
        KubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
        KubectlShellImage:
          type: string
          description: "KubectlImage, defaults to portainer/kubectl-shell"
          example: portainer/kubectl-shell
        LDAPSettings:
          $ref: '#/components/schemas/portainer.LDAPSettings'
        LogoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        OAuthSettings:
          $ref: '#/components/schemas/portainer.OAuthSettings'
        SnapshotInterval:
          type: string
          description: The interval in which environment(endpoint) snapshots are created
          example: 5m
        TemplatesURL:
          type: string
          description: URL to the templates that will be displayed in the UI when
            navigating to App Templates
          example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        TrustOnFirstConnect:
          type: boolean
          description: TrustOnFirstConnect makes Portainer accepting edge agent connection
            by default
          example: false
        UserSessionTimeout:
          type: string
          description: The duration of a user session
          example: 5m
        openAMTConfiguration:
          $ref: '#/components/schemas/portainer.OpenAMTConfiguration'
    portainer.Stack:
      type: object
      properties:
        AdditionalFiles:
          type: array
          description: Only applies when deploying stack with multiple files
          items:
            type: string
        AutoUpdate:
          $ref: '#/components/schemas/portainer.AutoUpdateSettings'
        EndpointId:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          example: 1
        EntryPoint:
          type: string
          description: Path to the Stack file
          example: docker-compose.yml
        Env:
          type: array
          description: A list of environment(endpoint) variables used during stack
            deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        Id:
          type: integer
          description: Stack Identifier
          example: 1
        Name:
          type: string
          description: Stack name
          example: myStack
        Option:
          $ref: '#/components/schemas/portainer.StackOption'
        ResourceControl:
          $ref: '#/components/schemas/portainer.ResourceControl'
        Status:
          type: integer
          description: "Stack status (1 - active, 2 - inactive)"
          example: 1
        SwarmId:
          type: string
          description: Cluster identifier of the Swarm cluster where the stack is
            deployed
          example: jpofkc0i9uo9wtx1zesuk649w
        Type:
          type: integer
          description: "Stack type. 1 for a Swarm stack, 2 for a Compose stack"
          example: 2
        createdBy:
          type: string
          description: The username which created this stack
          example: admin
        creationDate:
          type: integer
          description: The date in unix time when stack was created
          example: 1587399600
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        gitConfig:
          $ref: '#/components/schemas/gittypes.RepoConfig'
        namespace:
          type: string
          description: Kubernetes namespace if stack is a kube application
          example: default
        projectPath:
          type: string
          description: Path on disk to the repository hosting the Stack file
          example: /data/compose/myStack_jpofkc0i9uo9wtx1zesuk649w
        updateDate:
          type: integer
          description: The date in unix time when stack was last updated
          example: 1587399600
        updatedBy:
          type: string
          description: The username which last updated this stack
          example: bob
    portainer.StackDeploymentInfo:
      type: object
      properties:
        ConfigHash:
          type: string
          description: ConfigHash is the commit hash of the git repository used for
            deploying the stack
        FileVersion:
          type: integer
          description: "FileVersion is the version of the stack file, used to detect\
            \ changes"
        Version:
          type: integer
          description: Version is the version of the stack and also is the deployed
            version in edge agent
    portainer.StackOption:
      type: object
      properties:
        prune:
          type: boolean
          description: Prune services that are no longer referenced
          example: false
    portainer.TLSConfiguration:
      type: object
      properties:
        TLS:
          type: boolean
          description: Use TLS
          example: true
        TLSCACert:
          type: string
          description: Path to the TLS CA certificate file
          example: /data/tls/ca.pem
        TLSCert:
          type: string
          description: Path to the TLS client certificate file
          example: /data/tls/cert.pem
        TLSKey:
          type: string
          description: Path to the TLS client key file
          example: /data/tls/key.pem
        TLSSkipVerify:
          type: boolean
          description: Skip the verification of the server TLS certificate
          example: false
    portainer.Tag:
      type: object
      properties:
        EndpointGroups:
          type: object
          additionalProperties:
            type: boolean
          description: A set of environment(endpoint) group ids that have this tag
        Endpoints:
          type: object
          additionalProperties:
            type: boolean
          description: A set of environment(endpoint) ids that have this tag
        Name:
          type: string
          description: Tag name
          example: org/acme
        id:
          type: integer
          description: Tag identifier
          example: 1
    portainer.Team:
      type: object
      properties:
        Id:
          type: integer
          description: Team Identifier
          example: 1
        Name:
          type: string
          description: Team name
          example: developers
    portainer.TeamAccessPolicies:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/portainer.AccessPolicy'
    portainer.TeamMembership:
      type: object
      properties:
        Id:
          type: integer
          description: Membership Identifier
          example: 1
        Role:
          type: integer
          description: Team role (1 for team leader and 2 for team member)
          example: 1
        TeamID:
          type: integer
          description: Team identifier
          example: 1
        UserID:
          type: integer
          description: User identifier
          example: 1
    portainer.TeamResourceAccess:
      type: object
      properties:
        AccessLevel:
          type: integer
        TeamId:
          type: integer
    portainer.Template:
      type: object
      properties:
        administrator_only:
          type: boolean
          description: Whether the template should be available to administrators
            only
          example: true
        categories:
          type: array
          description: A list of categories associated to the template
          example:
          - database
          items:
            type: string
        command:
          type: string
          description: The command that will be executed in a container template
          example: ls -lah
        description:
          type: string
          description: Description of the template
          example: High performance web server
        env:
          type: array
          description: A list of environment(endpoint) variables used during the template
            deployment
          items:
            $ref: '#/components/schemas/portainer.TemplateEnv'
        hostname:
          type: string
          description: Container hostname
          example: mycontainer
        id:
          type: integer
          description: |-
            Mandatory container/stack fields
            Template Identifier
          example: 1
        image:
          type: string
          description: |-
            Mandatory container fields
            Image associated to a container template. Mandatory for a container template
          example: nginx:latest
        interactive:
          type: boolean
          description: |-
            Whether the container should be started in
            interactive mode (-i -t equivalent on the CLI)
          example: true
        labels:
          type: array
          description: Container labels
          items:
            $ref: '#/components/schemas/portainer.Pair'
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        name:
          type: string
          description: |-
            Optional stack/container fields
            Default name for the stack/container to be used on deployment
          example: mystackname
        network:
          type: string
          description: Name of a network that will be used on container deployment
            if it exists inside the environment(endpoint)
          example: mynet
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: string
          description: |-
            Platform associated to the template.
            Valid values are: 'linux', 'windows' or leave empty for multi-platform
          example: linux
        ports:
          type: array
          description: A list of ports exposed by the container
          example:
          - 8080:80/tcp
          items:
            type: string
        privileged:
          type: boolean
          description: Whether the container should be started in privileged mode
          example: true
        registry:
          type: string
          description: |-
            Optional container fields
            The URL of a registry associated to the image for a container template
          example: quay.io
        repository:
          $ref: '#/components/schemas/portainer.TemplateRepository'
        restart_policy:
          type: string
          description: Container restart policy
          example: on-failure
        stackFile:
          type: string
          description: |-
            Mandatory Edge stack fields
            Stack file used for this template
        title:
          type: string
          description: Title of the template
          example: Nginx
        type:
          type: integer
          description: "Template type. Valid values are: 1 (container), 2 (Swarm stack),\
            \ 3 (Compose stack), 4 (Compose edge stack)"
          example: 1
        volumes:
          type: array
          description: A list of volumes used during the container template deployment
          items:
            $ref: '#/components/schemas/portainer.TemplateVolume'
    portainer.TemplateEnv:
      type: object
      properties:
        default:
          type: string
          description: Default value that will be set for the variable
          example: default_value
        description:
          type: string
          description: Content of the tooltip that will be generated in the UI
          example: MySQL root account password
        label:
          type: string
          description: Text for the label that will be generated in the UI
          example: Root password
        name:
          type: string
          description: name of the environment(endpoint) variable
          example: MYSQL_ROOT_PASSWORD
        preset:
          type: boolean
          description: "If set to true, will not generate any input for this variable\
            \ in the UI"
          example: false
        select:
          type: array
          description: A list of name/value that will be used to generate a dropdown
            in the UI
          items:
            $ref: '#/components/schemas/portainer.TemplateEnvSelect'
    portainer.TemplateEnvSelect:
      type: object
      properties:
        default:
          type: boolean
          description: Will set this choice as the default choice
          example: false
        text:
          type: string
          description: Some text that will displayed as a choice
          example: text value
        value:
          type: string
          description: A value that will be associated to the choice
          example: value
    portainer.TemplateRepository:
      type: object
      properties:
        stackfile:
          type: string
          description: Path to the stack file inside the git repository
          example: ./subfolder/docker-compose.yml
        url:
          type: string
          description: URL of a git repository used to deploy a stack template. Mandatory
            for a Swarm/Compose stack template
          example: https://github.com/portainer/portainer-compose
    portainer.TemplateVolume:
      type: object
      properties:
        bind:
          type: string
          description: Path on the host
          example: /tmp
        container:
          type: string
          description: Path inside the container
          example: /data
        readonly:
          type: boolean
          description: Whether the volume used should be readonly
          example: true
    portainer.User:
      type: object
      properties:
        Id:
          type: integer
          description: User Identifier
          example: 1
        Role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 1
        ThemeSettings:
          $ref: '#/components/schemas/portainer.UserThemeSettings'
        TokenIssueAt:
          type: integer
          example: 1
        UseCache:
          type: boolean
          example: true
        UserTheme:
          type: string
          description: Deprecated
          example: dark
        Username:
          type: string
          example: bob
        endpointAuthorizations:
          $ref: '#/components/schemas/portainer.EndpointAuthorizations'
        portainerAuthorizations:
          $ref: '#/components/schemas/portainer.Authorizations'
    portainer.UserAccessPolicies:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/portainer.AccessPolicy'
    portainer.UserResourceAccess:
      type: object
      properties:
        AccessLevel:
          type: integer
        UserId:
          type: integer
          description: User identifier who created this template
    portainer.UserThemeSettings:
      type: object
      properties:
        color:
          type: string
          description: Color represents the color theme of the UI
          example: dark
          enum:
          - dark
          - light
          - highcontrast
          - auto
    portainer.Webhook:
      type: object
      properties:
        EndpointId:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
        Id:
          type: integer
          description: Webhook Identifier
          example: 1
        RegistryId:
          type: integer
          description: Registry Identifier
        ResourceId:
          type: string
        Token:
          type: string
        Type:
          type: integer
          description: Type of webhook (1 - service)
    registries.registryConfigurePayload:
      required:
      - authentication
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        region:
          type: string
          description: ECR region
        tls:
          type: boolean
          description: Use TLS
          example: true
        tlscacertFile:
          type: array
          description: The TLS CA certificate file
          items:
            type: integer
        tlscertFile:
          type: array
          description: The TLS client certificate file
          items:
            type: integer
        tlskeyFile:
          type: array
          description: The TLS client key file
          items:
            type: integer
        tlsskipVerify:
          type: boolean
          description: Skip the verification of the server TLS certificate
          example: false
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    registries.registryCreatePayload:
      required:
      - authentication
      - name
      - type
      - url
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        baseURL:
          type: string
          description: BaseURL required for ProGet registry
          example: registry.mydomain.tld:2375
        ecr:
          $ref: '#/components/schemas/portainer.EcrData'
        gitlab:
          $ref: '#/components/schemas/portainer.GitlabRegistryData'
        name:
          type: string
          description: Name that will be used to identify this registry
          example: my-registry
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        quay:
          $ref: '#/components/schemas/portainer.QuayRegistryData'
        type:
          type: integer
          description: "Registry Type. Valid values are:\n\t1 (Quay.io),\n\t2 (Azure\
            \ container registry),\n\t3 (custom registry),\n\t4 (Gitlab registry),\n\
            \t5 (ProGet registry),\n\t6 (DockerHub)\n\t7 (ECR)"
          example: 1
        url:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375/feed
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    registries.registryUpdatePayload:
      required:
      - authentication
      - name
      - url
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        baseURL:
          type: string
          description: BaseURL is used for quay registry
          example: registry.mydomain.tld:2375
        ecr:
          $ref: '#/components/schemas/portainer.EcrData'
        name:
          type: string
          description: Name that will be used to identify this registry
          example: my-registry
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        quay:
          $ref: '#/components/schemas/portainer.QuayRegistryData'
        registryAccesses:
          $ref: '#/components/schemas/portainer.RegistryAccesses'
        url:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    release.Chart:
      type: object
      properties:
        files:
          type: array
          description: |-
            Files are miscellaneous files in a chart archive,
            e.g. README, LICENSE, etc.
          items:
            $ref: '#/components/schemas/release.File'
        lock:
          $ref: '#/components/schemas/release.Lock'
        metadata:
          $ref: '#/components/schemas/release.Metadata'
        schema:
          type: array
          description: Schema is an optional JSON schema for imposing structure on
            Values
          items:
            type: integer
        templates:
          type: array
          description: Templates for this chart.
          items:
            $ref: '#/components/schemas/release.File'
        values:
          type: object
          additionalProperties:
            type: object
          description: Values are default config for this chart.
    release.Dependency:
      type: object
      properties:
        alias:
          type: string
          description: Alias usable alias to be used for the chart
        condition:
          type: string
          description: "A yaml path that resolves to a boolean, used for enabling/disabling\
            \ charts (e.g. subchart1.enabled )"
        enabled:
          type: boolean
          description: Enabled bool determines if chart should be loaded
        import-values:
          type: array
          description: |-
            ImportValues holds the mapping of source values to parent key to be imported. Each item can be a
            string or pair of child/parent sublist items.
          items:
            type: object
        name:
          type: string
          description: |-
            Name is the name of the dependency.

            This must mach the name in the dependency's Chart.yaml.
        repository:
          type: string
          description: |-
            The URL to the repository.

            Appending `index.yaml` to this string should result in a URL that can be
            used to fetch the repository index.
        tags:
          type: array
          description: Tags can be used to group charts for enabling/disabling together
          items:
            type: string
        version:
          type: string
          description: |-
            Version is the version (range) of this chart.

            A lock file will always produce a single version, while a dependency
            may contain a semantic version range.
    release.File:
      type: object
      properties:
        data:
          type: array
          description: Data is the template as byte data.
          items:
            type: integer
        name:
          type: string
          description: Name is the path-like name of the template.
    release.Hook:
      type: object
      properties:
        delete_policies:
          type: array
          description: DeletePolicies are the policies that indicate when to delete
            the hook
          items:
            type: string
        events:
          type: array
          description: Events are the events that this hook fires on.
          items:
            type: string
        kind:
          type: string
          description: Kind is the Kubernetes kind.
        last_run:
          $ref: '#/components/schemas/release.HookExecution'
        manifest:
          type: string
          description: Manifest is the manifest contents.
        name:
          type: string
        path:
          type: string
          description: Path is the chart-relative path to the template.
        weight:
          type: integer
          description: Weight indicates the sort order for execution among similar
            Hook type
    release.HookExecution:
      type: object
      properties:
        completed_at:
          type: string
          description: CompletedAt indicates the date/time this hook was completed.
        phase:
          type: string
          description: Phase indicates whether the hook completed successfully
        started_at:
          type: string
          description: StartedAt indicates the date/time this hook was started
    release.Lock:
      type: object
      properties:
        dependencies:
          type: array
          description: Dependencies is the list of dependencies that this lock file
            has locked.
          items:
            $ref: '#/components/schemas/release.Dependency'
        digest:
          type: string
          description: Digest is a hash of the dependencies in Chart.yaml.
        generated:
          type: string
          description: Generated is the date the lock file was last generated.
    release.Maintainer:
      type: object
      properties:
        email:
          type: string
          description: Email is an optional email address to contact the named maintainer
        name:
          type: string
          description: Name is a user name or organization name
        url:
          type: string
          description: URL is an optional URL to an address for the named maintainer
    release.Metadata:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations are additional mappings uninterpreted by Helm,
            made available for inspection by other applications.
        apiVersion:
          type: string
          description: The API Version of this chart. Required.
        appVersion:
          type: string
          description: The version of the application enclosed inside of this chart.
        condition:
          type: string
          description: The condition to check to enable chart
        dependencies:
          type: array
          description: Dependencies are a list of dependencies for a chart.
          items:
            $ref: '#/components/schemas/release.Dependency'
        deprecated:
          type: boolean
          description: Whether or not this chart is deprecated
        description:
          type: string
          description: A one-sentence description of the chart
        home:
          type: string
          description: "The URL to a relevant project page, git repo, or contact person"
        icon:
          type: string
          description: The URL to an icon file.
        keywords:
          type: array
          description: A list of string keywords
          items:
            type: string
        kubeVersion:
          type: string
          description: KubeVersion is a SemVer constraint specifying the version of
            Kubernetes required.
        maintainers:
          type: array
          description: A list of name and URL/email address combinations for the maintainer(s)
          items:
            $ref: '#/components/schemas/release.Maintainer'
        name:
          type: string
          description: The name of the chart. Required.
        sources:
          type: array
          description: Source is the URL to the source code of this chart
          items:
            type: string
        tags:
          type: string
          description: The tags to check to enable chart
        type:
          type: string
          description: "Specifies the chart type: application or library"
        version:
          type: string
          description: A SemVer 2 conformant version string of the chart. Required.
    release.Release:
      type: object
      properties:
        chart:
          $ref: '#/components/schemas/release.Chart'
        config:
          type: object
          additionalProperties:
            type: object
          description: |-
            Config is the set of extra Values added to the chart.
            These values override the default values inside of the chart.
        hooks:
          type: array
          description: Hooks are all of the hooks declared for this release.
          items:
            $ref: '#/components/schemas/release.Hook'
        manifest:
          type: string
          description: Manifest is the string representation of the rendered template.
        name:
          type: string
          description: Name is the name of the release
        namespace:
          type: string
          description: Namespace is the kubernetes namespace of the release.
        version:
          type: integer
          description: Version is an int which represents the revision of the release.
    release.ReleaseElement:
      type: object
      properties:
        app_version:
          type: string
        chart:
          type: string
        name:
          type: string
        namespace:
          type: string
        revision:
          type: string
        status:
          type: string
        updated:
          type: string
    resource.Quantity:
      type: object
      properties:
        Format:
          type: string
    resourcecontrols.resourceControlCreatePayload:
      required:
      - resourceID
      - type
      type: object
      properties:
        administratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        resourceID:
          type: string
          example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        subResourceIDs:
          type: array
          description: List of Docker resources that will inherit this access control
          example:
          - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
          items:
            type: string
        teams:
          type: array
          description: List of team identifiers with access to the associated resource
          example:
          - 56
          - 7
          items:
            type: integer
        type:
          type: integer
          description: |-
            Type of Resource. Valid values are: 1 - container, 2 - service
            3 - volume, 4 - network, 5 - secret, 6 - stack, 7 - config, 8 - custom template, 9 - azure-container-group
          example: 1
        users:
          type: array
          description: List of user identifiers with access to the associated resource
          example:
          - 1
          - 4
          items:
            type: integer
    resourcecontrols.resourceControlUpdatePayload:
      type: object
      properties:
        administratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        teams:
          type: array
          description: List of team identifiers with access to the associated resource
          example:
          - 7
          items:
            type: integer
        users:
          type: array
          description: List of user identifiers with access to the associated resource
          example:
          - 4
          items:
            type: integer
    settings.publicSettingsResponse:
      type: object
      properties:
        AuthenticationMethod:
          type: integer
          description: "Active authentication method for the Portainer instance. Valid\
            \ values are: 1 for internal, 2 for LDAP, or 3 for oauth"
          example: 1
        EnableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
          example: true
        EnableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: true
        Features:
          type: object
          additionalProperties:
            type: boolean
          description: Supported feature flags
        GlobalDeploymentOptions:
          $ref: '#/components/schemas/portainer.GlobalDeploymentOptions'
        IsDockerDesktopExtension:
          type: boolean
          example: false
        LogoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        OAuthLoginURI:
          type: string
          description: The URL used for oauth login
          example: https://gitlab.com/oauth
        OAuthLogoutURI:
          type: string
          description: The URL used for oauth logout
          example: https://gitlab.com/oauth/logout
        RequiredPasswordLength:
          type: integer
          description: The minimum required length for a password of any user when
            using internal auth mode
          example: 1
        TeamSync:
          type: boolean
          description: Whether team sync is enabled
          example: true
        edge:
          type: object
          properties:
            CommandInterval:
              type: integer
              description: "The command list interval for edge agent - used in edge\
                \ async mode [seconds]"
              example: 60
            PingInterval:
              type: integer
              description: "The ping interval for edge agent - used in edge async\
                \ mode [seconds]"
              example: 60
            SnapshotInterval:
              type: integer
              description: "The snapshot interval for edge agent - used in edge async\
                \ mode [seconds]"
              example: 60
            checkinInterval:
              type: integer
              description: "The check in interval for edge agent (in seconds) - used\
                \ in non async mode [seconds]"
              example: 60
        isAMTEnabled:
          type: boolean
          description: Whether AMT is enabled
        kubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
          default: "0"
    settings.settingsUpdatePayload:
      type: object
      properties:
        EdgePortainerURL:
          type: string
          description: EdgePortainerURL is the URL that is exposed to edge agents
        authenticationMethod:
          type: integer
          description: "Active authentication method for the Portainer instance. Valid\
            \ values are: 1 for internal, 2 for LDAP, or 3 for oauth"
          example: 1
        blackListedLabels:
          type: array
          description: A list of label name & value that will be used to hide containers
            when querying containers
          items:
            $ref: '#/components/schemas/portainer.Pair'
        edgeAgentCheckinInterval:
          type: integer
          example: 5
        enableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
          example: true
        enableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: false
        enforceEdgeID:
          type: boolean
          description: EnforceEdgeID makes Portainer store the Edge ID instead of
            accepting anyone
          example: false
        globalDeploymentOptions:
          $ref: '#/components/schemas/portainer.GlobalDeploymentOptions'
        helmRepositoryURL:
          type: string
          description: Helm repository URL
          example: https://charts.bitnami.com/bitnami
        internalAuthSettings:
          $ref: '#/components/schemas/portainer.InternalAuthSettings'
        kubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
          default: "0"
        kubectlShellImage:
          type: string
          description: Kubectl Shell Image
          example: portainer/kubectl-shell:latest
        ldapsettings:
          $ref: '#/components/schemas/portainer.LDAPSettings'
        logoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        oauthSettings:
          $ref: '#/components/schemas/portainer.OAuthSettings'
        snapshotInterval:
          type: string
          description: The interval in which environment(endpoint) snapshots are created
          example: 5m
        templatesURL:
          type: string
          description: URL to the templates that will be displayed in the UI when
            navigating to App Templates
          example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        trustOnFirstConnect:
          type: boolean
          description: TrustOnFirstConnect makes Portainer accepting edge agent connection
            by default
          example: false
        userSessionTimeout:
          type: string
          description: The duration of a user session
          example: 5m
    ssl.sslUpdatePayload:
      type: object
      properties:
        cert:
          type: string
          description: SSL Certificates
        httpenabled:
          type: boolean
        key:
          type: string
    stacks.composeStackFromFileContentPayload:
      required:
      - name
      - stackFileContent
      type: object
      properties:
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    stacks.composeStackFromGitRepositoryPayload:
      required:
      - name
      - repositoryURL
      type: object
      properties:
        additionalFiles:
          type: array
          description: Applicable when deploying with multiple stack files
          example:
          - "[nz.compose.yml"
          - " uat.compose.yml]"
          items:
            type: string
        autoUpdate:
          $ref: '#/components/schemas/portainer.AutoUpdateSettings'
        composeFile:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.kubernetesGitDeploymentPayload:
      type: object
      properties:
        additionalFiles:
          type: array
          items:
            type: string
        autoUpdate:
          $ref: '#/components/schemas/portainer.AutoUpdateSettings'
        composeFormat:
          type: boolean
        manifestFile:
          type: string
        namespace:
          type: string
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryURL:
          type: string
        repositoryUsername:
          type: string
        stackName:
          type: string
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.kubernetesManifestURLDeploymentPayload:
      type: object
      properties:
        composeFormat:
          type: boolean
        manifestURL:
          type: string
        namespace:
          type: string
        stackName:
          type: string
    stacks.kubernetesStringDeploymentPayload:
      type: object
      properties:
        composeFormat:
          type: boolean
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        namespace:
          type: string
        stackFileContent:
          type: string
        stackName:
          type: string
    stacks.stackFileResponse:
      type: object
      properties:
        StackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    stacks.stackGitRedployPayload:
      type: object
      properties:
        env:
          type: array
          items:
            $ref: '#/components/schemas/portainer.Pair'
        prune:
          type: boolean
        pullImage:
          type: boolean
          description: Force a pulling to current image with the original tag though
            the image is already the latest
          example: false
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryUsername:
          type: string
        stackName:
          type: string
    stacks.stackGitUpdatePayload:
      type: object
      properties:
        autoUpdate:
          $ref: '#/components/schemas/portainer.AutoUpdateSettings'
        env:
          type: array
          items:
            $ref: '#/components/schemas/portainer.Pair'
        prune:
          type: boolean
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryUsername:
          type: string
        tlsskipVerify:
          type: boolean
    stacks.stackMigratePayload:
      required:
      - endpointID
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) identifier of the target environment(endpoint)
            where the stack will be relocated
          example: 2
        name:
          type: string
          description: If provided will rename the migrated stack
          example: new-stack
        swarmID:
          type: string
          description: "Swarm cluster identifier, must match the identifier of the\
            \ cluster where the stack will be relocated"
          example: jpofkc0i9uo9wtx1zesuk649w
    stacks.swarmStackFromFileContentPayload:
      required:
      - name
      - stackFileContent
      - swarmID
      type: object
      properties:
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
        swarmID:
          type: string
          description: Swarm cluster identifier
          example: jpofkc0i9uo9wtx1zesuk649w
    stacks.swarmStackFromGitRepositoryPayload:
      required:
      - name
      - repositoryURL
      - swarmID
      type: object
      properties:
        additionalFiles:
          type: array
          description: Applicable when deploying with multiple stack files
          example:
          - "[nz.compose.yml"
          - " uat.compose.yml]"
          items:
            type: string
        autoUpdate:
          $ref: '#/components/schemas/portainer.AutoUpdateSettings'
        composeFile:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        swarmID:
          type: string
          description: Swarm cluster identifier
          example: jpofkc0i9uo9wtx1zesuk649w
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.updateSwarmStackPayload:
      type: object
      properties:
        env:
          type: array
          description: A list of environment(endpoint) variables used during stack
            deployment
          items:
            $ref: '#/components/schemas/portainer.Pair'
        prune:
          type: boolean
          description: Prune services that are no longer referenced (only available
            for Swarm stacks)
          example: true
        pullImage:
          type: boolean
          description: Force a pulling to current image with the original tag though
            the image is already the latest
          example: false
        stackFileContent:
          type: string
          description: New content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    swarm.ServiceUpdateResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: Optional warning messages
          items:
            type: string
    system.nodesCountResponse:
      type: object
      properties:
        nodes:
          type: integer
    system.status:
      type: object
      properties:
        Version:
          type: string
          description: Portainer API version
          example: 2.0.0
        instanceID:
          type: string
          description: Server Instance ID
          example: 299ab403-70a8-4c05-92f7-bf7a994d50df
    system.systemInfoResponse:
      type: object
      properties:
        agents:
          type: integer
        edgeAgents:
          type: integer
        platform:
          type: string
    system.versionResponse:
      type: object
      properties:
        LatestVersion:
          type: string
          description: The latest version available
          example: 2.0.0
        ServerEdition:
          type: string
          example: CE/EE
        UpdateAvailable:
          type: boolean
          description: Whether portainer has an update available
          example: false
        VersionSupport:
          type: string
          example: STS/LTS
        build:
          $ref: '#/components/schemas/build.BuildInfo'
        databaseVersion:
          type: string
        dependencies:
          $ref: '#/components/schemas/build.DependenciesInfo'
        runtime:
          $ref: '#/components/schemas/build.RuntimeInfo'
        serverVersion:
          type: string
    tags.tagCreatePayload:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: org/acme
    teammemberships.teamMembershipCreatePayload:
      required:
      - role
      - teamID
      - userID
      type: object
      properties:
        role:
          type: integer
          description: Role for the user inside the team (1 for leader and 2 for regular
            member)
          example: 1
        teamID:
          type: integer
          description: Team identifier
          example: 1
        userID:
          type: integer
          description: User identifier
          example: 1
    teammemberships.teamMembershipUpdatePayload:
      required:
      - role
      - teamID
      - userID
      type: object
      properties:
        role:
          type: integer
          description: Role for the user inside the team (1 for leader and 2 for regular
            member)
          example: 1
        teamID:
          type: integer
          description: Team identifier
          example: 1
        userID:
          type: integer
          description: User identifier
          example: 1
    teams.teamCreatePayload:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name
          example: developers
        teamLeaders:
          type: array
          description: TeamLeaders
          example:
          - 3
          - 5
          items:
            type: integer
            description: User identifier
            example: 1
    teams.teamUpdatePayload:
      type: object
      properties:
        name:
          type: string
          description: Name
          example: developers
    templates.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
          description: The requested file content
          example: version:2
    templates.listResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/portainer.Template'
        version:
          type: string
    users.accessTokenResponse:
      type: object
      properties:
        apiKey:
          $ref: '#/components/schemas/portainer.APIKey'
        rawAPIKey:
          type: string
    users.addHelmRepoUrlPayload:
      type: object
      properties:
        url:
          type: string
    users.adminInitPayload:
      required:
      - password
      - username
      type: object
      properties:
        password:
          type: string
          description: Password for the admin user
          example: admin-password
        username:
          type: string
          description: Username for the admin user
          example: admin
    users.helmUserRepositoryResponse:
      type: object
      properties:
        GlobalRepository:
          type: string
        UserRepositories:
          type: array
          items:
            $ref: '#/components/schemas/portainer.HelmUserRepository'
    users.themePayload:
      type: object
      properties:
        color:
          type: string
          description: Color represents the color theme of the UI
          example: dark
          enum:
          - dark
          - light
          - highcontrast
          - auto
    users.userAccessTokenCreatePayload:
      required:
      - description
      - password
      type: object
      properties:
        description:
          type: string
          example: github-api-key
        password:
          type: string
          example: password
    users.userCreatePayload:
      required:
      - password
      - role
      - username
      type: object
      properties:
        password:
          type: string
          example: cg9Wgky3
        role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 2
        username:
          type: string
          example: bob
    users.userUpdatePasswordPayload:
      required:
      - newPassword
      - password
      type: object
      properties:
        newPassword:
          type: string
          description: New Password
          example: new_passwd
        password:
          type: string
          description: Current Password
          example: passwd
    users.userUpdatePayload:
      required:
      - newPassword
      - password
      - role
      - useCache
      - username
      type: object
      properties:
        newPassword:
          type: string
          example: asfj2emv
        password:
          type: string
          example: cg9Wgky3
        role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 2
        theme:
          $ref: '#/components/schemas/users.themePayload'
        useCache:
          type: boolean
          example: true
        username:
          type: string
          example: bob
    v1.AppArmorProfile:
      type: object
      properties:
        localhostProfile:
          type: string
          description: |-
            localhostProfile indicates a profile loaded on the node that should be used.
            The profile must be preconfigured on the node to work.
            Must match the loaded name of the profile.
            Must be set if and only if type is "Localhost".
            +optional
        type:
          type: string
          description: |-
            type indicates which kind of AppArmor profile will be applied.
            Valid options are:
              Localhost - a profile pre-loaded on the node.
              RuntimeDefault - the container runtime's default profile.
              Unconfined - no AppArmor enforcement.
            +unionDiscriminator
    v1.CSIPersistentVolumeSource:
      type: object
      properties:
        controllerExpandSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        controllerPublishSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        driver:
          type: string
          description: |-
            driver is the name of the driver to use for this volume.
            Required.
        fsType:
          type: string
          description: |-
            fsType to mount. Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs".
            +optional
        nodeExpandSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        nodePublishSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        nodeStageSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        readOnly:
          type: boolean
          description: |-
            readOnly value to pass to ControllerPublishVolumeRequest.
            Defaults to false (read/write).
            +optional
        volumeAttributes:
          type: object
          additionalProperties:
            type: string
          description: |-
            volumeAttributes of the volume to publish.
            +optional
        volumeHandle:
          type: string
          description: |-
            volumeHandle is the unique volume name returned by the CSI volume
            plugin’s CreateVolume to refer to the volume on all subsequent calls.
            Required.
    v1.Capabilities:
      type: object
      properties:
        add:
          type: array
          description: |-
            Added capabilities
            +optional
            +listType=atomic
          items:
            type: string
        drop:
          type: array
          description: |-
            Removed capabilities
            +optional
            +listType=atomic
          items:
            type: string
    v1.ClientIPConfig:
      type: object
      properties:
        timeoutSeconds:
          type: integer
          description: |-
            timeoutSeconds specifies the seconds of ClientIP type session sticky time.
            The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
            Default value is 10800(for 3 hours).
            +optional
    v1.Condition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          description: |-
            lastTransitionTime is the last time the condition transitioned from one status to another.
            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Type=string
            +kubebuilder:validation:Format=date-time
        message:
          type: string
          description: |-
            message is a human readable message indicating details about the transition.
            This may be an empty string.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:MaxLength=32768
        observedGeneration:
          type: integer
          description: |-
            observedGeneration represents the .metadata.generation that the condition was set based upon.
            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
            with respect to the current state of the instance.
            +optional
            +kubebuilder:validation:Minimum=0
        reason:
          type: string
          description: |-
            reason contains a programmatic identifier indicating the reason for the condition's last transition.
            Producers of specific condition types may define expected values and meanings for this field,
            and whether the values are considered a guaranteed API.
            The value should be a CamelCase string.
            This field may not be empty.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:MaxLength=1024
            +kubebuilder:validation:MinLength=1
            +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
        status:
          type: string
          description: |-
            status of the condition, one of True, False, Unknown.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Enum=True;False;Unknown
        type:
          type: string
          description: |-
            type of condition in CamelCase or in foo.example.com/CamelCase.
            ---
            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
            useful (see .node.status.conditions), the ability to deconflict is important.
            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
            +kubebuilder:validation:MaxLength=316
    v1.ConfigMapEnvSource:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the referent.
            This field is effectively required, but due to backwards compatibility is
            allowed to be empty. Instances of this type with an empty value here are
            almost certainly wrong.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
            +default=""
            +kubebuilder:default=""
            TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap must be defined
            +optional
    v1.ConfigMapKeySelector:
      type: object
      properties:
        key:
          type: string
          description: The key to select.
        name:
          type: string
          description: |-
            Name of the referent.
            This field is effectively required, but due to backwards compatibility is
            allowed to be empty. Instances of this type with an empty value here are
            almost certainly wrong.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
            +default=""
            +kubebuilder:default=""
            TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap or its key must be defined
            +optional
    v1.Container:
      type: object
      properties:
        args:
          type: array
          description: |-
            Arguments to the entrypoint.
            The container image's CMD is used if this is not provided.
            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
            of whether the variable exists or not. Cannot be updated.
            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
            +optional
            +listType=atomic
          items:
            type: string
        command:
          type: array
          description: |-
            Entrypoint array. Not executed within a shell.
            The container image's ENTRYPOINT is used if this is not provided.
            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
            of whether the variable exists or not. Cannot be updated.
            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
            +optional
            +listType=atomic
          items:
            type: string
        env:
          type: array
          description: |-
            List of environment variables to set in the container.
            Cannot be updated.
            +optional
            +patchMergeKey=name
            +patchStrategy=merge
            +listType=map
            +listMapKey=name
          items:
            $ref: '#/components/schemas/v1.EnvVar'
        envFrom:
          type: array
          description: |-
            List of sources to populate environment variables in the container.
            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
            will be reported as an event when the container is starting. When a key exists in multiple
            sources, the value associated with the last source will take precedence.
            Values defined by an Env with a duplicate key will take precedence.
            Cannot be updated.
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.EnvFromSource'
        image:
          type: string
          description: |-
            Container image name.
            More info: https://kubernetes.io/docs/concepts/containers/images
            This field is optional to allow higher level config management to default or override
            container images in workload controllers like Deployments and StatefulSets.
            +optional
        imagePullPolicy:
          type: string
          description: |-
            Image pull policy.
            One of Always, Never, IfNotPresent.
            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
            +optional
        lifecycle:
          $ref: '#/components/schemas/v1.Lifecycle'
        livenessProbe:
          $ref: '#/components/schemas/v1.Probe'
        name:
          type: string
          description: |-
            Name of the container specified as a DNS_LABEL.
            Each container in a pod must have a unique name (DNS_LABEL).
            Cannot be updated.
        ports:
          type: array
          description: |-
            List of ports to expose from the container. Not specifying a port here
            DOES NOT prevent that port from being exposed. Any port which is
            listening on the default "0.0.0.0" address inside a container will be
            accessible from the network.
            Modifying this array with strategic merge patch may corrupt the data.
            For more information See https://github.com/kubernetes/kubernetes/issues/108255.
            Cannot be updated.
            +optional
            +patchMergeKey=containerPort
            +patchStrategy=merge
            +listType=map
            +listMapKey=containerPort
            +listMapKey=protocol
          items:
            $ref: '#/components/schemas/v1.ContainerPort'
        readinessProbe:
          $ref: '#/components/schemas/v1.Probe'
        resizePolicy:
          type: array
          description: |-
            Resources resize policy for the container.
            +featureGate=InPlacePodVerticalScaling
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ContainerResizePolicy'
        resources:
          $ref: '#/components/schemas/v1.ResourceRequirements'
        restartPolicy:
          type: string
          description: |-
            RestartPolicy defines the restart behavior of individual containers in a pod.
            This field may only be set for init containers, and the only allowed value is "Always".
            For non-init containers or when this field is not specified,
            the restart behavior is defined by the Pod's restart policy and the container type.
            Setting the RestartPolicy as "Always" for the init container will have the following effect:
            this init container will be continually restarted on
            exit until all regular containers have terminated. Once all regular
            containers have completed, all init containers with restartPolicy "Always"
            will be shut down. This lifecycle differs from normal init containers and
            is often referred to as a "sidecar" container. Although this init
            container still starts in the init container sequence, it does not wait
            for the container to complete before proceeding to the next init
            container. Instead, the next init container starts immediately after this
            init container is started, or after any startupProbe has successfully
            completed.
            +featureGate=SidecarContainers
            +optional
        securityContext:
          $ref: '#/components/schemas/v1.SecurityContext'
        startupProbe:
          $ref: '#/components/schemas/v1.Probe'
        stdin:
          type: boolean
          description: |-
            Whether this container should allocate a buffer for stdin in the container runtime. If this
            is not set, reads from stdin in the container will always result in EOF.
            Default is false.
            +optional
        stdinOnce:
          type: boolean
          description: |-
            Whether the container runtime should close the stdin channel after it has been opened by
            a single attach. When stdin is true the stdin stream will remain open across multiple attach
            sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
            first client attaches to stdin, and then remains open and accepts data until the client disconnects,
            at which time stdin is closed and remains closed until the container is restarted. If this
            flag is false, a container processes that reads from stdin will never receive an EOF.
            Default is false
            +optional
        terminationMessagePath:
          type: string
          description: |-
            Optional: Path at which the file to which the container's termination message
            will be written is mounted into the container's filesystem.
            Message written is intended to be brief final status, such as an assertion failure message.
            Will be truncated by the node if greater than 4096 bytes. The total message length across
            all containers will be limited to 12kb.
            Defaults to /dev/termination-log.
            Cannot be updated.
            +optional
        terminationMessagePolicy:
          type: string
          description: |-
            Indicate how the termination message should be populated. File will use the contents of
            terminationMessagePath to populate the container status message on both success and failure.
            FallbackToLogsOnError will use the last chunk of container log output if the termination
            message file is empty and the container exited with an error.
            The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
            Defaults to File.
            Cannot be updated.
            +optional
        tty:
          type: boolean
          description: |-
            Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
            Default is false.
            +optional
        volumeDevices:
          type: array
          description: |-
            volumeDevices is the list of block devices to be used by the container.
            +patchMergeKey=devicePath
            +patchStrategy=merge
            +listType=map
            +listMapKey=devicePath
            +optional
          items:
            $ref: '#/components/schemas/v1.VolumeDevice'
        volumeMounts:
          type: array
          description: |-
            Pod volumes to mount into the container's filesystem.
            Cannot be updated.
            +optional
            +patchMergeKey=mountPath
            +patchStrategy=merge
            +listType=map
            +listMapKey=mountPath
          items:
            $ref: '#/components/schemas/v1.VolumeMount'
        workingDir:
          type: string
          description: |-
            Container's working directory.
            If not specified, the container runtime's default will be used, which
            might be configured in the container image.
            Cannot be updated.
            +optional
    v1.ContainerPort:
      type: object
      properties:
        containerPort:
          type: integer
          description: |-
            Number of port to expose on the pod's IP address.
            This must be a valid port number, 0 < x < 65536.
        hostIP:
          type: string
          description: |-
            What host IP to bind the external port to.
            +optional
        hostPort:
          type: integer
          description: |-
            Number of port to expose on the host.
            If specified, this must be a valid port number, 0 < x < 65536.
            If HostNetwork is specified, this must match ContainerPort.
            Most containers do not need this.
            +optional
        name:
          type: string
          description: |-
            If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
            named port in a pod must have a unique name. Name for the port that can be
            referred to by services.
            +optional
        protocol:
          type: string
          description: |-
            Protocol for port. Must be UDP, TCP, or SCTP.
            Defaults to "TCP".
            +optional
            +default="TCP"
    v1.ContainerResizePolicy:
      type: object
      properties:
        resourceName:
          type: string
          description: |-
            Name of the resource to which this resource resize policy applies.
            Supported values: cpu, memory.
        restartPolicy:
          type: string
          description: |-
            Restart policy to apply when specified resource is resized.
            If not specified, it defaults to NotRequired.
    v1.Duration:
      type: object
      properties:
        time.Duration:
          type: integer
    v1.EnvFromSource:
      type: object
      properties:
        configMapRef:
          $ref: '#/components/schemas/v1.ConfigMapEnvSource'
        prefix:
          type: string
          description: |-
            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
            +optional
        secretRef:
          $ref: '#/components/schemas/v1.SecretEnvSource'
    v1.EnvVar:
      type: object
      properties:
        name:
          type: string
          description: Name of the environment variable. Must be a C_IDENTIFIER.
        value:
          type: string
          description: |-
            Variable references $(VAR_NAME) are expanded
            using the previously defined environment variables in the container and
            any service environment variables. If a variable cannot be resolved,
            the reference in the input string will be unchanged. Double $$ are reduced
            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
            Escaped references will never be expanded, regardless of whether the variable
            exists or not.
            Defaults to "".
            +optional
        valueFrom:
          $ref: '#/components/schemas/v1.EnvVarSource'
    v1.EnvVarSource:
      type: object
      properties:
        configMapKeyRef:
          $ref: '#/components/schemas/v1.ConfigMapKeySelector'
        fieldRef:
          $ref: '#/components/schemas/v1.ObjectFieldSelector'
        resourceFieldRef:
          $ref: '#/components/schemas/v1.ResourceFieldSelector'
        secretKeyRef:
          $ref: '#/components/schemas/v1.SecretKeySelector'
    v1.ExecAction:
      type: object
      properties:
        command:
          type: array
          description: |-
            Command is the command line to execute inside the container, the working directory for the
            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
            a shell, you need to explicitly call out to that shell.
            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
            +optional
            +listType=atomic
          items:
            type: string
    v1.FieldsV1:
      type: object
    v1.GRPCAction:
      type: object
      properties:
        port:
          type: integer
          description: Port number of the gRPC service. Number must be in the range
            1 to 65535.
        service:
          type: string
          description: |-
            Service is the name of the service to place in the gRPC HealthCheckRequest
            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

            If this is not specified, the default behavior is defined by gRPC.
            +optional
            +default=""
    v1.HTTPGetAction:
      type: object
      properties:
        host:
          type: string
          description: |-
            Host name to connect to, defaults to the pod IP. You probably want to set
            "Host" in httpHeaders instead.
            +optional
        httpHeaders:
          type: array
          description: |-
            Custom headers to set in the request. HTTP allows repeated headers.
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.HTTPHeader'
        path:
          type: string
          description: |-
            Path to access on the HTTP server.
            +optional
        port:
          $ref: '#/components/schemas/intstr.IntOrString'
        scheme:
          type: string
          description: |-
            Scheme to use for connecting to the host.
            Defaults to HTTP.
            +optional
    v1.HTTPHeader:
      type: object
      properties:
        name:
          type: string
          description: |-
            The header field name.
            This will be canonicalized upon output, so case-variant names will be understood as the same header.
        value:
          type: string
          description: The header field value
    v1.LabelSelector:
      type: object
      properties:
        matchExpressions:
          type: array
          description: |-
            matchExpressions is a list of label selector requirements. The requirements are ANDed.
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.LabelSelectorRequirement'
        matchLabels:
          type: object
          additionalProperties:
            type: string
          description: |-
            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
            map is equivalent to an element of matchExpressions, whose key field is "key", the
            operator is "In", and the values array contains only "value". The requirements are ANDed.
            +optional
    v1.LabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
          description: key is the label key that the selector applies to.
        operator:
          type: string
          description: |-
            operator represents a key's relationship to a set of values.
            Valid operators are In, NotIn, Exists and DoesNotExist.
        values:
          type: array
          description: |-
            values is an array of string values. If the operator is In or NotIn,
            the values array must be non-empty. If the operator is Exists or DoesNotExist,
            the values array must be empty. This array is replaced during a strategic
            merge patch.
            +optional
            +listType=atomic
          items:
            type: string
    v1.Lifecycle:
      type: object
      properties:
        postStart:
          $ref: '#/components/schemas/v1.LifecycleHandler'
        preStop:
          $ref: '#/components/schemas/v1.LifecycleHandler'
    v1.LifecycleHandler:
      type: object
      properties:
        exec:
          $ref: '#/components/schemas/v1.ExecAction'
        httpGet:
          $ref: '#/components/schemas/v1.HTTPGetAction'
        sleep:
          $ref: '#/components/schemas/v1.SleepAction'
        tcpSocket:
          $ref: '#/components/schemas/v1.TCPSocketAction'
    v1.LoadBalancerIngress:
      type: object
      properties:
        hostname:
          type: string
          description: |-
            Hostname is set for load-balancer ingress points that are DNS based
            (typically AWS load-balancers)
            +optional
        ip:
          type: string
          description: |-
            IP is set for load-balancer ingress points that are IP based
            (typically GCE or OpenStack load-balancers)
            +optional
        ipMode:
          type: string
          description: |-
            IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
            Setting this to "VIP" indicates that traffic is delivered to the node with
            the destination set to the load-balancer's IP and port.
            Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
            the destination set to the node's IP and node port or the pod's IP and port.
            Service implementations may use this information to adjust traffic routing.
            +optional
        ports:
          type: array
          description: |-
            Ports is a list of records of service ports
            If used, every port defined in the service should have an entry in it
            +listType=atomic
            +optional
          items:
            $ref: '#/components/schemas/v1.PortStatus'
    v1.LoadBalancerStatus:
      type: object
      properties:
        ingress:
          type: array
          description: |-
            Ingress is a list containing ingress points for the load-balancer.
            Traffic intended for the service should be sent to these ingress points.
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.LoadBalancerIngress'
    v1.ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the version of this resource that this field set
            applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field
            set because it cannot be automatically converted.
        fieldsType:
          type: string
          description: |-
            FieldsType is the discriminator for the different fields format and version.
            There is currently only one possible value: "FieldsV1"
        fieldsV1:
          $ref: '#/components/schemas/v1.FieldsV1'
        manager:
          type: string
          description: Manager is an identifier of the workflow managing these fields.
        operation:
          type: string
          description: |-
            Operation is the type of operation which lead to this ManagedFieldsEntry being created.
            The only valid values for this field are 'Apply' and 'Update'.
        subresource:
          type: string
          description: |-
            Subresource is the name of the subresource used to update that object, or
            empty string if the object was updated through the main resource. The
            value of this field is used to distinguish between managers, even if they
            share the same name. For example, a status update will be distinct from a
            regular update using the same manager name.
            Note that the APIVersion field is not related to the Subresource field and
            it always corresponds to the version of the main resource.
        time:
          type: string
          description: |-
            Time is the timestamp of when the ManagedFields entry was added. The
            timestamp will also be updated if a field is added, the manager
            changes any of the owned fields value or removes a field. The
            timestamp does not update when a field is removed from the entry
            because another manager took it over.
            +optional
    v1.NamespaceCondition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          description: |-
            Last time the condition transitioned from one status to another.
            +optional
        message:
          type: string
          description: |-
            Human-readable message indicating details about last transition.
            +optional
        reason:
          type: string
          description: |-
            Unique, one-word, CamelCase reason for the condition's last transition.
            +optional
        status:
          type: string
          description: "Status of the condition, one of True, False, Unknown."
        type:
          type: string
          description: Type of namespace controller condition.
    v1.NamespaceStatus:
      type: object
      properties:
        conditions:
          type: array
          description: |-
            Represents the latest available observations of a namespace's current state.
            +optional
            +patchMergeKey=type
            +patchStrategy=merge
            +listType=map
            +listMapKey=type
          items:
            $ref: '#/components/schemas/v1.NamespaceCondition'
        phase:
          type: string
          description: |-
            Phase is the current lifecycle phase of the namespace.
            More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
            +optional
    v1.ObjectFieldSelector:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            Version of the schema the FieldPath is written in terms of, defaults to "v1".
            +optional
        fieldPath:
          type: string
          description: Path of the field to select in the specified API version.
    v1.ObjectReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            API version of the referent.
            +optional
        fieldPath:
          type: string
          description: |-
            If referring to a piece of an object instead of an entire object, this string
            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
            For example, if the object reference is to a container within a pod, this would take on a value like:
            "spec.containers{name}" (where "name" refers to the name of the container that triggered
            the event) or if no container name is specified "spec.containers[2]" (container with
            index 2 in this pod). This syntax is chosen only to have some well-defined way of
            referencing a part of an object.
            TODO: this design is not final and this field is subject to change in the future.
            +optional
        kind:
          type: string
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            +optional
        resourceVersion:
          type: string
          description: |-
            Specific resourceVersion to which this reference is made, if any.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
            +optional
    v1.OwnerReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the referent.
        blockOwnerDeletion:
          type: boolean
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
            for how the garbage collector interacts with this field and enforces the foreground deletion.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
        controller:
          type: boolean
          description: |-
            If true, this reference points to the managing controller.
            +optional
        kind:
          type: string
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    v1.PortStatus:
      type: object
      properties:
        error:
          type: string
          description: |-
            Error is to record the problem with the service port
            The format of the error shall comply with the following rules:
            - built-in error values shall be specified in this file and those shall use
              CamelCase names
            - cloud provider specific error values must have names that comply with the
              format foo.example.com/CamelCase.
            ---
            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
            +optional
            +kubebuilder:validation:Required
            +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
            +kubebuilder:validation:MaxLength=316
        port:
          type: integer
          description: Port is the port number of the service port of which status
            is recorded here
        protocol:
          type: string
          description: |-
            Protocol is the protocol of the service port of which status is recorded here
            The supported values are: "TCP", "UDP", "SCTP"
    v1.Probe:
      type: object
      properties:
        exec:
          $ref: '#/components/schemas/v1.ExecAction'
        failureThreshold:
          type: integer
          description: |-
            Minimum consecutive failures for the probe to be considered failed after having succeeded.
            Defaults to 3. Minimum value is 1.
            +optional
        grpc:
          $ref: '#/components/schemas/v1.GRPCAction'
        httpGet:
          $ref: '#/components/schemas/v1.HTTPGetAction'
        initialDelaySeconds:
          type: integer
          description: |-
            Number of seconds after the container has started before liveness probes are initiated.
            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            +optional
        periodSeconds:
          type: integer
          description: |-
            How often (in seconds) to perform the probe.
            Default to 10 seconds. Minimum value is 1.
            +optional
        successThreshold:
          type: integer
          description: |-
            Minimum consecutive successes for the probe to be considered successful after having failed.
            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
            +optional
        tcpSocket:
          $ref: '#/components/schemas/v1.TCPSocketAction'
        terminationGracePeriodSeconds:
          type: integer
          description: |-
            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
            The grace period is the duration in seconds after the processes running in the pod are sent
            a termination signal and the time when the processes are forcibly halted with a kill signal.
            Set this value longer than the expected cleanup time for your process.
            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
            value overrides the value provided by the pod spec.
            Value must be non-negative integer. The value zero indicates stop immediately via
            the kill signal (no opportunity to shut down).
            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
            +optional
        timeoutSeconds:
          type: integer
          description: |-
            Number of seconds after which the probe times out.
            Defaults to 1 second. Minimum value is 1.
            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
            +optional
    v1.ResourceClaim:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name must match the name of one entry in pod.spec.resourceClaims of
            the Pod where this field is used. It makes that resource available
            inside a container.
        request:
          type: string
          description: |-
            Request is the name chosen for a request in the referenced claim.
            If empty, everything from the claim is made available, otherwise
            only the result of this request.

            +optional
    v1.ResourceFieldSelector:
      type: object
      properties:
        containerName:
          type: string
          description: |-
            Container name: required for volumes, optional for env vars
            +optional
        divisor:
          $ref: '#/components/schemas/resource.Quantity'
        resource:
          type: string
          description: "Required: resource to select"
    v1.ResourceList:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/resource.Quantity'
    v1.ResourceQuota:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        spec:
          $ref: '#/components/schemas/v1.ResourceQuotaSpec'
        status:
          $ref: '#/components/schemas/v1.ResourceQuotaStatus'
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
    v1.ResourceQuotaSpec:
      type: object
      properties:
        hard:
          $ref: '#/components/schemas/v1.ResourceList'
        scopeSelector:
          $ref: '#/components/schemas/v1.ScopeSelector'
        scopes:
          type: array
          description: |-
            A collection of filters that must match each object tracked by a quota.
            If not specified, the quota matches all objects.
            +optional
            +listType=atomic
          items:
            type: string
            description: The name of the scope that the selector applies to.
    v1.ResourceQuotaStatus:
      type: object
      properties:
        hard:
          $ref: '#/components/schemas/v1.ResourceList'
        used:
          $ref: '#/components/schemas/v1.ResourceList'
    v1.ResourceRequirements:
      type: object
      properties:
        claims:
          type: array
          description: |-
            Claims lists the names of resources, defined in spec.resourceClaims,
            that are used by this container.

            This is an alpha field and requires enabling the
            DynamicResourceAllocation feature gate.

            This field is immutable. It can only be set for containers.

            +listType=map
            +listMapKey=name
            +featureGate=DynamicResourceAllocation
            +optional
          items:
            $ref: '#/components/schemas/v1.ResourceClaim'
        limits:
          $ref: '#/components/schemas/v1.ResourceList'
        requests:
          $ref: '#/components/schemas/v1.ResourceList'
    v1.RoleRef:
      type: object
      properties:
        apiGroup:
          type: string
          description: APIGroup is the group for the resource being referenced
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
    v1.SELinuxOptions:
      type: object
      properties:
        level:
          type: string
          description: |-
            Level is SELinux level label that applies to the container.
            +optional
        role:
          type: string
          description: |-
            Role is a SELinux role label that applies to the container.
            +optional
        type:
          type: string
          description: |-
            Type is a SELinux type label that applies to the container.
            +optional
        user:
          type: string
          description: |-
            User is a SELinux user label that applies to the container.
            +optional
    v1.ScopeSelector:
      type: object
      properties:
        matchExpressions:
          type: array
          description: |-
            A list of scope selector requirements by scope of the resources.
            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ScopedResourceSelectorRequirement'
    v1.ScopedResourceSelectorRequirement:
      type: object
      properties:
        operator:
          type: string
          description: |-
            Represents a scope's relationship to a set of values.
            Valid operators are In, NotIn, Exists, DoesNotExist.
        scopeName:
          type: string
          description: The name of the scope that the selector applies to.
        values:
          type: array
          description: |-
            An array of string values. If the operator is In or NotIn,
            the values array must be non-empty. If the operator is Exists or DoesNotExist,
            the values array must be empty.
            This array is replaced during a strategic merge patch.
            +optional
            +listType=atomic
          items:
            type: string
    v1.SeccompProfile:
      type: object
      properties:
        localhostProfile:
          type: string
          description: |-
            localhostProfile indicates a profile defined in a file on the node should be used.
            The profile must be preconfigured on the node to work.
            Must be a descending path, relative to the kubelet's configured seccomp profile location.
            Must be set if type is "Localhost". Must NOT be set for any other type.
            +optional
        type:
          type: string
          description: |-
            type indicates which kind of seccomp profile will be applied.
            Valid options are:

            Localhost - a profile defined in a file on the node should be used.
            RuntimeDefault - the container runtime default profile should be used.
            Unconfined - no profile should be applied.
            +unionDiscriminator
    v1.SecretEnvSource:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the referent.
            This field is effectively required, but due to backwards compatibility is
            allowed to be empty. Instances of this type with an empty value here are
            almost certainly wrong.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
            +default=""
            +kubebuilder:default=""
            TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
        optional:
          type: boolean
          description: |-
            Specify whether the Secret must be defined
            +optional
    v1.SecretKeySelector:
      type: object
      properties:
        key:
          type: string
          description: The key of the secret to select from.  Must be a valid secret
            key.
        name:
          type: string
          description: |-
            Name of the referent.
            This field is effectively required, but due to backwards compatibility is
            allowed to be empty. Instances of this type with an empty value here are
            almost certainly wrong.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
            +default=""
            +kubebuilder:default=""
            TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
        optional:
          type: boolean
          description: |-
            Specify whether the Secret or its key must be defined
            +optional
    v1.SecretReference:
      type: object
      properties:
        name:
          type: string
          description: |-
            name is unique within a namespace to reference a secret resource.
            +optional
        namespace:
          type: string
          description: |-
            namespace defines the space within which the secret name must be unique.
            +optional
    v1.SecurityContext:
      type: object
      properties:
        allowPrivilegeEscalation:
          type: boolean
          description: |-
            AllowPrivilegeEscalation controls whether a process can gain more
            privileges than its parent process. This bool directly controls if
            the no_new_privs flag will be set on the container process.
            AllowPrivilegeEscalation is true always when the container is:
            1) run as Privileged
            2) has CAP_SYS_ADMIN
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        appArmorProfile:
          $ref: '#/components/schemas/v1.AppArmorProfile'
        capabilities:
          $ref: '#/components/schemas/v1.Capabilities'
        privileged:
          type: boolean
          description: |-
            Run container in privileged mode.
            Processes in privileged containers are essentially equivalent to root on the host.
            Defaults to false.
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        procMount:
          type: string
          description: |-
            procMount denotes the type of proc mount to use for the containers.
            The default value is Default which uses the container runtime defaults for
            readonly paths and masked paths.
            This requires the ProcMountType feature flag to be enabled.
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        readOnlyRootFilesystem:
          type: boolean
          description: |-
            Whether this container has a read-only root filesystem.
            Default is false.
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        runAsGroup:
          type: integer
          description: |-
            The GID to run the entrypoint of the container process.
            Uses runtime default if unset.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        runAsNonRoot:
          type: boolean
          description: |-
            Indicates that the container must run as a non-root user.
            If true, the Kubelet will validate the image at runtime to ensure that it
            does not run as UID 0 (root) and fail to start the container if it does.
            If unset or false, no such validation will be performed.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
        runAsUser:
          type: integer
          description: |-
            The UID to run the entrypoint of the container process.
            Defaults to user specified in image metadata if unspecified.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            Note that this field cannot be set when spec.os.name is windows.
            +optional
        seLinuxOptions:
          $ref: '#/components/schemas/v1.SELinuxOptions'
        seccompProfile:
          $ref: '#/components/schemas/v1.SeccompProfile'
        windowsOptions:
          $ref: '#/components/schemas/v1.WindowsSecurityContextOptions'
    v1.Service:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        spec:
          $ref: '#/components/schemas/v1.ServiceSpec'
        status:
          $ref: '#/components/schemas/v1.ServiceStatus'
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
    v1.ServicePort:
      type: object
      properties:
        appProtocol:
          type: string
          description: |-
            The application protocol for this port.
            This is used as a hint for implementations to offer richer behavior for protocols that they understand.
            This field follows standard Kubernetes label syntax.
            Valid values are either:

            * Un-prefixed protocol names - reserved for IANA standard service names (as per
            RFC-6335 and https://www.iana.org/assignments/service-names).

            * Kubernetes-defined prefixed names:
              * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
              * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
              * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455

            * Other protocols should use implementation-defined prefixed names such as
            mycompany.com/my-custom-protocol.
            +optional
        name:
          type: string
          description: |-
            The name of this port within the service. This must be a DNS_LABEL.
            All ports within a ServiceSpec must have unique names. When considering
            the endpoints for a Service, this must match the 'name' field in the
            EndpointPort.
            Optional if only one ServicePort is defined on this service.
            +optional
        nodePort:
          type: integer
          description: |-
            The port on each node on which this service is exposed when type is
            NodePort or LoadBalancer.  Usually assigned by the system. If a value is
            specified, in-range, and not in use it will be used, otherwise the
            operation will fail.  If not specified, a port will be allocated if this
            Service requires one.  If this field is specified when creating a
            Service which does not need it, creation will fail. This field will be
            wiped when updating a Service to no longer need it (e.g. changing type
            from NodePort to ClusterIP).
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
            +optional
        port:
          type: integer
          description: The port that will be exposed by this service.
        protocol:
          type: string
          description: |-
            The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
            Default is TCP.
            +default="TCP"
            +optional
        targetPort:
          $ref: '#/components/schemas/intstr.IntOrString'
    v1.ServiceSpec:
      type: object
      properties:
        allocateLoadBalancerNodePorts:
          type: boolean
          description: |-
            allocateLoadBalancerNodePorts defines if NodePorts will be automatically
            allocated for services with type LoadBalancer.  Default is "true". It
            may be set to "false" if the cluster load-balancer does not rely on
            NodePorts.  If the caller requests specific NodePorts (by specifying a
            value), those requests will be respected, regardless of this field.
            This field may only be set for services with type LoadBalancer and will
            be cleared if the type is changed to any other type.
            +optional
        clusterIP:
          type: string
          description: |-
            clusterIP is the IP address of the service and is usually assigned
            randomly. If an address is specified manually, is in-range (as per
            system configuration), and is not in use, it will be allocated to the
            service; otherwise creation of the service will fail. This field may not
            be changed through updates unless the type field is also being changed
            to ExternalName (which requires this field to be blank) or the type
            field is being changed from ExternalName (in which case this field may
            optionally be specified, as describe above).  Valid values are "None",
            empty string (""), or a valid IP address. Setting this to "None" makes a
            "headless service" (no virtual IP), which is useful when direct endpoint
            connections are preferred and proxying is not required.  Only applies to
            types ClusterIP, NodePort, and LoadBalancer. If this field is specified
            when creating a Service of type ExternalName, creation will fail. This
            field will be wiped when updating a Service to type ExternalName.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +optional
        clusterIPs:
          type: array
          description: |-
            ClusterIPs is a list of IP addresses assigned to this service, and are
            usually assigned randomly.  If an address is specified manually, is
            in-range (as per system configuration), and is not in use, it will be
            allocated to the service; otherwise creation of the service will fail.
            This field may not be changed through updates unless the type field is
            also being changed to ExternalName (which requires this field to be
            empty) or the type field is being changed from ExternalName (in which
            case this field may optionally be specified, as describe above).  Valid
            values are "None", empty string (""), or a valid IP address.  Setting
            this to "None" makes a "headless service" (no virtual IP), which is
            useful when direct endpoint connections are preferred and proxying is
            not required.  Only applies to types ClusterIP, NodePort, and
            LoadBalancer. If this field is specified when creating a Service of type
            ExternalName, creation will fail. This field will be wiped when updating
            a Service to type ExternalName.  If this field is not specified, it will
            be initialized from the clusterIP field.  If this field is specified,
            clients must ensure that clusterIPs[0] and clusterIP have the same
            value.

            This field may hold a maximum of two entries (dual-stack IPs, in either order).
            These IPs must correspond to the values of the ipFamilies field. Both
            clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +listType=atomic
            +optional
          items:
            type: string
        externalIPs:
          type: array
          description: |-
            externalIPs is a list of IP addresses for which nodes in the cluster
            will also accept traffic for this service.  These IPs are not managed by
            Kubernetes.  The user is responsible for ensuring that traffic arrives
            at a node with this IP.  A common example is external load-balancers
            that are not part of the Kubernetes system.
            +optional
            +listType=atomic
          items:
            type: string
        externalName:
          type: string
          description: |-
            externalName is the external reference that discovery mechanisms will
            return as an alias for this service (e.g. a DNS CNAME record). No
            proxying will be involved.  Must be a lowercase RFC-1123 hostname
            (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
            +optional
        externalTrafficPolicy:
          type: string
          description: |-
            externalTrafficPolicy describes how nodes distribute service traffic they
            receive on one of the Service's "externally-facing" addresses (NodePorts,
            ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
            the service in a way that assumes that external load balancers will take care
            of balancing the service traffic between nodes, and so each node will deliver
            traffic only to the node-local endpoints of the service, without masquerading
            the client source IP. (Traffic mistakenly sent to a node with no endpoints will
            be dropped.) The default value, "Cluster", uses the standard behavior of
            routing to all endpoints evenly (possibly modified by topology and other
            features). Note that traffic sent to an External IP or LoadBalancer IP from
            within the cluster will always get "Cluster" semantics, but clients sending to
            a NodePort from within the cluster may need to take traffic policy into account
            when picking a node.
            +optional
        healthCheckNodePort:
          type: integer
          description: |-
            healthCheckNodePort specifies the healthcheck nodePort for the service.
            This only applies when type is set to LoadBalancer and
            externalTrafficPolicy is set to Local. If a value is specified, is
            in-range, and is not in use, it will be used.  If not specified, a value
            will be automatically allocated.  External systems (e.g. load-balancers)
            can use this port to determine if a given node holds endpoints for this
            service or not.  If this field is specified when creating a Service
            which does not need it, creation will fail. This field will be wiped
            when updating a Service to no longer need it (e.g. changing type).
            This field cannot be updated once set.
            +optional
        internalTrafficPolicy:
          type: string
          description: |-
            InternalTrafficPolicy describes how nodes distribute service traffic they
            receive on the ClusterIP. If set to "Local", the proxy will assume that pods
            only want to talk to endpoints of the service on the same node as the pod,
            dropping the traffic if there are no local endpoints. The default value,
            "Cluster", uses the standard behavior of routing to all endpoints evenly
            (possibly modified by topology and other features).
            +optional
        ipFamilies:
          type: array
          description: |-
            IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
            service. This field is usually assigned automatically based on cluster
            configuration and the ipFamilyPolicy field. If this field is specified
            manually, the requested family is available in the cluster,
            and ipFamilyPolicy allows it, it will be used; otherwise creation of
            the service will fail. This field is conditionally mutable: it allows
            for adding or removing a secondary IP family, but it does not allow
            changing the primary IP family of the Service. Valid values are "IPv4"
            and "IPv6".  This field only applies to Services of types ClusterIP,
            NodePort, and LoadBalancer, and does apply to "headless" services.
            This field will be wiped when updating a Service to type ExternalName.

            This field may hold a maximum of two entries (dual-stack families, in
            either order).  These families must correspond to the values of the
            clusterIPs field, if specified. Both clusterIPs and ipFamilies are
            governed by the ipFamilyPolicy field.
            +listType=atomic
            +optional
          items:
            type: string
        ipFamilyPolicy:
          type: string
          description: |-
            IPFamilyPolicy represents the dual-stack-ness requested or required by
            this Service. If there is no value provided, then this field will be set
            to SingleStack. Services can be "SingleStack" (a single IP family),
            "PreferDualStack" (two IP families on dual-stack configured clusters or
            a single IP family on single-stack clusters), or "RequireDualStack"
            (two IP families on dual-stack configured clusters, otherwise fail). The
            ipFamilies and clusterIPs fields depend on the value of this field. This
            field will be wiped when updating a service to type ExternalName.
            +optional
        loadBalancerClass:
          type: string
          description: |-
            loadBalancerClass is the class of the load balancer implementation this Service belongs to.
            If specified, the value of this field must be a label-style identifier, with an optional prefix,
            e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
            This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
            balancer implementation is used, today this is typically done through the cloud provider integration,
            but should apply for any default implementation. If set, it is assumed that a load balancer
            implementation is watching for Services with a matching class. Any default load balancer
            implementation (e.g. cloud providers) should ignore Services that set this field.
            This field can only be set when creating or updating a Service to type 'LoadBalancer'.
            Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
            +optional
        loadBalancerIP:
          type: string
          description: |-
            Only applies to Service Type: LoadBalancer.
            This feature depends on whether the underlying cloud-provider supports specifying
            the loadBalancerIP when a load balancer is created.
            This field will be ignored if the cloud-provider does not support the feature.
            Deprecated: This field was under-specified and its meaning varies across implementations.
            Using it is non-portable and it may not support dual-stack.
            Users are encouraged to use implementation-specific annotations when available.
            +optional
        loadBalancerSourceRanges:
          type: array
          description: |-
            If specified and supported by the platform, this will restrict traffic through the cloud-provider
            load-balancer will be restricted to the specified client IPs. This field will be ignored if the
            cloud-provider does not support the feature."
            More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
            +optional
            +listType=atomic
          items:
            type: string
        ports:
          type: array
          description: |-
            The list of ports that are exposed by this service.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +patchMergeKey=port
            +patchStrategy=merge
            +listType=map
            +listMapKey=port
            +listMapKey=protocol
          items:
            $ref: '#/components/schemas/v1.ServicePort'
        publishNotReadyAddresses:
          type: boolean
          description: |-
            publishNotReadyAddresses indicates that any agent which deals with endpoints for this
            Service should disregard any indications of ready/not-ready.
            The primary use case for setting this field is for a StatefulSet's Headless Service to
            propagate SRV DNS records for its Pods for the purpose of peer discovery.
            The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
            Services interpret this to mean that all endpoints are considered "ready" even if the
            Pods themselves are not. Agents which consume only Kubernetes generated endpoints
            through the Endpoints or EndpointSlice resources can safely assume this behavior.
            +optional
        selector:
          type: object
          additionalProperties:
            type: string
          description: |-
            Route service traffic to pods with label keys and values matching this
            selector. If empty or not present, the service is assumed to have an
            external process managing its endpoints, which Kubernetes will not
            modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
            Ignored if type is ExternalName.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/
            +optional
            +mapType=atomic
        sessionAffinity:
          type: string
          description: |-
            Supports "ClientIP" and "None". Used to maintain session affinity.
            Enable client IP based session affinity.
            Must be ClientIP or None.
            Defaults to None.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +optional
        sessionAffinityConfig:
          $ref: '#/components/schemas/v1.SessionAffinityConfig'
        trafficDistribution:
          type: string
          description: |-
            TrafficDistribution offers a way to express preferences for how traffic is
            distributed to Service endpoints. Implementations can use this field as a
            hint, but are not required to guarantee strict adherence. If the field is
            not set, the implementation will apply its default routing strategy. If set
            to "PreferClose", implementations should prioritize endpoints that are
            topologically close (e.g., same zone).
            This is a beta field and requires enabling ServiceTrafficDistribution feature.
            +featureGate=ServiceTrafficDistribution
            +optional
        type:
          type: string
          description: |-
            type determines how the Service is exposed. Defaults to ClusterIP. Valid
            options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
            "ClusterIP" allocates a cluster-internal IP address for load-balancing
            to endpoints. Endpoints are determined by the selector or if that is not
            specified, by manual construction of an Endpoints object or
            EndpointSlice objects. If clusterIP is "None", no virtual IP is
            allocated and the endpoints are published as a set of endpoints rather
            than a virtual IP.
            "NodePort" builds on ClusterIP and allocates a port on every node which
            routes to the same endpoints as the clusterIP.
            "LoadBalancer" builds on NodePort and creates an external load-balancer
            (if supported in the current cloud) which routes to the same endpoints
            as the clusterIP.
            "ExternalName" aliases this service to the specified externalName.
            Several other fields do not apply to ExternalName services.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
            +optional
    v1.ServiceStatus:
      type: object
      properties:
        conditions:
          type: array
          description: |-
            Current service state
            +optional
            +patchMergeKey=type
            +patchStrategy=merge
            +listType=map
            +listMapKey=type
          items:
            $ref: '#/components/schemas/v1.Condition'
        loadBalancer:
          $ref: '#/components/schemas/v1.LoadBalancerStatus'
    v1.SessionAffinityConfig:
      type: object
      properties:
        clientIP:
          $ref: '#/components/schemas/v1.ClientIPConfig'
    v1.SleepAction:
      type: object
      properties:
        seconds:
          type: integer
          description: Seconds is the number of seconds to sleep.
    v1.Subject:
      type: object
      properties:
        apiGroup:
          type: string
          description: |-
            APIGroup holds the API group of the referenced subject.
            Defaults to "" for ServiceAccount subjects.
            Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
            +optional
        kind:
          type: string
          description: |-
            Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
            If the Authorizer does not recognized the kind value, the Authorizer should report an error.
        name:
          type: string
          description: Name of the object being referenced.
        namespace:
          type: string
          description: |-
            Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
            the Authorizer should report an error.
            +optional
    v1.TCPSocketAction:
      type: object
      properties:
        host:
          type: string
          description: |-
            Optional: Host name to connect to, defaults to the pod IP.
            +optional
        port:
          $ref: '#/components/schemas/intstr.IntOrString'
    v1.VolumeDevice:
      type: object
      properties:
        devicePath:
          type: string
          description: devicePath is the path inside of the container that the device
            will be mapped to.
        name:
          type: string
          description: name must match the name of a persistentVolumeClaim in the
            pod
    v1.VolumeMount:
      type: object
      properties:
        mountPath:
          type: string
          description: |-
            Path within the container at which the volume should be mounted.  Must
            not contain ':'.
        mountPropagation:
          type: string
          description: |-
            mountPropagation determines how mounts are propagated from the host
            to container and the other way around.
            When not set, MountPropagationNone is used.
            This field is beta in 1.10.
            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
            (which defaults to None).
            +optional
        name:
          type: string
          description: This must match the Name of a Volume.
        readOnly:
          type: boolean
          description: |-
            Mounted read-only if true, read-write otherwise (false or unspecified).
            Defaults to false.
            +optional
        recursiveReadOnly:
          type: string
          description: |-
            RecursiveReadOnly specifies whether read-only mounts should be handled
            recursively.

            If ReadOnly is false, this field has no meaning and must be unspecified.

            If ReadOnly is true, and this field is set to Disabled, the mount is not made
            recursively read-only.  If this field is set to IfPossible, the mount is made
            recursively read-only, if it is supported by the container runtime.  If this
            field is set to Enabled, the mount is made recursively read-only if it is
            supported by the container runtime, otherwise the pod will not be started and
            an error will be generated to indicate the reason.

            If this field is set to IfPossible or Enabled, MountPropagation must be set to
            None (or be unspecified, which defaults to None).

            If this field is not specified, it is treated as an equivalent of Disabled.

            +featureGate=RecursiveReadOnlyMounts
            +optional
        subPath:
          type: string
          description: |-
            Path within the volume from which the container's volume should be mounted.
            Defaults to "" (volume's root).
            +optional
        subPathExpr:
          type: string
          description: |-
            Expanded path within the volume from which the container's volume should be mounted.
            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
            Defaults to "" (volume's root).
            SubPathExpr and SubPath are mutually exclusive.
            +optional
    v1.WindowsSecurityContextOptions:
      type: object
      properties:
        gmsaCredentialSpec:
          type: string
          description: |-
            GMSACredentialSpec is where the GMSA admission webhook
            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
            GMSA credential spec named by the GMSACredentialSpecName field.
            +optional
        gmsaCredentialSpecName:
          type: string
          description: |-
            GMSACredentialSpecName is the name of the GMSA credential spec to use.
            +optional
        hostProcess:
          type: boolean
          description: |-
            HostProcess determines if a container should be run as a 'Host Process' container.
            All of a Pod's containers must have the same effective HostProcess value
            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
            In addition, if HostProcess is true then HostNetwork must also be set to true.
            +optional
        runAsUserName:
          type: string
          description: |-
            The UserName in Windows to run the entrypoint of the container process.
            Defaults to the user specified in image metadata if unspecified.
            May also be set in PodSecurityContext. If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
    v1beta1.ContainerMetrics:
      type: object
      properties:
        name:
          type: string
          description: Container name corresponding to the one from pod.spec.containers.
        usage:
          $ref: '#/components/schemas/v1.ResourceList'
    v1beta1.NodeMetrics:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        timestamp:
          type: string
          description: |-
            The following fields define time interval from which metrics were
            collected from the interval [Timestamp-Window, Timestamp].
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
        usage:
          $ref: '#/components/schemas/v1.ResourceList'
        window:
          $ref: '#/components/schemas/v1.Duration'
    v1beta1.NodeMetricsList:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        continue:
          type: string
          description: |-
            continue may be set if the user set a limit on the number of items returned, and indicates that
            the server has more data available. The value is opaque and may be used to issue another request
            to the endpoint that served this list to retrieve the next set of available objects. Continuing a
            consistent list may not be possible if the server configuration has changed or more than a few
            minutes have passed. The resourceVersion field returned when using this continue value will be
            identical to the value in the first response, unless you have received this token from an error
            message.
        items:
          type: array
          description: List of node metrics.
          items:
            $ref: '#/components/schemas/v1beta1.NodeMetrics'
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        remainingItemCount:
          type: integer
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this
            list response. If the list request contained label or field selectors, then the number of
            remaining items is unknown and the field will be left unset and omitted during serialization.
            If the list is complete (either because it is not chunking or because this is the last chunk),
            then there are no more remaining items and this field will be left unset and omitted during
            serialization.
            Servers older than v1.15 do not set this field.
            The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
            should not rely on the remainingItemCount to be set or to be exact.
            +optional
        resourceVersion:
          type: string
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
    v1beta1.PodMetrics:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        containers:
          type: array
          description: |-
            Metrics for all containers are collected within the same time window.
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1beta1.ContainerMetrics'
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        timestamp:
          type: string
          description: |-
            The following fields define time interval from which metrics were
            collected from the interval [Timestamp-Window, Timestamp].
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
        window:
          $ref: '#/components/schemas/v1.Duration'
    v1beta1.PodMetricsList:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        continue:
          type: string
          description: |-
            continue may be set if the user set a limit on the number of items returned, and indicates that
            the server has more data available. The value is opaque and may be used to issue another request
            to the endpoint that served this list to retrieve the next set of available objects. Continuing a
            consistent list may not be possible if the server configuration has changed or more than a few
            minutes have passed. The resourceVersion field returned when using this continue value will be
            identical to the value in the first response, unless you have received this token from an error
            message.
        items:
          type: array
          description: List of pod metrics.
          items:
            $ref: '#/components/schemas/v1beta1.PodMetrics'
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        remainingItemCount:
          type: integer
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this
            list response. If the list request contained label or field selectors, then the number of
            remaining items is unknown and the field will be left unset and omitted during serialization.
            If the list is complete (either because it is not chunking or because this is the last chunk),
            then there are no more remaining items and this field will be left unset and omitted during
            serialization.
            Servers older than v1.15 do not set this field.
            The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
            should not rely on the remainingItemCount to be set or to be exact.
            +optional
        resourceVersion:
          type: string
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
    v2.ContainerResourceMetricSource:
      type: object
      properties:
        container:
          type: string
          description: container is the name of the container in the pods of the scaling
            target
        name:
          type: string
          description: name is the name of the resource in question.
        target:
          $ref: '#/components/schemas/v2.MetricTarget'
    v2.ContainerResourceMetricStatus:
      type: object
      properties:
        container:
          type: string
          description: container is the name of the container in the pods of the scaling
            target
        current:
          $ref: '#/components/schemas/v2.MetricValueStatus'
        name:
          type: string
          description: name is the name of the resource in question.
    v2.CrossVersionObjectReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            apiVersion is the API version of the referent
            +optional
        kind:
          type: string
          description: "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        name:
          type: string
          description: "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
    v2.ExternalMetricSource:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
        target:
          $ref: '#/components/schemas/v2.MetricTarget'
    v2.ExternalMetricStatus:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/v2.MetricValueStatus'
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
    v2.HPAScalingPolicy:
      type: object
      properties:
        periodSeconds:
          type: integer
          description: |-
            periodSeconds specifies the window of time for which the policy should hold true.
            PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
        type:
          type: string
          description: type is used to specify the scaling policy.
        value:
          type: integer
          description: |-
            value contains the amount of change which is permitted by the policy.
            It must be greater than zero
    v2.HPAScalingRules:
      type: object
      properties:
        policies:
          type: array
          description: |-
            policies is a list of potential scaling polices which can be used during scaling.
            At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
            +listType=atomic
            +optional
          items:
            $ref: '#/components/schemas/v2.HPAScalingPolicy'
        selectPolicy:
          type: string
          description: |-
            selectPolicy is used to specify which policy should be used.
            If not set, the default value Max is used.
            +optional
        stabilizationWindowSeconds:
          type: integer
          description: |-
            stabilizationWindowSeconds is the number of seconds for which past recommendations should be
            considered while scaling up or scaling down.
            StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
            If not set, use the default values:
            - For scale up: 0 (i.e. no stabilization is done).
            - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
            +optional
    v2.HorizontalPodAutoscaler:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
            +listType=set
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
            +listType=atomic
          items:
            $ref: '#/components/schemas/v1.ManagedFieldsEntry'
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
            +listType=map
            +listMapKey=uid
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        spec:
          $ref: '#/components/schemas/v2.HorizontalPodAutoscalerSpec'
        status:
          $ref: '#/components/schemas/v2.HorizontalPodAutoscalerStatus'
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
    v2.HorizontalPodAutoscalerBehavior:
      type: object
      properties:
        scaleDown:
          $ref: '#/components/schemas/v2.HPAScalingRules'
        scaleUp:
          $ref: '#/components/schemas/v2.HPAScalingRules'
    v2.HorizontalPodAutoscalerCondition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          description: |-
            lastTransitionTime is the last time the condition transitioned from
            one status to another
            +optional
        message:
          type: string
          description: |-
            message is a human-readable explanation containing details about
            the transition
            +optional
        reason:
          type: string
          description: |-
            reason is the reason for the condition's last transition.
            +optional
        status:
          type: string
          description: "status is the status of the condition (True, False, Unknown)"
        type:
          type: string
          description: type describes the current condition
    v2.HorizontalPodAutoscalerSpec:
      type: object
      properties:
        behavior:
          $ref: '#/components/schemas/v2.HorizontalPodAutoscalerBehavior'
        maxReplicas:
          type: integer
          description: |-
            maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
            It cannot be less that minReplicas.
        metrics:
          type: array
          description: |-
            metrics contains the specifications for which to use to calculate the
            desired replica count (the maximum replica count across all metrics will
            be used).  The desired replica count is calculated multiplying the
            ratio between the target value and the current value by the current
            number of pods.  Ergo, metrics used must decrease as the pod count is
            increased, and vice-versa.  See the individual metric source types for
            more information about how each type of metric must respond.
            If not set, the default metric will be set to 80% average CPU utilization.
            +listType=atomic
            +optional
          items:
            $ref: '#/components/schemas/v2.MetricSpec'
        minReplicas:
          type: integer
          description: |-
            minReplicas is the lower limit for the number of replicas to which the autoscaler
            can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the
            alpha feature gate HPAScaleToZero is enabled and at least one Object or External
            metric is configured.  Scaling is active as long as at least one metric value is
            available.
            +optional
        scaleTargetRef:
          $ref: '#/components/schemas/v2.CrossVersionObjectReference'
    v2.HorizontalPodAutoscalerStatus:
      type: object
      properties:
        conditions:
          type: array
          description: |-
            conditions is the set of conditions required for this autoscaler to scale its target,
            and indicates whether or not those conditions are met.
            +patchMergeKey=type
            +patchStrategy=merge
            +listType=map
            +listMapKey=type
            +optional
          items:
            $ref: '#/components/schemas/v2.HorizontalPodAutoscalerCondition'
        currentMetrics:
          type: array
          description: |-
            currentMetrics is the last read state of the metrics used by this autoscaler.
            +listType=atomic
            +optional
          items:
            $ref: '#/components/schemas/v2.MetricStatus'
        currentReplicas:
          type: integer
          description: |-
            currentReplicas is current number of replicas of pods managed by this autoscaler,
            as last seen by the autoscaler.
            +optional
        desiredReplicas:
          type: integer
          description: |-
            desiredReplicas is the desired number of replicas of pods managed by this autoscaler,
            as last calculated by the autoscaler.
        lastScaleTime:
          type: string
          description: |-
            lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods,
            used by the autoscaler to control how often the number of pods is changed.
            +optional
        observedGeneration:
          type: integer
          description: |-
            observedGeneration is the most recent generation observed by this autoscaler.
            +optional
    v2.MetricIdentifier:
      type: object
      properties:
        name:
          type: string
          description: name is the name of the given metric
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
    v2.MetricSpec:
      type: object
      properties:
        containerResource:
          $ref: '#/components/schemas/v2.ContainerResourceMetricSource'
        external:
          $ref: '#/components/schemas/v2.ExternalMetricSource'
        object:
          $ref: '#/components/schemas/v2.ObjectMetricSource'
        pods:
          $ref: '#/components/schemas/v2.PodsMetricSource'
        resource:
          $ref: '#/components/schemas/v2.ResourceMetricSource'
        type:
          type: string
          description: |-
            type is the type of metric source.  It should be one of "ContainerResource", "External",
            "Object", "Pods" or "Resource", each mapping to a matching field in the object.
    v2.MetricStatus:
      type: object
      properties:
        containerResource:
          $ref: '#/components/schemas/v2.ContainerResourceMetricStatus'
        external:
          $ref: '#/components/schemas/v2.ExternalMetricStatus'
        object:
          $ref: '#/components/schemas/v2.ObjectMetricStatus'
        pods:
          $ref: '#/components/schemas/v2.PodsMetricStatus'
        resource:
          $ref: '#/components/schemas/v2.ResourceMetricStatus'
        type:
          type: string
          description: |-
            type is the type of metric source.  It will be one of "ContainerResource", "External",
            "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
    v2.MetricTarget:
      type: object
      properties:
        averageUtilization:
          type: integer
          description: |-
            averageUtilization is the target value of the average of the
            resource metric across all relevant pods, represented as a percentage of
            the requested value of the resource for the pods.
            Currently only valid for Resource metric source type
            +optional
        averageValue:
          $ref: '#/components/schemas/resource.Quantity'
        type:
          type: string
          description: "type represents whether the metric type is Utilization, Value,\
            \ or AverageValue"
        value:
          $ref: '#/components/schemas/resource.Quantity'
    v2.MetricValueStatus:
      type: object
      properties:
        averageUtilization:
          type: integer
          description: |-
            currentAverageUtilization is the current value of the average of the
            resource metric across all relevant pods, represented as a percentage of
            the requested value of the resource for the pods.
            +optional
        averageValue:
          $ref: '#/components/schemas/resource.Quantity'
        value:
          $ref: '#/components/schemas/resource.Quantity'
    v2.ObjectMetricSource:
      type: object
      properties:
        describedObject:
          $ref: '#/components/schemas/v2.CrossVersionObjectReference'
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
        target:
          $ref: '#/components/schemas/v2.MetricTarget'
    v2.ObjectMetricStatus:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/v2.MetricValueStatus'
        describedObject:
          $ref: '#/components/schemas/v2.CrossVersionObjectReference'
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
    v2.PodsMetricSource:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
        target:
          $ref: '#/components/schemas/v2.MetricTarget'
    v2.PodsMetricStatus:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/v2.MetricValueStatus'
        metric:
          $ref: '#/components/schemas/v2.MetricIdentifier'
    v2.ResourceMetricSource:
      type: object
      properties:
        name:
          type: string
          description: name is the name of the resource in question.
        target:
          $ref: '#/components/schemas/v2.MetricTarget'
    v2.ResourceMetricStatus:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/v2.MetricValueStatus'
        name:
          type: string
          description: name is the name of the resource in question.
    webhooks.webhookCreatePayload:
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          example: 1
        registryID:
          type: integer
          description: Registry Identifier
          example: 1
        resourceID:
          type: string
        webhookType:
          type: integer
          description: Type of webhook (1 - service)
    webhooks.webhookUpdatePayload:
      type: object
      properties:
        registryID:
          type: integer
          description: Registry Identifier
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
    jwt:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
